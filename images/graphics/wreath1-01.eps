%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: wreath1-01.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Alisa Foytik
%%CreationDate: 9/21/13
%%BoundingBox: 0 0 426 426
%%HiResBoundingBox: 0 0 425.2002 425.2002
%%CropBox: 0 0 425.2002 425.2002
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2013-09-21T20:52:09-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2013-09-21T20:52:09-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2013-09-21T20:52:09-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUJqmq6fpVm15fzCC3QgFyCdzsAAoJJ+WQyZIwFyNBBNMC8x/mhPa6vd2NgiS2og4W&#xA;9wnxMZ5EBVwa8eK8ulM1uftAiREeVfa1ymwOXWdZnszp1zfubKa45zzSM78nIAJY/EzKtK0A/hmt&#xA;OWZHCTtbXZe3+XrvR/0JZJYXaz2scawwyseJYxjiahqGu3TOhwShwDhNhvBFIXU9SvrPVGo1YiAV&#xA;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&#xA;2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>15.000118</stDim:w>
            <stDim:h>15.000118</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DocumentID>xmp.did:9f66fd1d-e02d-43a7-a369-8a4faacdefc0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9f66fd1d-e02d-43a7-a369-8a4faacdefc0</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:EA282C4F2C2068118A6DD2238C5D2D65</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ea591a8f-ca79-4f3d-b67f-4e5a49d0df47</stRef:instanceID>
            <stRef:documentID>xmp.did:ea591a8f-ca79-4f3d-b67f-4e5a49d0df47</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:EA282C4F2C2068118A6DD2238C5D2D65</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EA282C4F2C2068118A6DD2238C5D2D65</stEvt:instanceID>
                  <stEvt:when>2013-07-02T08:53:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F27F11740720681197A5BD5339313429</stEvt:instanceID>
                  <stEvt:when>2013-07-12T13:52:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F37F11740720681197A5BD5339313429</stEvt:instanceID>
                  <stEvt:when>2013-07-12T14:35:37-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c0766e4e-6b1e-4039-9a87-f12ce9817437</stEvt:instanceID>
                  <stEvt:when>2013-08-07T16:38:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea591a8f-ca79-4f3d-b67f-4e5a49d0df47</stEvt:instanceID>
                  <stEvt:when>2013-09-20T22:29-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9f66fd1d-e02d-43a7-a369-8a4faacdefc0</stEvt:instanceID>
                  <stEvt:when>2013-09-21T20:52:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -425.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 425.2 li
425.2 425.2 li
425.2 0 li
cp
clp
52.1888 164.249 mo
50.8741 162.766 51.673 160.047 52.6662 158.66 cv
54.0085 156.783 56.581 156.566 58.5915 157.236 cv
61.8099 158.309 62.4373 163.47 58.3258 163.378 cv
56.825 163.344 55.1708 162.677 55.767 160.957 cv
56.349 159.278 58.2257 158.935 58.8526 160.79 cv
58.6538 160.202 57.6824 160.404 57.6707 161.002 cv
57.6169 163.764 61.8693 162.358 60.7956 159.762 cv
59.5936 156.86 56.2178 156.252 54.1811 158.694 cv
52.1948 161.076 52.9168 163.949 55.4258 165.413 cv
54.2712 165.571 53.1537 165.338 52.1888 164.249 cv
cp
59.1459 154.038 mo
54.896 152.539 50.3931 154.982 48.8164 159.036 cv
47.4046 162.665 48.843 166.976 52.6249 168.254 cv
55.3499 169.175 60.854 168.45 62.2295 165.503 cv
62.2804 165.394 62.3312 165.284 62.382 165.175 cv
62.4403 165.051 62.465 164.934 62.4831 164.82 cv
63.2257 164.169 63.8047 163.315 64.1077 162.273 cv
65.207 158.501 62.55 155.239 59.1459 154.038 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.980392 .341176 .392157 rgb
f
68.5221 157.513 mo
68.1699 156.966 67.6959 156.454 67.061 155.995 cv
65.7147 155.018 63.9417 156.895 65.0801 158.145 cv
65.4229 158.523 65.8097 158.93 66.2091 159.36 cv
67.1229 161.142 65.537 163.681 64.5384 165.237 cv
63.9164 166.206 59.244 169.975 58.9875 170.18 cv
58.2749 170.745 58.0194 172.561 61.2127 172.14 cv
65.7826 171.537 70.0591 173.026 72.4293 167.806 cv
74.0946 164.138 71.0633 160.279 68.5221 157.513 cv
cp
f
54.3647 169.735 mo
48.8908 170.862 47.2109 165.373 46.8396 160.706 cv
47.0791 160.177 47.3251 159.658 47.56 159.159 cv
48.4119 157.346 45.5048 156.293 44.657 158.079 cv
42.4268 162.772 40.5405 168.641 44.7809 172.897 cv
47.8373 175.965 52.6088 174.846 55.5984 172.354 cv
56.7365 171.406 55.8464 169.429 54.3647 169.735 cv
cp
f
64.1187 152.387 mo
62.6738 148.776 59.635 145.618 55.4007 146.089 cv
51.1383 146.563 49.4498 150.671 47.2079 153.755 cv
46.1499 155.209 48.4133 156.801 49.4759 155.362 cv
49.5238 155.297 49.5681 155.226 49.6158 155.16 cv
49.7234 155.12 49.8292 155.06 49.9212 154.958 cv
52.801 151.742 58.7786 151.739 62.22 153.979 cv
63.3258 154.699 64.5951 153.579 64.1187 152.387 cv
cp
f
65.9863 173.653 mo
63.27 174.094 60.4943 174.325 57.8227 173.529 cv
57.3518 173.388 56.6902 173.564 56.5513 174.111 cv
56.2162 175.435 52.0429 176.754 51.4889 176.745 cv
50.1592 176.723 49.7582 178.455 50.9798 179.002 cv
53.5734 180.164 55.8625 180.184 58.6287 179.803 cv
61.2404 179.442 63.7731 178.111 66.4316 176.071 cv
67.6577 175.131 67.5928 173.391 65.9863 173.653 cv
cp
f
75.2618 158.945 mo
74.2264 151.912 71.3274 145.519 64.1298 144.12 cv
60.7272 143.458 63.3746 148.809 63.6619 149.658 cv
64.0503 150.807 64.5438 153.436 65.87 153.844 cv
66.1191 153.921 71.5326 156.518 72.1808 159.511 cv
72.6084 161.485 75.5571 160.946 75.2618 158.945 cv
cp
f
50.7428 144.936 mo
42.8137 145.437 34.6259 156.516 37.8694 163.738 cv
40.8293 170.328 40.1522 158.957 45.5944 156.635 cv
45.9626 156.479 46.2308 156.052 46.2625 155.676 cv
46.5241 152.575 47.9103 148.554 51.2193 147.531 cv
52.8499 147.026 52.4488 144.829 50.7428 144.936 cv
cp
f
46.7611 175.683 mo
44.8729 175.133 43.0758 174.088 41.6685 172.742 cv
39.002 170.192 39.7461 163.695 37.1083 167.48 cv
34.8034 170.787 34.0116 175.006 37.5389 178.15 cv
40.2633 180.578 44.409 179.719 47.141 177.881 cv
47.9293 177.35 47.6431 175.939 46.7611 175.683 cv
cp
f
76.9513 161.844 mo
76.1266 160.618 74.5957 161.796 74.6752 162.915 cv
75.2105 170.463 66.6152 173.644 68.5648 175.359 cv
71.1473 177.63 75.8348 175.766 77.9857 173.135 cv
81.014 169.434 79.3195 165.359 76.9513 161.844 cv
cp
f
59.8915 180.631 mo
56.6389 182.543 51.4477 182.395 48.5633 179.864 cv
48.2785 179.613 47.7955 179.617 47.471 179.768 cv
47.1857 179.902 44.1137 180.528 43.4783 180.716 cv
43.3596 180.751 39.8815 181.427 41.4658 183.374 cv
46.0361 188.993 57.5621 188.789 61.7305 182.823 cv
62.5324 181.676 61.2223 179.85 59.8915 180.631 cv
cp
f
68.3072 176.419 mo
67.6974 176.497 61.987 179.66 62.5546 181.021 cv
63.2302 182.645 68.1809 183.907 70.0605 182.987 cv
71.9834 182.048 72.9067 179.87 73.514 177.954 cv
73.8219 176.985 69.3074 176.293 68.3072 176.419 cv
cp
f
336.096 341.405 mo
339.016 340.471 341.449 338.177 343.876 336.387 cv
350.698 331.36 357.863 329.609 357.863 329.609 cv
351.281 326.195 341.747 324.434 339.32 324.269 cv
330.316 323.662 321.211 328.092 314.713 334.05 cv
313.14 335.492 314.804 337.693 316.662 337.016 cv
320.428 335.645 324.483 339.759 327.691 341.115 cv
330.509 342.304 333.192 342.333 336.096 341.405 cv
cp
.615686 .737255 .435294 rgb
f
317.561 333.594 mo
319.871 331.437 324.516 331.95 327.485 331.834 cv
331.13 331.695 335.311 331.664 338.566 333.52 cv
338.834 333.672 339.108 333.285 338.84 333.121 cv
335.316 330.957 330.81 331.046 326.819 331.177 cv
324.675 331.246 321.739 331.023 319.394 331.711 cv
325.377 327.574 333.84 328.33 340.773 328.734 cv
341.038 328.749 341.057 328.362 340.798 328.328 cv
333.512 327.387 322.225 326.689 316.873 332.872 cv
316.752 333.013 316.795 333.179 316.901 333.295 cv
316.926 333.594 317.281 333.856 317.561 333.594 cv
cp
.490196 .623529 .239216 rgb
f
318.055 334.6 mo
322.618 332.21 329.162 335.568 333.79 336.606 cv
334.106 336.676 334.281 336.215 333.956 336.119 cv
330.974 335.243 328.008 334.265 324.954 333.662 cv
322.981 333.273 319.248 332.322 317.666 334.149 cv
317.457 334.389 317.795 334.736 318.055 334.6 cv
cp
f
300.938 330.323 mo
300.888 330.323 300.836 330.316 300.786 330.3 cv
300.514 330.216 300.361 329.927 300.446 329.656 cv
302.807 322.01 311.921 316.68 322.473 310.508 cv
335.855 302.68 351.022 293.81 357.567 277.592 cv
357.675 277.328 357.975 277.202 358.238 277.307 cv
358.502 277.414 358.63 277.714 358.523 277.978 cv
351.847 294.521 336.518 303.487 322.994 311.398 cv
312.627 317.461 303.674 322.698 301.43 329.96 cv
301.362 330.181 301.158 330.323 300.938 330.323 cv
cp
.615686 .737255 .435294 rgb
f
361.677 273.388 mo
361.599 272.267 360.323 271.966 359.461 272.247 cv
357.257 272.962 355.364 275.033 354.309 277.032 cv
353.669 278.247 352.935 281.216 354.315 282.173 cv
354.738 282.936 355.637 283.458 356.513 282.95 cv
359.753 281.078 361.94 277.124 361.677 273.388 cv
cp
f
353.237 291.302 mo
353.054 291.272 351.303 291.74 350.778 292.352 cv
352.958 294.585 356.04 295.988 359.081 296.039 cv
357.786 293.803 355.773 291.697 353.237 291.302 cv
cp
f
363.562 295 mo
364.027 294.754 364.479 294.468 364.913 294.126 cv
365.289 293.828 365.473 293.415 365.504 292.985 cv
363.808 292.056 362.002 291.292 360.122 290.875 cv
361.567 292.013 362.679 293.43 363.562 295 cv
cp
f
358.844 290.646 mo
358.801 290.64 358.76 290.632 358.718 290.627 cv
357.626 290.494 356.023 290.436 354.491 290.668 cv
356.934 291.487 358.892 293.727 360.113 296.004 cv
361.005 295.927 361.886 295.721 362.73 295.387 cv
361.806 293.751 358.784 290.833 358.844 290.646 cv
cp
f
345.901 280.452 mo
344.157 282.26 343.304 284.498 344.112 286.999 cv
344.685 288.763 346.441 291.374 348.399 292.263 cv
348.343 288.098 348.114 283.929 345.901 280.452 cv
cp
f
364.751 291.337 mo
362.374 289.625 360.159 288.23 357.184 287.896 cv
355.395 287.694 353.706 288.195 352.138 288.972 cv
351.884 288.908 351.629 288.9 351.385 288.939 cv
351.506 285.716 351.135 282.75 348.587 280.376 cv
348.064 279.888 347.291 279.617 346.626 279.885 cv
349.021 283.605 349.264 288.055 349.322 292.541 cv
349.396 292.552 349.468 292.567 349.544 292.571 cv
349.545 292.572 349.547 292.573 349.55 292.572 cv
350.777 290.25 354.369 289.505 356.758 289.568 cv
359.753 289.649 362.56 290.502 365.188 291.807 cv
365.07 291.629 364.93 291.465 364.751 291.337 cv
cp
f
350.986 300.794 mo
352.768 301.488 354.631 302.318 356.221 303.468 cv
356.17 303.371 356.112 303.28 356.039 303.194 cv
354.231 301.062 352.603 298.625 349.962 297.433 cv
348.141 296.613 346.499 296.642 344.845 297.127 cv
343.562 297.007 342.129 297.612 341.516 298.768 cv
344.715 298.448 348.059 299.656 350.986 300.794 cv
cp
f
353.792 306.629 mo
354.536 306.29 355.241 305.866 355.874 305.344 cv
356.09 305.167 356.235 304.931 356.316 304.679 cv
354.911 303.487 353.159 302.586 351.44 301.921 cv
352.545 303.313 353.247 304.924 353.792 306.629 cv
cp
f
349.861 301.534 mo
349.793 301.47 349.76 301.401 349.741 301.328 cv
349.741 301.328 li
348.222 300.855 346.687 300.294 345.128 299.95 cv
347.627 301.699 347.793 304.908 349.102 307.526 cv
350.394 307.593 351.706 307.398 352.939 306.971 cv
352.298 304.942 351.451 303.048 349.861 301.534 cv
cp
f
343.515 299.685 mo
342.756 299.61 341.988 299.609 341.211 299.726 cv
340.886 301.508 341.737 303.093 342.869 304.495 cv
344.21 306.155 346.107 307.111 348.127 307.422 cv
347.017 304.7 345.583 300.895 343.515 299.685 cv
cp
f
333.24 292.214 mo
332.854 291.346 331.801 291.241 331.101 291.754 cv
328.339 293.778 325.71 297.131 325.477 300.656 cv
325.321 303.082 326.699 305.904 328.987 305.851 cv
329.116 306.381 329.625 306.794 330.239 306.448 cv
334.91 303.801 335.233 296.665 333.24 292.214 cv
cp
f
323.856 311.944 mo
324.768 314.014 327.756 314.892 329.754 315.316 cv
331.394 315.665 333.527 315.971 335.415 315.653 cv
336.685 315.76 339.923 315.157 340.198 313.818 cv
335.498 310.871 328.895 309.402 323.856 311.944 cv
cp
f
339.405 312.295 mo
338.036 310.939 336.1 309.333 334.052 308.169 cv
333.051 308.459 332.223 309.081 331.492 309.82 cv
334.255 310.1 337.01 311.002 339.405 312.295 cv
cp
f
332.964 307.603 mo
332.054 307.168 331.134 306.84 330.245 306.679 cv
327.69 306.223 323.433 307.503 323.579 310.782 cv
323.582 310.87 323.599 310.954 323.612 311.039 cv
325.674 310.04 327.979 309.66 330.311 309.743 cv
331.065 308.88 331.938 308.091 332.964 307.603 cv
cp
f
310.922 310.571 mo
311.95 309.022 313.092 307.556 314.271 306.201 cv
311.958 307.154 306.616 312.435 306.431 314.803 cv
306.108 316.216 306.239 317.691 307.184 318.703 cv
307.88 315.849 309.24 313.112 310.907 310.596 cv
310.912 310.588 310.918 310.581 310.922 310.571 cv
cp
f
312.326 318.769 mo
312.33 318.769 312.332 318.765 312.337 318.764 cv
315.907 317.555 320.406 317.915 323.871 319.688 cv
323.93 319.57 323.985 319.449 324.031 319.325 cv
324.45 318.209 319.393 315.045 317.448 314.641 cv
316.393 314.422 315.251 314.427 314.297 314.762 cv
314.584 314.149 314.92 313.351 315.217 312.483 cv
312.872 313.121 310.49 315.013 309.067 316.537 cv
308.979 316.632 308.878 316.668 308.782 316.672 cv
308.456 317.545 308.169 318.426 307.972 319.322 cv
308.141 319.418 308.316 319.507 308.512 319.585 cv
309.975 320.163 311.223 319.371 312.207 318.219 cv
312.231 318.41 312.272 318.592 312.326 318.769 cv
cp
f
312.707 319.61 mo
314.579 322.581 320.969 323.04 323.349 320.43 cv
320.155 318.83 315.974 318.55 312.707 319.61 cv
cp
f
315.911 309.62 mo
316.068 308.364 315.965 307.184 315.348 306.366 cv
314.357 307.478 313.381 308.683 312.47 309.956 cv
313.613 309.667 314.755 309.547 315.911 309.62 cv
cp
f
311.644 311.154 mo
310.887 312.308 310.19 313.507 309.599 314.742 cv
311.242 313.286 313.387 311.916 315.525 311.494 cv
315.616 311.175 315.69 310.854 315.759 310.53 cv
314.374 310.459 313.019 310.686 311.644 311.154 cv
cp
f
318.013 330.438 mo
317.431 327.914 316.544 323.639 313.621 322.67 cv
313.386 322.591 313.131 322.594 312.901 322.67 cv
312.767 322.609 312.609 322.597 312.439 322.688 cv
309.68 324.159 307.717 328.149 308.21 331.291 cv
308.93 335.872 312.643 337.702 316.261 339.893 cv
316.796 340.217 317.484 340.16 317.864 339.619 cv
319.714 337.004 318.669 333.292 318.013 330.438 cv
cp
.980392 .341176 .392157 rgb
f
317.746 342.968 mo
317.741 342.943 317.731 342.923 317.726 342.897 cv
317.887 342.631 317.871 342.278 317.53 342.021 cv
313.894 339.297 309.045 339.831 304.942 341.448 cv
302.582 342.377 301.095 343.637 299.9 345.883 cv
298.687 348.159 297.214 350.285 296.842 352.879 cv
296.771 353.373 297.134 353.99 297.628 354.123 cv
302.744 355.506 307.27 353.432 311.787 351.146 cv
314.835 349.603 318.434 346.774 317.746 342.968 cv
cp
f
296.757 328.227 mo
296.298 327.461 295.916 326.849 295.074 326.44 cv
293.32 325.589 291.714 324.72 290.027 323.739 cv
286.303 321.573 284.449 325.797 283.707 328.728 cv
282.465 333.634 281.98 339.084 284.801 343.531 cv
284.943 343.753 285.124 343.905 285.321 344.007 cv
285.181 344.302 285.458 344.739 285.819 344.651 cv
290.74 343.451 293.697 338.685 295.78 334.4 cv
296.524 332.873 297.772 329.924 296.757 328.227 cv
cp
f
306.404 317.951 mo
301.147 316.098 292.902 317.006 289.253 321.599 cv
288.916 322.022 289.368 322.438 289.788 322.36 cv
289.764 322.743 289.888 323.141 290.239 323.456 cv
291.42 324.512 293.365 324.844 294.812 325.385 cv
297.687 326.462 301.116 327.231 303.587 329.075 cv
304.464 329.728 305.755 328.894 305.538 327.827 cv
305.003 325.194 304.42 321.776 306.723 319.803 cv
307.335 319.277 307.185 318.227 306.404 317.951 cv
cp
f
295.998 339.432 mo
295.558 338.908 294.567 338.86 294.192 339.507 cv
292.909 341.724 290.329 344.477 287.754 345.115 cv
287.38 345.207 287.135 345.432 287.001 345.702 cv
286.635 345.674 286.285 346.063 286.601 346.414 cv
288.292 348.288 289.234 351.073 291.59 352.267 cv
293.96 353.468 295.843 352.887 296.913 350.472 cv
297.442 349.273 297.846 348.33 298.654 347.277 cv
299.267 346.479 300.365 345.295 300.386 344.204 cv
300.439 341.579 297.404 341.107 295.998 339.432 cv
cp
f
310.882 320.017 mo
303.805 316.547 306.645 330.771 307.012 332.453 cv
307.102 332.876 307.767 332.745 307.663 332.334 cv
306.63 328.256 309.629 322.606 310.716 321.943 cv
311.099 321.709 311.277 321.429 311.327 320.98 cv
311.371 320.604 311.215 320.179 310.882 320.017 cv
cp
f
300.974 329.037 mo
300.78 328.74 300.456 328.514 300.127 328.395 cv
299.598 328.206 298.806 328.291 298.513 328.836 cv
298.446 328.959 298.401 329.096 298.38 329.234 cv
298.168 329.572 298.115 330.008 298.282 330.449 cv
298.617 331.339 299.658 331.585 300.475 331.284 cv
300.827 331.154 301.125 330.792 301.228 330.438 cv
301.379 329.927 301.258 329.473 300.974 329.037 cv
cp
f
299.098 331.866 mo
298.587 331.724 298.156 331.826 297.725 332.124 cv
297.222 332.471 297.078 333.114 297.111 333.677 cv
297.129 333.998 297.435 334.295 297.718 334.4 cv
297.868 334.457 298.016 334.459 298.161 334.439 cv
298.501 334.617 298.939 334.751 299.309 334.636 cv
299.828 334.474 300.17 334.11 300.227 333.554 cv
300.298 332.856 299.779 332.059 299.098 331.866 cv
cp
f
300.158 336.938 mo
299.817 336.056 298.63 335.853 297.95 336.467 cv
297.918 336.495 297.893 336.527 297.866 336.558 cv
297.763 336.606 297.666 336.662 297.568 336.73 cv
297.203 336.981 297.058 337.536 297.158 337.949 cv
297.388 338.895 298.635 339.368 299.477 338.929 cv
300.203 338.55 300.444 337.676 300.158 336.938 cv
cp
f
308.506 335.945 mo
308.093 335.894 307.793 336.125 307.645 336.433 cv
307.483 336.621 307.397 336.858 307.435 337.147 cv
307.458 337.322 307.527 337.498 307.612 337.653 cv
307.719 337.845 307.889 338.055 307.934 338.184 cv
308.111 338.696 308.787 338.724 309.159 338.45 cv
309.476 338.218 309.667 337.787 309.73 337.411 cv
309.858 336.65 309.216 336.031 308.506 335.945 cv
cp
f
306.616 333.051 mo
306.472 332.608 305.883 332.401 305.467 332.492 cv
305.07 332.582 304.683 332.858 304.462 333.198 cv
304.283 333.472 304.233 333.817 304.345 334.113 cv
304.342 334.199 304.344 334.285 304.349 334.376 cv
304.374 334.755 304.627 335.006 304.945 335.174 cv
305.488 335.46 306.069 334.935 306.342 334.52 cv
306.645 334.058 306.793 333.591 306.616 333.051 cv
cp
f
303.952 330.841 mo
303.577 330.496 302.985 330.301 302.506 330.594 cv
302.201 330.783 301.979 331.023 301.946 331.399 cv
301.923 331.664 302.027 331.926 302.198 332.126 cv
302.301 332.363 302.501 332.57 302.681 332.722 cv
303.148 333.12 303.822 332.789 304.038 332.303 cv
304.235 331.863 304.358 331.217 303.952 330.841 cv
cp
f
303.473 334.403 mo
302.977 334.074 302.309 333.823 301.741 334.149 cv
301.423 334.33 301.218 334.58 301.077 334.919 cv
301.027 335.038 301.003 335.157 300.994 335.273 cv
300.972 335.363 300.951 335.456 300.936 335.549 cv
300.867 335.945 301.164 336.269 301.488 336.424 cv
302.334 336.83 303.178 336.537 303.711 335.797 cv
304.023 335.366 303.924 334.704 303.473 334.403 cv
cp
f
306.289 337.34 mo
305.645 336.532 304.225 336.853 304.094 337.91 cv
304.067 338.114 304.128 338.309 304.238 338.471 cv
304.199 338.604 304.183 338.745 304.194 338.894 cv
304.221 339.286 304.604 339.59 304.978 339.627 cv
305.345 339.661 305.737 339.523 306.027 339.299 cv
306.617 338.841 306.762 337.937 306.289 337.34 cv
cp
f
302.477 338.635 mo
302.103 338.552 301.774 338.725 301.471 338.918 cv
301.198 338.987 300.955 339.177 300.863 339.456 cv
300.684 340.013 300.701 340.618 301.095 341.081 cv
301.485 341.537 302.144 341.652 302.686 341.425 cv
303.29 341.17 303.554 340.561 303.657 339.957 cv
303.779 339.248 303.061 338.763 302.477 338.635 cv
cp
f
362.798 129.081 mo
362.002 126.975 359.004 128.156 359.174 130.126 cv
356.556 132.093 357.215 137.019 355.72 139.733 cv
353.749 143.309 348.828 148.371 353.41 152.297 cv
357.013 155.381 361.257 152.768 363.023 149.031 cv
366.17 142.371 365.338 135.795 362.798 129.081 cv
cp
f
358.543 126.34 mo
356.003 123.091 352.428 121.883 348.439 121.448 cv
346.085 121.191 341.885 121.461 340.385 123.645 cv
339.8 123.568 339.168 123.964 339.345 124.679 cv
341.441 133.123 352.492 134.085 358.304 129.088 cv
359.13 128.377 359.204 127.185 358.543 126.34 cv
cp
f
352.565 152.805 mo
351.706 148.402 348.954 145.431 345.325 142.977 cv
343.48 141.729 341.663 141.002 339.5 140.507 cv
337.503 140.049 334.939 140.007 333.258 138.731 cv
332.182 137.915 331.046 138.408 330.477 139.286 cv
330.197 139.336 329.932 139.55 329.899 139.863 cv
329.47 143.994 332.038 148.083 335.221 150.561 cv
339.917 154.216 344.626 154.648 350.402 155.182 cv
351.699 155.302 352.817 154.092 352.565 152.805 cv
cp
f
337.969 126.209 mo
337.878 125.862 337.682 125.536 337.407 125.312 cv
335.168 123.488 332.809 127.452 331.967 128.954 cv
331.259 130.218 330.672 131.527 330.324 132.934 cv
330.179 133.521 330.026 134.111 329.945 134.71 cv
329.931 134.819 329.936 134.923 329.947 135.027 cv
329.569 135.98 329.984 137.386 331.318 137.669 cv
334.591 138.365 338.657 139.939 341.027 136.59 cv
343.774 132.708 340.769 128.885 337.969 126.209 cv
cp
f
346.673 132.897 mo
346.071 132.444 345.099 132.443 344.553 133.005 cv
344.4 133.164 344.29 133.347 344.216 133.538 cv
344.007 133.781 343.912 134.078 343.9 134.442 cv
343.884 134.852 344.105 135.327 344.534 135.447 cv
344.962 135.565 345.292 135.54 345.7 135.389 cv
345.805 135.351 345.905 135.309 346.003 135.263 cv
345.991 135.269 346.31 135.092 346.18 135.133 cv
346.608 135.001 346.955 134.787 347.119 134.344 cv
347.319 133.811 347.119 133.232 346.673 132.897 cv
cp
f
348.046 138.003 mo
347.464 137.475 346.787 137.354 346.183 137.533 cv
346.058 137.495 345.922 137.467 345.767 137.467 cv
344.712 137.467 344.201 138.446 344.337 139.236 cv
344.348 139.368 344.376 139.504 344.442 139.647 cv
344.785 140.406 345.512 141.148 346.414 141.11 cv
347.48 141.067 348.112 140.373 348.483 139.419 cv
348.697 138.865 348.45 138.371 348.046 138.003 cv
cp
f
350.781 134.953 mo
350.378 134.81 349.904 134.771 349.523 135.001 cv
349.324 135.122 349.207 135.234 349.06 135.396 cv
349.051 135.399 349.049 135.399 349.039 135.403 cv
347.822 135.874 348.594 137.717 349.761 137.416 cv
350.032 137.557 350.324 137.617 350.691 137.493 cv
351.047 137.374 351.185 136.981 351.242 136.655 cv
351.244 136.642 351.249 136.619 351.254 136.597 cv
351.287 136.485 351.333 136.376 351.385 136.271 cv
351.622 135.772 351.271 135.128 350.781 134.953 cv
cp
f
355.568 134.009 mo
354.706 133.092 353.549 132.96 352.501 133.653 cv
352.031 133.964 351.944 134.488 352.092 134.958 cv
352.035 135.277 352.092 135.626 352.336 135.975 cv
353.081 137.05 354.611 136.466 355.409 135.819 cv
355.931 135.396 356.041 134.514 355.568 134.009 cv
cp
f
351.713 140.7 mo
350.947 140.173 349.624 140.272 349.342 141.324 cv
349.176 141.947 349.407 142.637 349.962 142.922 cv
350.081 143.064 350.223 143.197 350.378 143.317 cv
351.115 143.891 352.042 143.286 352.179 142.485 cv
352.29 141.82 352.363 141.148 351.713 140.7 cv
cp
f
354.421 138.598 mo
354.255 137.595 352.722 137.14 352.172 138.101 cv
351.958 138.473 351.94 138.77 351.892 139.164 cv
351.837 139.572 352.054 140.024 352.372 140.25 cv
352.913 140.635 353.59 140.464 353.99 139.974 cv
354.315 139.572 354.508 139.128 354.421 138.598 cv
cp
f
343.501 137.64 mo
343.282 137.113 342.716 136.938 342.203 136.962 cv
341.782 136.982 341.446 137.286 341.199 137.598 cv
340.926 137.945 340.937 138.418 341.094 138.807 cv
341.103 138.829 341.118 138.848 341.128 138.87 cv
341.242 139.644 342.235 139.962 342.871 139.66 cv
343.622 139.304 343.789 138.337 343.501 137.64 cv
cp
f
360.52 104.806 mo
356.631 107.451 350.41 108.999 349.035 114.135 cv
348.96 114.42 348.983 114.722 349.073 115.005 cv
349.064 115.015 349.053 115.023 349.044 115.034 cv
348.435 115.687 349.304 116.774 349.954 116.118 cv
349.965 116.107 349.976 116.098 349.987 116.088 cv
350.42 116.291 350.929 116.256 351.376 115.786 cv
352.211 114.901 352.984 114.065 353.808 113.29 cv
354.47 112.923 355.149 112.583 355.844 112.269 cv
355.817 112.37 355.79 112.472 355.761 112.571 cv
355.035 115.171 352.356 115.994 350.055 116.766 cv
348.353 117.336 349.292 120.174 351.017 119.75 cv
357.942 118.046 360.833 113.03 363.348 106.801 cv
364.076 104.999 361.9 103.868 360.52 104.806 cv
cp
.615686 .737255 .435294 rgb
f
368.237 147.847 mo
367.184 146.448 365.278 148.16 366.2 149.557 cv
367.907 152.153 367.228 154.963 367.034 157.701 cv
366.252 156.692 365.544 155.613 365.145 154.512 cv
365.154 153.77 365.271 153.07 365.536 152.459 cv
365.829 151.792 365.614 151.233 365.193 150.886 cv
365.268 150.178 364.182 149.851 363.785 150.549 cv
363.355 150.64 362.96 150.909 362.734 151.416 cv
360.456 156.552 364.654 164.684 369.625 166.742 cv
370.503 167.106 371.58 166.421 371.632 165.472 cv
371.982 158.962 372.358 153.311 368.237 147.847 cv
cp
f
331.082 154.437 mo
330.395 154.972 329.708 155.417 329.018 155.796 cv
327.704 156.158 326.093 156.022 324.59 155.76 cv
326.697 154.773 329.311 155.173 331.541 153.967 cv
331.902 153.772 332.047 153.422 332.016 153.092 cv
332.511 152.429 332.552 151.477 331.642 150.92 cv
325.259 147.018 319.745 152.514 316.226 157.587 cv
315.437 158.724 316.231 160.005 317.457 160.246 cv
322.731 161.284 327.276 160.835 331.561 157.967 cv
332.108 157.675 332.626 157.31 333.093 156.834 cv
334.491 155.414 332.702 153.178 331.082 154.437 cv
cp
f
288.234 362.581 mo
290.443 361.683 290.846 359.771 289.943 356.702 cv
289.087 353.799 290.901 348.775 286.743 348.091 cv
283.911 347.625 280.721 349.414 278.158 351.097 cv
274.563 352.689 271.089 355.696 268.497 357.868 cv
268.477 357.873 268.458 357.868 268.435 357.872 cv
265.778 358.525 266.653 361.153 268.339 362.34 cv
271.399 364.501 275.389 365.568 278.979 366.438 cv
281.533 367.055 285.632 368.22 288.148 366.849 cv
290.163 365.751 289.404 363.993 288.234 362.581 cv
cp
.960784 .643137 .54902 rgb
f
255.983 346.678 mo
255.454 345.707 253.857 343.812 252.523 343.872 cv
251.53 343.916 250.693 344.47 249.883 345.052 cv
249.771 344.466 249.69 343.872 249.7 343.222 cv
249.716 342.323 248.745 341.951 248.031 342.286 cv
245.254 343.59 243.907 346.61 242.897 349.334 cv
241.974 351.824 240.791 356.206 241.951 358.775 cv
241.958 358.789 241.967 358.794 241.98 358.806 cv
242.035 359.156 242.111 359.505 242.221 359.849 cv
242.336 360.211 242.637 360.579 243.034 360.646 cv
243.219 360.677 243.401 360.707 243.582 360.739 cv
243.684 360.757 243.789 360.749 243.892 360.742 cv
244.404 360.995 244.981 361.168 245.588 361.247 cv
249.115 361.694 251.745 358.342 253.682 355.894 cv
255.896 353.103 257.87 350.139 255.983 346.678 cv
cp
f
275.129 375.581 mo
273.085 370.995 266.878 366.129 261.632 367.209 cv
261.014 366.83 260.171 366.869 259.752 367.705 cv
259.708 367.789 259.688 367.877 259.649 367.961 cv
259.554 368.013 259.456 368.05 259.362 368.106 cv
259.093 368.274 259.145 368.663 259.354 368.82 cv
258.875 370.708 259.501 372.574 260.331 374.42 cv
261.515 377.048 261.721 379.214 262.12 382.027 cv
262.431 384.214 263.246 385.175 265.505 385.42 cv
267.142 385.599 268.126 384.246 268.64 382.819 cv
270.817 383.264 273.078 383.317 274.864 381.778 cv
276.681 380.215 275.946 377.418 275.129 375.581 cv
cp
f
253.138 381.23 mo
252.945 377.225 247.953 376.354 245.208 374.593 cv
242 372.532 237.998 369.568 234.055 370.344 cv
233.202 370.244 232.55 370.551 232.045 371.145 cv
230.133 373.415 230.624 379.788 231.066 382.204 cv
231.717 385.791 236.209 399.514 241.76 396.535 cv
243.228 395.748 243.663 394.61 243.895 393.01 cv
244.374 389.685 245.517 390.459 247.984 390.161 cv
250.705 389.834 251.183 387.382 249.197 385.479 cv
249.422 385.094 249.768 384.87 250.143 384.611 cv
251.537 383.659 253.026 383.864 253.136 381.753 cv
253.144 381.572 253.145 381.396 253.138 381.23 cv
cp
f
287.728 352.792 mo
285.93 349.203 280.25 351.669 277.749 352.745 cv
275.493 353.716 273.333 354.933 271.313 356.33 cv
270.769 356.708 270.233 357.178 269.682 357.63 cv
269.125 357.675 268.605 357.848 268.172 358.3 cv
268.007 358.47 267.908 358.666 267.84 358.865 cv
267.819 358.876 267.803 358.891 267.78 358.898 cv
267.218 359.149 267.437 359.906 267.914 360.093 cv
267.924 360.117 267.926 360.141 267.937 360.164 cv
268.805 361.922 272.093 361.605 273.732 361.707 cv
274.617 361.762 275.498 361.78 276.38 361.783 cv
276.803 361.95 277.238 361.922 277.621 361.765 cv
279.244 361.717 280.861 361.579 282.468 361.315 cv
286.599 360.632 289.844 357.017 287.728 352.792 cv
cp
1 .866667 .831373 rgb
f
272.086 373.506 mo
271.025 371.071 268.295 369.268 265.605 368.4 cv
265.061 367.92 264.295 367.706 263.634 367.941 cv
263.479 367.92 263.316 367.881 263.165 367.866 cv
262.334 367.781 262.084 368.78 262.476 369.344 cv
262.322 370.198 262.822 371.054 263.232 371.9 cv
264.408 374.323 267.549 383.293 271.517 381.202 cv
273.948 379.919 272.885 375.341 272.086 373.506 cv
cp
f
255.128 349.668 mo
252.278 344.17 246.28 352.048 244.712 354.551 cv
244.203 355.365 243.425 356.499 243.441 357.496 cv
243.449 358.181 243.839 358.775 244.377 359.072 cv
244.031 359.602 244.231 360.463 245.025 360.381 cv
249.611 359.902 258.167 355.54 255.128 349.668 cv
cp
f
245.554 380.916 mo
244.552 378.55 242.479 377.106 240.519 375.597 cv
239.606 374.892 238.715 374.162 237.851 373.402 cv
238.494 372.139 237.832 370.616 236.349 370.391 cv
235.645 369.853 234.594 369.759 233.808 370.329 cv
233.472 370.442 233.21 370.649 232.92 370.879 cv
232.344 371.333 232.283 372.181 232.41 372.836 cv
232.422 372.886 232.444 372.933 232.457 372.983 cv
232.359 373.508 232.392 374.072 232.578 374.635 cv
230.177 379.786 231.371 388.294 235.436 392.01 cv
237.365 393.772 239.566 392.896 240.962 391.062 cv
241.814 389.944 242.184 388.458 242.267 386.931 cv
242.98 387.071 243.725 386.986 244.468 386.549 cv
246.474 385.368 246.343 382.777 245.554 380.916 cv
cp
f
264.783 360.829 mo
239.681 368.364 213.004 365.736 187.409 362.619 cv
186.117 362.463 185.537 364.384 186.885 364.637 cv
212.42 369.397 240.312 370.956 265.153 362.132 cv
265.965 361.843 265.629 360.573 264.783 360.829 cv
cp
.615686 .737255 .435294 rgb
f
276.899 352.555 mo
275.252 351.681 260.679 360.252 265.153 362.132 cv
269.627 364.008 281.508 368.573 280.582 367.538 cv
279.395 366.211 276.793 364.93 275.334 363.559 cv
273.874 362.186 281.864 363.245 281.455 362.331 cv
281.046 361.419 273.969 358.259 273.969 358.259 cv
273.969 358.259 277.676 352.967 276.899 352.555 cv
cp
f
242.897 349.334 mo
240.657 350.613 238.71 360.171 241.037 361.406 cv
243.365 362.642 249.713 361.736 255.153 356.17 cv
256.755 354.534 249.534 357.762 249.078 357.122 cv
248.623 356.483 249.723 351.598 249.223 351.232 cv
248.72 350.865 246.141 354.357 244.712 354.551 cv
243.282 354.741 243.648 348.906 242.897 349.334 cv
cp
f
261.521 378.646 mo
260.361 378.205 258.056 369.078 259.752 367.705 cv
263.273 364.857 273.498 369.389 272.491 370.347 cv
271.485 371.304 267.651 370.663 267.651 370.663 cv
267.651 370.663 268.97 374.544 268.056 374.955 cv
267.142 375.364 263.232 371.9 263.232 371.9 cv
263.232 371.9 262.845 379.151 261.521 378.646 cv
cp
f
232.606 384.777 mo
231.878 384.09 227.94 374.036 232.045 371.145 cv
237.834 367.065 246.5 375.843 246.5 375.843 cv
240.519 375.597 li
242.112 380.177 li
235.31 377.063 li
232.606 384.777 li
cp
f
242.201 361.107 mo
241.005 362.857 239.474 364.312 238.028 365.845 cv
237.411 366.497 238.399 367.477 239.011 366.826 cv
240.531 365.217 242.055 363.579 243.254 361.712 cv
243.68 361.046 242.637 360.466 242.201 361.107 cv
cp
f
261.229 367.623 mo
259.65 366.016 258.193 364.408 255.94 363.754 cv
254.795 363.421 254.345 364.952 255.197 365.57 cv
256.846 366.759 258.727 367.583 260.424 368.676 cv
261.076 369.096 261.752 368.153 261.229 367.623 cv
cp
f
233.977 371.193 mo
232.857 370.684 232.231 369.653 231.479 368.725 cv
230.773 367.859 229.746 367.098 228.67 366.799 cv
227.696 366.527 227.114 367.739 227.739 368.43 cv
229.329 370.184 231.177 371.745 233.521 372.307 cv
234.167 372.462 234.62 371.483 233.977 371.193 cv
cp
f
284.471 353.176 mo
282.075 353.218 279.588 354.006 277.527 355.232 cv
276.86 355.629 277.113 356.88 277.978 356.63 cv
280.188 355.992 282.299 355.076 284.533 354.498 cv
285.218 354.321 285.269 353.16 284.471 353.176 cv
cp
1 1 1 rgb
f
283.213 355.112 mo
282.818 355.153 282.454 355.317 282.115 355.516 cv
281.293 356 281.641 357.266 282.634 357.127 cv
282.946 357.084 283.237 356.965 283.551 356.949 cv
284.06 356.923 284.383 356.313 284.301 355.861 cv
284.204 355.332 283.719 355.058 283.213 355.112 cv
cp
f
272.487 378.477 mo
272.031 376.617 271.775 374.377 270.211 373.048 cv
269.882 372.768 269.228 373.041 269.248 373.493 cv
269.326 375.195 270.389 376.846 270.048 378.591 cv
269.706 380.342 272.932 380.296 272.487 378.477 cv
cp
f
252.965 349.909 mo
252.111 349.835 251.575 350.572 251.645 351.358 cv
251.736 352.368 251.675 353.501 250.845 354.187 cv
250.215 354.709 250.88 355.774 251.621 355.397 cv
253.178 354.607 253.552 353.109 254.011 351.566 cv
254.237 350.806 253.802 349.983 252.965 349.909 cv
cp
f
238.48 388.337 mo
238.128 388.127 237.722 388.046 237.421 387.762 cv
237.002 387.367 236.722 386.852 236.474 386.34 cv
236.047 385.456 235.779 384.387 235.844 383.402 cv
235.911 382.411 234.468 382.301 234.321 383.269 cv
234.109 384.665 234.452 386.079 234.996 387.361 cv
235.473 388.482 236.52 389.971 237.832 390.102 cv
238.755 390.194 239.332 388.844 238.48 388.337 cv
cp
f
238.617 385.607 mo
238.5 385.094 238.176 384.677 238.054 384.155 cv
237.929 383.619 237.882 383.066 237.796 382.525 cv
237.607 381.324 235.885 381.693 235.975 382.859 cv
236.061 383.965 235.947 385.953 237.095 386.578 cv
237.781 386.951 238.828 386.529 238.617 385.607 cv
cp
f
195.052 43.4946 mo
198.564 42.6343 203.822 41.8655 203.172 38.1782 cv
202.789 36.0162 199.641 35.8663 197.258 36.2602 cv
199.329 33.1898 204.365 26.9375 199.107 26.9561 cv
197.608 26.9616 195.96 28.4584 195.103 29.5597 cv
194.826 29.9124 192.576 33.2647 192.521 32.0205 cv
192.465 30.7732 192.69 29.5668 192.341 28.3452 cv
192.207 27.8748 191.794 27.6217 191.372 27.6474 cv
190.561 27.0361 189.322 27.507 188.296 28.7497 cv
187.269 29.9939 186.406 31.8383 186.09 33.6647 cv
185.307 34.6015 184.474 35.346 184.222 34.6729 cv
183.902 33.8257 183.967 32.821 183.935 31.9294 cv
183.914 31.3629 183.414 30.884 182.827 31.0358 cv
180.57 31.6145 179.708 33.2128 179.113 35.3617 cv
178.899 36.1396 178.758 36.944 178.576 37.7299 cv
178.46 38.226 177.302 40.1192 177.405 40.4014 cv
177.127 39.6311 177.353 38.6103 177.255 37.8013 cv
177.123 36.6864 176.665 35.7179 175.405 35.7757 cv
173.132 35.8799 171.964 38.7578 171.598 40.5805 cv
171.339 41.8645 171.402 43.2265 171.397 44.5295 cv
171.393 45.4377 170.478 50.58 169.974 49.4299 cv
169.584 48.5358 169.093 46.5737 167.696 46.8227 cv
163.726 47.5306 163.774 54.7574 165.894 57.187 cv
164.444 62.9372 167.762 66.3418 172.944 68.2199 cv
175.373 69.1003 183.846 70.3522 181.343 65.1278 cv
180.794 63.9796 177.779 60.7164 176.487 60.4513 cv
179.337 61.0344 181.215 64.1894 184 65.1474 cv
185.634 65.7093 188.05 64.8852 188.855 63.3457 cv
189.553 62.0119 188.393 60.5649 187.558 59.6317 cv
186.873 58.8664 186.037 58.2199 185.255 57.5573 cv
184.883 57.2428 184.526 56.9229 184.182 56.5802 cv
183.38 55.7853 183.828 56.2154 184.467 56.3519 cv
186.452 56.7739 188.299 57.7017 190.265 58.1978 cv
191.92 58.6139 193.78 57.3495 194.243 55.7496 cv
194.885 53.5363 193.677 52.1357 191.778 51.3216 cv
191.322 51.1561 190.872 50.9811 190.425 50.7949 cv
189.384 50.3743 189.447 49.5441 190.639 49.6327 cv
192.143 49.7434 193.641 50.4427 195.132 50.7058 cv
197.133 51.0585 198.757 50.495 199.821 48.7633 cv
201.455 46.1043 197.882 44.4998 195.052 43.4946 cv
cp
.490196 .623529 .239216 rgb
f
196.77 46.4072 mo
193.993 45.9836 190.985 45.7325 188.75 43.8865 cv
191.173 41.3332 193.431 38.5836 195.467 35.9584 cv
195.685 35.6792 195.261 35.411 195.02 35.5937 cv
191.787 38.0448 189.132 41.1989 186.299 44.1511 cv
187.003 40.4563 188.195 36.6633 190.78 33.8523 cv
191.064 33.5429 190.644 33.076 190.329 33.3699 cv
187.366 36.1526 185.551 40.899 185.296 44.9064 cv
185.291 44.9904 185.317 45.0588 185.353 45.1192 cv
184.428 46.0494 183.479 46.9515 182.473 47.7868 cv
180.552 49.3816 178.386 50.7622 176.253 52.1251 cv
176.573 47.6826 178.509 42.2177 181.435 39.3248 cv
181.718 39.044 181.318 38.6239 181.016 38.8754 cv
178.704 40.7994 177.655 43.7265 176.686 46.4871 cv
176.042 48.322 175.267 50.6303 175.329 52.7167 cv
175.001 52.9286 174.673 53.1394 174.349 53.3527 cv
171.652 55.1247 168.798 56.0091 165.974 57.4295 cv
165.028 57.9065 165.795 59.2649 166.737 58.8579 cv
167.535 58.5127 168.304 58.1877 169.056 57.8617 cv
169.548 58.5278 169.74 59.3479 170.035 60.1141 cv
170.347 60.9227 171.026 61.5953 171.624 62.1965 cv
172.783 63.3618 174.338 64.5843 175.966 64.9406 cv
176.565 65.0719 176.997 64.2488 176.418 63.9182 cv
174.867 63.0332 173.401 62.273 172.04 61.0787 cv
170.919 60.094 170.591 58.6577 169.664 57.5966 cv
171.5 56.7865 173.255 55.9353 175.084 54.7293 cv
175.297 54.5899 175.505 54.4415 175.718 54.3006 cv
175.939 54.3806 176.228 54.27 176.218 53.9806 cv
176.217 53.975 176.217 53.9691 176.216 53.9635 cv
177.776 52.92 179.32 51.8459 180.845 50.7516 cv
180.854 50.7657 180.859 50.7828 180.874 50.7973 cv
182.7 52.8159 185.166 54.2588 187.789 54.9773 cv
188.394 55.1428 188.61 54.292 188.054 54.0626 cv
185.633 53.0654 183.266 52.271 181.384 50.3632 cv
181.738 50.1046 182.102 49.8556 182.453 49.5939 cv
184.428 48.1259 186.324 46.389 188.133 44.5315 cv
190.391 46.7478 193.681 47.3424 196.743 47.5945 cv
197.524 47.6599 197.505 46.5194 196.77 46.4072 cv
cp
.615686 .737255 .435294 rgb
f
209.023 376.047 mo
208.909 376.047 208.794 376.01 208.698 375.932 cv
206.167 373.877 186.476 365.97 154.995 359.498 cv
154.716 359.44 154.537 359.168 154.594 358.889 cv
154.651 358.611 154.925 358.429 155.202 358.488 cv
184.785 364.57 206.176 372.557 209.348 375.133 cv
209.569 375.312 209.602 375.636 209.423 375.857 cv
209.321 375.982 209.172 376.047 209.023 376.047 cv
cp
.980392 .341176 .392157 rgb
f
228.558 381.952 mo
225.196 377.354 208.852 369.402 208.223 375.831 cv
207.602 382.168 223.687 382.21 228.558 381.952 cv
cp
f
209.521 376.683 mo
210.401 376.143 212.738 376.387 213.604 376.473 cv
216.09 376.716 218.305 377.758 220.304 379.21 cv
220.625 379.443 221.16 379.083 220.875 378.72 cv
220.184 377.839 219.274 377.125 218.258 376.554 cv
221.365 377.856 224.322 379.52 225.211 380.018 cv
225.473 380.165 225.698 379.792 225.496 379.597 cv
223.003 377.163 209.924 368.889 208.223 375.831 cv
208.126 376.224 208.982 377.013 209.521 376.683 cv
cp
1 .6 .647059 rgb
f
217.561 364.192 mo
212.381 361.822 194.237 362.865 196.825 368.78 cv
199.38 374.615 213.434 366.795 217.561 364.192 cv
cp
.980392 .341176 .392157 rgb
f
198.376 368.891 mo
198.878 367.989 201.038 367.062 201.835 366.713 cv
204.124 365.711 206.564 365.54 209.017 365.83 cv
209.412 365.877 209.705 365.301 209.276 365.124 cv
208.245 364.692 207.1 364.516 205.936 364.514 cv
209.281 364.13 212.675 364.141 213.695 364.138 cv
213.995 364.138 214.01 363.705 213.739 363.629 cv
210.373 362.726 194.919 361.895 196.825 368.78 cv
196.934 369.172 198.065 369.441 198.376 368.891 cv
cp
1 .6 .647059 rgb
f
204.218 356.298 mo
198.626 355.214 181.241 360.513 185.153 365.65 cv
189.011 370.716 200.825 359.799 204.218 356.298 cv
cp
.980392 .341176 .392157 rgb
f
186.684 365.39 mo
186.962 364.396 188.841 362.985 189.534 362.459 cv
191.521 360.945 193.852 360.201 196.304 359.904 cv
196.699 359.858 196.847 359.23 196.388 359.156 cv
195.285 358.983 194.133 359.08 193 359.352 cv
196.159 358.19 199.459 357.399 200.449 357.157 cv
200.741 357.087 200.655 356.66 200.372 356.653 cv
196.889 356.569 181.675 359.404 185.153 365.65 cv
185.35 366.002 186.515 366.001 186.684 365.39 cv
cp
1 .6 .647059 rgb
f
210.7 391.633 mo
205.584 389.129 194.893 374.432 201.111 372.686 cv
207.241 370.964 210.101 386.795 210.7 391.633 cv
cp
.980392 .341176 .392157 rgb
f
202.178 373.815 mo
201.8 374.774 202.448 377.033 202.687 377.873 cv
203.361 380.277 204.775 382.276 206.554 383.986 cv
206.842 384.262 206.579 384.853 206.171 384.637 cv
205.183 384.111 204.322 383.34 203.581 382.44 cv
205.406 385.271 207.564 387.889 208.209 388.678 cv
208.4 388.91 208.075 389.198 207.844 389.034 cv
205.012 387.003 194.574 375.576 201.111 372.686 cv
201.48 372.523 202.408 373.227 202.178 373.815 cv
cp
1 .6 .647059 rgb
f
199.945 387.533 mo
194.83 385.03 184.138 370.332 190.357 368.586 cv
196.488 366.862 199.346 382.694 199.945 387.533 cv
cp
.980392 .341176 .392157 rgb
f
191.423 369.713 mo
191.045 370.675 191.694 372.933 191.933 373.771 cv
192.607 376.175 194.021 378.175 195.8 379.884 cv
196.088 380.161 195.825 380.753 195.416 380.535 cv
194.431 380.01 193.568 379.237 192.828 378.339 cv
194.651 381.168 196.809 383.788 197.455 384.576 cv
197.646 384.809 197.318 385.096 197.092 384.932 cv
194.259 382.902 183.819 371.477 190.357 368.586 cv
190.726 368.421 191.654 369.124 191.423 369.713 cv
cp
1 .6 .647059 rgb
f
186.118 383.365 mo
181.002 380.861 170.312 366.163 176.529 364.418 cv
182.66 362.695 185.519 378.525 186.118 383.365 cv
cp
.980392 .341176 .392157 rgb
f
177.596 365.546 mo
177.219 366.506 177.867 368.764 178.104 369.603 cv
178.78 372.008 180.192 374.006 181.971 375.716 cv
182.259 375.993 181.999 376.585 181.589 376.366 cv
180.602 375.842 179.741 375.07 178.999 374.171 cv
180.823 377.001 182.983 379.62 183.628 380.408 cv
183.817 380.643 183.492 380.928 183.264 380.764 cv
180.43 378.735 169.992 367.308 176.529 364.418 cv
176.898 364.253 177.827 364.957 177.596 365.546 cv
cp
1 .6 .647059 rgb
f
188.779 348.593 mo
183.108 349.116 167.891 359.055 173.084 362.898 cv
178.201 366.685 186.499 352.903 188.779 348.593 cv
cp
.980392 .341176 .392157 rgb
f
174.481 362.223 mo
174.47 361.189 175.879 359.31 176.399 358.61 cv
177.885 356.602 179.916 355.236 182.187 354.268 cv
182.554 354.112 182.519 353.466 182.058 353.525 cv
180.95 353.665 179.871 354.079 178.86 354.66 cv
181.569 352.661 184.516 350.981 185.401 350.473 cv
185.66 350.323 185.457 349.936 185.186 350.008 cv
181.818 350.902 168 357.872 173.084 362.898 cv
173.371 363.183 174.488 362.854 174.481 362.223 cv
cp
1 .6 .647059 rgb
f
191.713 360.639 mo
192.42 359.855 193.321 359.4 194.355 359.208 cv
194.733 359.139 194.704 358.533 194.314 358.599 cv
193.111 358.799 192.047 359.278 191.252 360.227 cv
190.996 360.531 191.445 360.938 191.713 360.639 cv
cp
1 .866667 .831373 rgb
f
205.729 359.833 mo
205.729 359.833 171.451 345.855 154.333 355.104 cv
152.86 363.725 195.442 361.983 205.729 359.833 cv
cp
.815686 .839216 .588235 rgb
f
201.239 358.238 mo
204.691 359.012 167.686 342.457 153.45 354.957 cv
157.521 359.419 187.694 355.206 201.239 358.238 cv
cp
.615686 .737255 .435294 rgb
f
164.912 371.908 mo
160.028 362.433 156.419 353.362 146.522 346.639 cv
125.306 332.227 121.038 340.324 121.137 342.603 cv
121.366 347.861 128.338 351.916 131.913 354.941 cv
141.047 362.661 150.679 365.495 160.459 372.278 cv
162.145 373.447 165.968 373.954 164.912 371.908 cv
cp
f
120.764 339.893 mo
122.001 340.499 155.087 360.994 164.297 373.66 cv
164.823 376.65 110.522 346.52 122.001 340.499 cv
.815686 .839216 .588235 rgb
f
82.4625 182.597 mo
81.658 182.498 80.2684 182.418 79.4614 182.526 cv
79.0916 182.575 81.4925 177.75 81.8381 177.133 cv
82.2667 176.365 82.2607 175.633 81.4009 175.972 cv
79.2843 176.808 76.6177 179.259 75.0737 180.972 cv
75.0178 180.43 75.302 179.238 74.8206 179.511 cv
72.9323 180.583 70.6487 184.744 68.5144 185.864 cv
68.5059 185.863 68.4973 185.86 68.4873 185.859 cv
68.7303 184.79 69.0387 183.743 69.2832 182.668 cv
69.4629 181.873 68.9401 181.696 68.2177 182.252 cv
65.9752 183.975 63.6251 186.548 62.55 189.108 cv
61.9427 190.553 61.747 191.113 60.9959 192.49 cv
59.7461 194.781 59.8689 192.98 60.2643 191.668 cv
60.4303 191.115 60.6115 190.224 60.0072 190.601 cv
55.0198 193.711 52.0373 200.535 53.2257 207.025 cv
53.3001 207.996 54.0513 210.43 54.6068 210.888 cv
60.3287 215.605 69.4402 212.313 74.3849 208.151 cv
75.9989 206.794 79.2787 202.912 79.2787 200.9 cv
79.2787 200.112 77.9244 201.362 77.1516 200.939 cv
78.9356 199.871 81.1623 196.875 81.1981 194.684 cv
81.2067 194.161 79.6701 194.849 79.0956 194.959 cv
80.4339 193.604 84.398 188.194 82.8438 187.737 cv
82.0897 187.514 80.8228 188.2 79.7356 188.285 cv
81.0683 186.785 82.2536 185.272 82.8438 183.349 cv
83.0139 182.793 83.0521 182.669 82.4625 182.597 cv
cp
.615686 .737255 .435294 rgb
f
76.8315 183.156 mo
71.8869 186.481 67.232 190.189 63.7323 195.057 cv
60.8685 199.039 57.5892 204.67 59.243 209.664 cv
59.576 210.669 61.0829 209.959 60.7373 208.956 cv
59.0247 203.986 63.2755 197.802 66.0623 193.972 cv
69.0744 189.829 73.2267 186.743 77.1545 183.542 cv
77.4116 183.333 77.0947 182.98 76.8315 183.156 cv
cp
.490196 .623529 .239216 rgb
f
80.4691 73.4277 mo
79.7174 72.3531 77.9525 73.6018 78.59 74.7207 cv
80.63 78.2939 78.0455 84.0204 76.586 87.4225 cv
74.7089 91.795 71.8064 95.9272 70.6658 100.592 cv
69.4141 105.705 70.9697 112.431 74.7159 116.275 cv
74.0081 117.539 75.924 118.771 76.7329 117.506 cv
81.2061 110.52 87.8513 104.456 89.5595 96.0691 cv
91.2751 87.6549 84.9962 79.9063 80.4691 73.4277 cv
cp
f
87.9258 95.6419 mo
84.0156 95.7521 79.5101 96.9621 76.5579 99.5793 cv
77.4197 97.4446 78.5819 95.4573 80.0127 93.4775 cv
82.548 91.9551 85.1502 91.0767 88.0315 90.4074 cv
88.2443 92.1221 88.2181 93.8468 87.9258 95.6419 cv
cp
87.3382 98.3034 mo
86.9679 99.5833 86.4874 100.826 85.9385 102.039 cv
81.9533 102.119 77.7673 102.406 75.0465 105.535 cv
75.0777 105.291 75.0988 105.043 75.1346 104.8 cv
75.3579 103.274 75.7252 101.855 76.2062 100.499 cv
78.9844 97.8269 83.8491 96.789 87.7276 96.7347 cv
87.6134 97.2524 87.4932 97.7711 87.3382 98.3034 cv
cp
82.4791 108.338 mo
79.7888 108.233 76.2947 110.47 74.9559 112.707 cv
74.6983 110.608 74.7315 108.467 74.9474 106.367 cv
74.9927 106.359 75.0379 106.343 75.0742 106.303 cv
77.9973 103.181 81.656 103.51 85.4385 103.097 cv
84.5544 104.897 83.5331 106.638 82.4791 108.338 cv
cp
81.6665 109.634 mo
80.0127 112.257 77.2139 114.007 75.8701 116.797 cv
75.4817 115.665 75.221 114.495 75.0435 113.312 cv
75.0791 113.298 75.1159 113.283 75.14 113.237 cv
76.4034 110.925 79.3783 109.726 81.9487 109.185 cv
81.8557 109.335 81.7611 109.485 81.6665 109.634 cv
cp
75.6402 117.317 mo
75.6165 117.375 75.5979 117.435 75.5753 117.494 cv
73.8093 114.397 72.4086 111.246 71.8381 107.79 cv
72.641 108.255 73.3344 108.994 73.7238 109.817 cv
73.7887 109.952 73.8999 110.002 74.01 110.001 cv
74.2042 112.557 74.7522 115.061 75.6402 117.317 cv
cp
71.5649 105.183 mo
71.5136 103.696 71.6846 102.225 71.9991 100.778 cv
72.796 101.719 73.6105 102.685 74.0634 103.823 cv
74.0991 103.914 74.16 103.966 74.2274 103.996 cv
73.9874 105.583 73.8943 107.207 73.9477 108.82 cv
73.4007 108.075 72.5902 107.506 71.742 107.176 cv
71.6555 106.524 71.5876 105.861 71.5649 105.183 cv
cp
74.0287 94.69 mo
74.2737 95.334 74.5187 95.978 74.7612 96.6225 cv
75.0742 97.4592 75.203 98.3603 75.4857 99.1964 cv
75.0355 100.383 74.6732 101.618 74.4236 102.893 cv
73.8294 101.856 72.9625 101.104 72.1314 100.251 cv
72.5918 98.3462 73.2805 96.4882 74.0287 94.69 cv
cp
74.402 93.7995 mo
74.8357 92.7882 75.296 91.7865 75.7584 90.7884 cv
76.8783 91.8624 77.1108 93.8699 77.5043 95.2766 cv
77.1641 95.7878 76.8396 96.302 76.5493 96.8323 cv
76.3329 97.2318 76.1378 97.6433 75.9496 98.0604 cv
75.8419 97.6992 75.7051 97.3419 75.5873 97.0185 cv
75.2156 95.9986 74.7582 95.0321 74.2923 94.0591 cv
74.329 93.9736 74.3627 93.8855 74.402 93.7995 cv
cp
77.3191 87.3887 mo
78.0933 88.9464 78.8425 90.4718 79.0705 92.2373 cv
79.0986 92.4551 79.2571 92.5402 79.4211 92.5312 cv
78.9683 93.1766 78.5034 93.8186 78.0532 94.4616 cv
77.6909 93.0247 77.2189 90.983 75.9929 90.2822 cv
76.4416 89.3192 76.8859 88.3567 77.3191 87.3887 cv
cp
78.7746 83.8669 mo
79.2637 84.6005 79.7617 85.327 80.2478 86.0625 cv
80.7639 86.8413 81.0859 87.7394 81.6499 88.477 cv
81.663 88.4941 81.6806 88.4921 81.6962 88.5047 cv
81.2267 89.7338 80.5527 90.8729 79.805 91.9746 cv
79.5464 90.007 78.6357 88.3608 77.6219 86.6955 cv
78.0305 85.7616 78.4194 84.8228 78.7746 83.8669 cv
cp
79.6028 81.4449 mo
80.0897 82.0899 80.5621 82.7409 80.9858 83.4322 cv
81.4814 84.2418 81.7123 85.1388 82.1405 85.9705 cv
82.1756 86.0408 82.237 86.0836 82.3055 86.1089 cv
82.2653 86.383 82.225 86.6577 82.1691 86.9289 cv
82.1339 87.103 82.0721 87.2649 82.0273 87.4345 cv
81.4552 85.8769 80.0389 84.4143 79.0055 83.2294 cv
79.2158 82.6453 79.415 82.0466 79.6028 81.4449 cv
cp
80.2759 78.8277 mo
80.3846 78.2466 80.4017 77.7178 80.371 77.2122 cv
80.6623 77.7706 80.9531 78.3276 81.2398 78.886 cv
82.1365 80.6394 82.4927 82.5814 82.4388 84.5205 cv
81.907 83.1399 80.7564 81.8363 79.7652 80.9105 cv
79.969 80.2173 80.1456 79.5194 80.2759 78.8277 cv
cp
83.4133 78.063 mo
83.9024 78.8901 84.3013 79.7625 84.6797 80.6459 cv
84.4301 80.7717 84.1957 80.9609 84.0327 81.0978 cv
83.7837 81.3081 83.5517 81.5576 83.3967 81.8428 cv
82.8403 79.0148 81.267 76.4891 80.0485 73.8514 cv
81.3384 75.1353 82.4569 76.4469 83.4133 78.063 cv
cp
86.187 84.1889 mo
86.3535 84.5481 86.501 84.9033 86.6469 85.2591 cv
85.7523 85.4618 84.8472 85.9996 84.0624 86.4318 cv
83.7585 86.5988 83.4828 86.7885 83.2212 86.9913 cv
83.4304 86.1118 83.5658 85.2002 83.5985 84.2296 cv
83.6206 83.645 83.5824 83.0781 83.5074 82.5221 cv
83.524 82.5145 83.5402 82.5125 83.5552 82.4989 cv
83.8627 82.1648 84.1318 81.8484 84.5454 81.6366 cv
84.6817 81.5662 84.8543 81.5113 85.0228 81.4484 cv
85.4022 82.3671 85.771 83.2914 86.187 84.1889 cv
cp
87.9127 89.5773 mo
85.4399 89.7132 82.9706 90.8668 80.848 92.2705 cv
81.7757 90.8613 82.5012 89.4234 82.9796 87.8773 cv
84.1404 87.0114 85.7544 86.8555 86.9533 86.063 cv
87.385 87.2443 87.7105 88.4116 87.9127 89.5773 cv
cp
87.141 83.7004 mo
85.2261 79.6759 83.7555 75.3219 79.7546 72.8491 cv
79.7014 72.8159 79.6455 72.8098 79.5927 72.8164 cv
79.5816 72.7917 79.57 72.7656 79.559 72.7409 cv
79.2701 72.0311 78.2242 72.5779 78.5039 73.2798 cv
78.5427 73.3814 78.59 73.479 78.6337 73.5802 cv
78.6534 74.1728 78.771 74.6809 78.9598 75.3104 cv
79.3944 76.7528 79.3215 77.8939 78.9759 79.3403 cv
78.4848 81.3966 77.7825 83.4116 77.0036 85.3722 cv
75.5783 88.958 73.7641 92.3701 72.4192 95.989 cv
69.6052 103.554 70.5073 111.488 75.4349 117.979 cv
75.384 118.583 76.3144 118.857 76.5151 118.211 cv
77.224 115.93 79.0111 114.403 80.6276 112.749 cv
82.0182 111.33 83.0098 109.639 84.0362 107.951 cv
85.0268 106.32 85.9476 104.64 86.7485 102.913 cv
87.0277 102.841 87.1193 102.533 87.0338 102.297 cv
87.8328 100.492 88.4768 98.6249 88.9169 96.6904 cv
89.2632 96.5349 89.333 96.0475 89.1066 95.7923 cv
89.9171 91.4329 89.0276 87.6679 87.141 83.7004 cv
cp
.615686 .737255 .435294 rgb
f
54.3406 122.743 mo
54.0598 123.163 59.7798 149.779 70.0188 148.339 cv
80.2578 146.9 89.8558 120.503 88.7363 119.063 cv
87.6164 117.623 80.5773 126.902 80.5773 126.902 cv
80.5773 126.902 78.6579 115.384 76.738 115.543 cv
74.818 115.703 70.3383 126.582 70.3383 126.582 cv
70.3383 126.582 65.5395 114.263 64.4196 114.743 cv
63.2996 115.223 63.4586 126.742 63.1391 126.262 cv
62.8197 125.782 55.941 120.343 54.3406 122.743 cv
cp
.980392 .341176 .392157 rgb
f
54.0202 121.302 mo
54.0202 121.302 58.4999 149.139 70.0188 148.339 cv
81.5377 147.54 89.5363 120.343 88.7363 119.063 cv
87.9369 117.783 81.6967 130.102 79.6173 130.742 cv
77.5374 131.381 76.738 117.623 74.9786 118.263 cv
73.2176 118.903 69.2188 133.62 68.4184 133.461 cv
67.6189 133.301 56.42 119.383 54.0202 121.302 cv
cp
.960784 .643137 .54902 rgb
f
66.9779 127.257 mo
66.7475 127.257 66.5377 127.102 66.4789 126.868 cv
66.4421 126.724 62.791 112.315 60.9153 108.407 cv
60.7921 108.15 60.9003 107.843 61.1568 107.72 cv
61.4144 107.595 61.7204 107.705 61.8441 107.961 cv
63.7645 111.962 67.3271 126.02 67.4781 126.616 cv
67.5475 126.892 67.3805 127.172 67.1048 127.242 cv
67.0625 127.252 67.0198 127.257 66.9779 127.257 cv
cp
.980392 .341176 .392157 rgb
f
65.2196 127.257 mo
65.0229 127.257 64.8347 127.144 64.7491 126.953 cv
64.6998 126.843 59.7818 115.929 56.8164 112.184 cv
56.6398 111.961 56.6776 111.637 56.9005 111.46 cv
57.1229 111.282 57.4473 111.322 57.6245 111.544 cv
60.6688 115.389 65.4857 126.078 65.689 126.531 cv
65.8056 126.79 65.6894 127.095 65.4304 127.212 cv
65.3614 127.243 65.29 127.257 65.2196 127.257 cv
cp
f
80.5778 127.417 mo
80.5511 127.417 80.5244 127.415 80.4972 127.411 cv
80.216 127.367 80.0244 127.104 80.0681 126.822 cv
80.1929 126.028 83.1432 107.33 84.7798 104.711 cv
84.9308 104.471 85.2488 104.397 85.4898 104.548 cv
85.7307 104.698 85.8041 105.016 85.6532 105.257 cv
84.3874 107.284 81.9271 121.627 81.0864 126.982 cv
81.0462 127.236 80.8274 127.417 80.5778 127.417 cv
cp
f
71.6183 125.177 mo
71.3521 125.177 71.1262 124.972 71.105 124.702 cv
71.0593 124.119 69.9841 110.382 70.1446 105.767 cv
70.1546 105.483 70.382 105.265 70.6774 105.27 cv
70.9616 105.28 71.1841 105.518 71.174 105.803 cv
71.016 110.359 72.1213 124.479 72.1324 124.622 cv
72.1546 124.905 71.9427 125.153 71.659 125.175 cv
71.6454 125.176 71.6318 125.177 71.6183 125.177 cv
cp
f
78.0179 119.258 mo
78.0099 119.258 78.0013 119.258 77.9933 119.258 cv
77.709 119.244 77.4896 119.003 77.5027 118.719 cv
77.9827 108.48 li
77.9963 108.195 78.2262 107.96 78.5216 107.99 cv
78.8057 108.003 79.0251 108.244 79.012 108.528 cv
78.5321 118.767 li
78.519 119.044 78.2911 119.258 78.0179 119.258 cv
cp
f
84.554 104.195 mo
84.4402 104.281 84.3432 104.376 84.2586 104.492 cv
83.7927 105.139 84.3154 105.837 84.9127 105.968 cv
84.894 105.963 84.8755 105.957 84.8568 105.952 cv
84.8885 105.96 84.9187 105.964 84.9493 105.97 cv
84.9484 105.972 84.9484 105.974 84.9484 105.975 cv
84.9795 105.981 85.0113 105.987 85.043 105.989 cv
86.9533 106.285 86.1699 102.977 84.554 104.195 cv
cp
f
84.9479 105.979 mo
84.9479 105.979 84.9479 105.977 84.9484 105.975 cv
84.9362 105.973 84.9242 105.971 84.9127 105.968 cv
84.9242 105.972 84.9362 105.976 84.9479 105.979 cv
cp
f
78.5593 107.635 mo
77.6481 107.635 77.5158 109.054 78.4355 109.054 cv
79.3466 109.054 79.479 107.635 78.5593 107.635 cv
cp
f
70.6377 104.792 mo
69.7733 104.792 69.6485 106.137 70.5194 106.137 cv
71.3822 106.137 71.5085 104.792 70.6377 104.792 cv
cp
f
61.9895 107.098 mo
61.5392 106.561 60.7589 106.674 60.3906 107.196 cv
60.209 107.408 60.1134 107.709 60.1743 107.977 cv
60.1959 108.074 60.2245 108.169 60.2689 108.257 cv
60.4113 108.549 60.6924 108.752 61.019 108.78 cv
61.1493 108.791 61.2666 108.774 61.3732 108.739 cv
61.3823 108.737 61.3914 108.737 61.4014 108.735 cv
62.1304 108.57 62.4916 107.696 61.9895 107.098 cv
cp
f
57.3764 110.497 mo
56.827 110.293 56.2092 110.581 56.0019 111.125 cv
55.9868 111.164 55.9737 111.202 55.9616 111.241 cv
55.789 111.794 56.0235 112.398 56.5871 112.608 cv
57.148 112.816 57.7286 112.516 57.9535 111.983 cv
57.9696 111.945 57.9867 111.908 58.0053 111.871 cv
58.265 111.349 57.8786 110.684 57.3764 110.497 cv
cp
f
87.5012 234.469 mo
85.1069 235.788 83.1437 238.031 81.8365 240.461 cv
79.8709 237.518 78.287 234.342 76.6152 231.225 cv
76.3933 230.814 75.7458 230.792 75.4978 231.137 cv
73.7751 233.541 71.6791 238.785 71.3466 240.028 cv
69.657 236.494 67.866 233.929 66.426 231.264 cv
66.1196 230.696 65.2557 230.628 65.1109 231.34 cv
63.8405 237.582 64.7405 245.212 67.8765 250.603 cv
68.038 251.002 71.7244 258.211 74.5358 256.167 cv
82.0388 250.712 87.0998 243.976 88.5688 235.198 cv
88.6735 234.571 88.0365 234.173 87.5012 234.469 cv
cp
f
65.1109 231.34 mo
65.1109 231.34 69.5474 241.278 71.2947 243.502 cv
73.1311 240.426 77.7839 236.772 78.0802 237.357 cv
78.3761 237.941 82.0081 243.692 81.4738 244.177 cv
82.3704 242.819 86.7706 238.218 88.1648 237.286 cv
88.1286 239.113 85.5697 246.684 83.0114 249.675 cv
80.453 252.665 75.9878 257.807 73.6614 257.344 cv
71.335 256.882 59.5781 247.286 65.1109 231.34 cv
cp
.960784 .643137 .54902 rgb
f
76.8743 235.71 mo
76.8537 235.71 76.8331 235.709 76.8125 235.706 cv
76.5297 235.673 76.3284 235.417 76.3622 235.134 cv
76.3702 235.066 77.1989 228.324 79.3361 222.724 cv
79.4382 222.458 79.738 222.325 80.0012 222.427 cv
80.2674 222.529 80.4002 222.825 80.2991 223.092 cv
78.2076 228.571 77.3935 235.19 77.3855 235.256 cv
77.3538 235.518 77.1314 235.71 76.8743 235.71 cv
cp
.980392 .341176 .392157 rgb
f
79.6626 238.428 mo
79.6389 238.428 79.6153 238.426 79.5911 238.423 cv
79.3094 238.384 79.1127 238.124 79.152 237.842 cv
79.2078 237.44 80.5562 227.943 83.4807 223.659 cv
83.6418 223.423 83.9627 223.364 84.1967 223.524 cv
84.4317 223.685 84.4926 224.005 84.332 224.24 cv
81.5417 228.327 80.1858 237.888 80.1722 237.984 cv
80.1365 238.242 79.9157 238.428 79.6626 238.428 cv
cp
f
81.7314 241.791 mo
81.6882 241.791 81.6444 241.786 81.6006 241.774 cv
81.3255 241.702 81.1604 241.421 81.2323 241.146 cv
81.338 240.741 83.835 231.231 85.8022 229.011 cv
85.9903 228.798 86.3169 228.778 86.5291 228.968 cv
86.742 229.156 86.7616 229.482 86.5729 229.695 cv
85.0757 231.384 82.9299 238.722 82.2295 241.406 cv
82.1691 241.638 81.9599 241.791 81.7314 241.791 cv
cp
f
72.9585 237.805 mo
72.9309 237.805 72.9027 237.803 72.8745 237.798 cv
72.5937 237.753 72.4036 237.487 72.4494 237.207 cv
72.47 237.082 74.4986 224.609 74.1821 218.288 cv
74.1681 218.003 74.3869 217.762 74.6711 217.748 cv
74.9398 217.7 75.1969 217.952 75.2115 218.236 cv
75.5335 224.668 73.5512 236.857 73.4667 237.374 cv
73.425 237.626 73.2066 237.805 72.9585 237.805 cv
cp
f
70.1909 239.488 mo
69.9122 239.488 69.6832 239.265 69.6757 238.986 cv
69.6722 238.849 69.3144 225.206 68.9059 222.654 cv
68.8606 222.374 69.0523 222.109 69.3331 222.064 cv
69.6133 222.019 69.8785 222.211 69.9232 222.491 cv
70.3423 225.111 70.6914 238.395 70.7061 238.959 cv
70.7131 239.243 70.4888 239.48 70.2045 239.488 cv
70.1999 239.488 70.1954 239.488 70.1909 239.488 cv
cp
f
86.9302 228.822 mo
86.82 228.654 86.5886 228.561 86.3949 228.635 cv
86.3757 228.643 86.3572 228.65 86.338 228.656 cv
86.0492 228.768 85.9104 229.11 86.0865 229.38 cv
86.2399 229.616 86.668 229.7 86.8497 229.439 cv
86.8612 229.422 86.8738 229.404 86.8858 229.388 cv
87.0066 229.213 87.0554 229.013 86.9302 228.822 cv
cp
f
84.2959 222.62 mo
83.7263 222.553 83.1759 222.835 83.0501 223.432 cv
82.9404 223.957 83.2936 224.611 83.8636 224.679 cv
84.4322 224.747 84.9831 224.465 85.1083 223.866 cv
85.2186 223.343 84.8659 222.689 84.2959 222.62 cv
cp
f
80.0329 221.766 mo
79.5514 221.707 79.085 221.948 78.9783 222.454 cv
78.8853 222.898 79.1841 223.45 79.6677 223.509 cv
80.1487 223.567 80.6155 223.327 80.7211 222.82 cv
80.8147 222.376 80.5154 221.824 80.0329 221.766 cv
cp
f
75.5119 217.873 mo
75.5119 217.848 75.5124 217.822 75.5124 217.796 cv
75.5184 217.399 75.1662 217.045 74.7944 216.966 cv
74.3039 216.863 73.832 217.185 73.7213 217.666 cv
73.7157 217.692 73.7102 217.717 73.7047 217.742 cv
73.592 218.228 73.9306 218.723 74.4116 218.825 cv
75.0259 218.953 75.5038 218.46 75.5119 217.873 cv
cp
f
69.6057 221.642 mo
68.4571 221.505 68.0748 223.274 69.2345 223.413 cv
70.3836 223.552 70.7649 221.782 69.6057 221.642 cv
cp
f
93.3137 307.771 mo
93.2755 307.771 93.2367 307.767 93.1975 307.758 cv
70.9968 302.65 60.8862 278.797 52.7623 259.632 cv
48.6196 249.859 45.042 241.419 40.8489 238.502 cv
40.6155 238.34 40.5576 238.019 40.7201 237.785 cv
40.8822 237.552 41.2037 237.492 41.4376 237.656 cv
45.8746 240.742 49.5061 249.31 53.7107 259.229 cv
61.7435 278.18 71.7405 301.764 93.4289 306.754 cv
93.7062 306.817 93.8792 307.094 93.8153 307.372 cv
93.7605 307.61 93.5482 307.771 93.3137 307.771 cv
cp
.615686 .737255 .435294 rgb
f
45.6694 229.857 mo
43.8707 230.255 43.0672 232.972 42.6692 234.466 cv
42.4358 235.345 42.2104 236.508 42.2859 237.578 cv
41.6987 237.079 41.0939 236.619 40.5566 236.019 cv
39.6803 235.042 38.8661 234.009 37.96 233.057 cv
36.6212 231.645 34.4352 230.434 33.0582 232.507 cv
30.7659 235.956 36.4486 238.066 40.0203 239.138 cv
35.5013 238.816 29.0382 240.761 31.7988 246.064 cv
33.835 249.973 41.4955 242.586 42.8468 240.366 cv
43.5704 239.969 44.1706 239.143 44.7154 238.573 cv
46.2283 236.981 48.1014 235.028 48.5703 232.805 cv
48.9497 231.013 47.4625 229.46 45.6694 229.857 cv
cp
f
55.6366 236.673 mo
54.2113 235.143 52.1314 237.542 51.4617 238.706 cv
50.8299 239.808 50.5194 241.098 50.3222 242.433 cv
49.4805 244.845 49.0754 247.478 48.9557 249.924 cv
44.8563 248.222 37.1797 246.693 38.3942 253.008 cv
38.8476 255.377 41.6564 255.247 43.4194 254.801 cv
44.6847 254.48 45.8977 253.95 47.0876 253.426 cv
47.6864 253.161 48.6287 252.644 49.2833 252.417 cv
49.8543 252.817 50.8807 252.525 50.9214 251.597 cv
50.928 251.441 50.9411 251.276 50.9486 251.118 cv
51.0798 250.948 51.2016 250.766 51.3299 250.589 cv
51.5191 250.46 51.6856 250.286 51.7788 250.028 cv
51.7913 249.997 51.7948 249.966 51.8053 249.934 cv
53.1834 247.92 54.3169 245.696 55.1698 243.438 cv
55.7911 241.799 57.0937 238.235 55.6366 236.673 cv
cp
f
59.7582 249 mo
57.6707 249.101 56.6499 252.341 56.0819 253.89 cv
55.3635 255.844 54.7658 258.031 54.8206 260.164 cv
54.6218 260.212 54.4195 260.277 54.2174 260.349 cv
50.9908 259.253 42.725 258.681 42.2205 262.186 cv
41.8119 265.023 44.976 266.373 47.3216 266.117 cv
49.155 265.918 50.9093 265.19 52.5817 264.453 cv
53.2504 264.159 54.1047 263.852 54.8916 263.467 cv
55.0953 263.45 55.3045 263.391 55.5239 263.233 cv
58.4119 261.149 60.927 258.093 62.0736 254.703 cv
62.6546 252.988 62.378 248.871 59.7582 249 cv
cp
f
66.3173 261.049 mo
62.0961 258.279 60.1959 268.007 60.1727 272.624 cv
60.0797 272.763 59.9971 272.895 59.9066 273.034 cv
59.2369 272.782 58.5281 272.616 57.792 272.524 cv
56.9855 271.775 56.1836 271.011 55.2799 270.379 cv
54.2878 269.684 53.0244 269.369 51.8577 269.143 cv
49.4337 268.676 46.5633 269.122 46.3621 272.045 cv
46.0708 276.313 54.0956 275.086 57.9424 275.541 cv
58.2463 275.766 58.5608 275.965 58.8828 276.146 cv
59.3597 276.853 60.453 277.181 61.1392 276.396 cv
61.263 276.252 61.3636 276.1 61.4451 275.946 cv
62.9068 273.535 64.7109 271.12 66.1941 268.636 cv
67.5545 266.358 69.1157 262.887 66.3173 261.049 cv
cp
f
70.9939 270.533 mo
68.746 270.651 67.6828 273.063 67.0585 275.163 cv
66.5347 276.446 66.2393 277.836 66.1035 279.251 cv
65.8967 280.421 65.7569 281.63 65.7649 282.812 cv
65.5818 283.065 65.4229 283.33 65.2503 283.589 cv
63.1447 282.056 60.0898 281.387 57.7346 280.96 cv
54.7522 280.419 50.9878 280.51 49.8936 283.884 cv
49.7471 284.337 49.7215 284.736 49.7843 285.095 cv
49.7859 285.103 49.7889 285.112 49.7884 285.123 cv
49.8044 285.201 49.8206 285.284 49.8468 285.361 cv
49.8679 285.46 49.8719 285.55 49.9152 285.659 cv
50.699 287.577 53.672 287.689 55.4108 287.68 cv
55.5496 287.683 55.693 287.673 55.8333 287.671 cv
59.9962 287.836 64.9871 287 66.2791 286.435 cv
66.8079 286.202 67.0675 285.764 67.1495 285.299 cv
69.0201 282.333 71.7007 279.989 73.3314 276.823 cv
74.4216 274.706 74.5096 270.349 70.9939 270.533 cv
cp
f
78.1528 280.43 mo
75.5168 279.863 74.2601 283.223 73.6398 285.167 cv
72.9203 287.424 72.2129 290.866 73.3499 293.207 cv
73.2574 293.459 73.1965 293.705 73.1578 293.943 cv
73.0426 294.008 72.9314 294.084 72.8248 294.187 cv
72.8096 294.202 li
67.7749 292.822 58.1809 293.834 59.6913 300.572 cv
61.2369 307.468 72.8211 298.201 74.9629 296.158 cv
75.376 295.765 75.461 295.308 75.3438 294.897 cv
75.9159 294.187 76.2952 293.125 76.6414 292.489 cv
77.5605 290.793 78.4531 289.084 79.1967 287.303 cv
79.9956 285.383 81.3209 281.111 78.1528 280.43 cv
cp
f
85.2069 291.234 mo
84.7788 290.69 84.15 290.505 83.5276 290.858 cv
80.9964 292.289 80.4228 295.63 80.2372 298.275 cv
80.1994 298.803 80.1522 299.493 80.1954 300.158 cv
80.0133 300.444 79.8633 300.735 79.7401 301.025 cv
79.6948 301.059 79.649 301.093 79.6047 301.136 cv
79.4115 301.33 79.2038 301.573 78.9859 301.847 cv
75.0324 302.06 71.3063 304.48 70.9396 308.762 cv
70.8882 309.353 71.4638 310.026 72.0373 310.112 cv
76.009 310.696 78.7549 306.759 81.014 303.863 cv
81.4185 303.706 81.6922 303.321 81.7465 302.924 cv
81.8099 302.833 81.8613 302.744 81.9005 302.651 cv
82.3185 302.206 82.6405 301.598 82.9354 301.167 cv
83.6468 300.126 84.3069 299.052 84.8814 297.927 cv
85.9244 295.886 86.7792 293.22 85.2069 291.234 cv
cp
f
58.1119 230.033 mo
57.9676 230.033 57.8292 229.953 57.7628 229.814 cv
54.6329 223.281 40.7589 206.837 39.8824 206.054 cv
39.723 205.912 39.7094 205.668 39.8513 205.509 cv
39.9937 205.35 40.2382 205.335 40.3967 205.477 cv
41.2826 206.268 55.2975 222.88 58.4601 229.48 cv
58.5522 229.672 58.4707 229.903 58.2786 229.995 cv
58.2247 230.021 58.1678 230.033 58.1119 230.033 cv
cp
.290196 .184314 .137255 rgb
f
37.3804 207.111 mo
34.3431 207.111 30.7056 204.731 28.2947 203.154 cv
27.6451 202.729 27.0846 202.362 26.6781 202.137 cv
26.491 202.034 26.4235 201.799 26.5266 201.612 cv
26.6298 201.425 26.8638 201.357 27.0514 201.461 cv
27.4835 201.699 28.0556 202.074 28.7177 202.507 cv
31.738 204.483 36.7928 207.792 39.6103 205.641 cv
43.0903 202.989 40.8948 195.893 39.7009 193.609 cv
39.6023 193.42 39.6752 193.187 39.8644 193.088 cv
40.056 192.988 40.2875 193.062 40.3861 193.251 cv
41.8809 196.112 43.8788 203.36 40.0792 206.256 cv
39.2838 206.862 38.3635 207.111 37.3804 207.111 cv
cp
f
31.9976 208.893 mo
29.8513 208.893 27.875 208.551 26.4451 208.305 cv
26.0351 208.234 25.6763 208.172 25.3796 208.131 cv
25.1683 208.101 25.0208 207.906 25.05 207.695 cv
25.0796 207.483 25.2714 207.335 25.4862 207.365 cv
25.7901 207.408 26.1573 207.471 26.5765 207.543 cv
29.6862 208.08 35.4741 209.079 39.6766 205.803 cv
42.5238 203.584 44.176 199.713 44.5867 194.298 cv
44.6032 194.085 44.798 193.932 45.0012 193.942 cv
45.2141 193.958 45.3736 194.144 45.3574 194.356 cv
44.9293 199.998 43.1779 204.054 40.1517 206.413 cv
37.6612 208.354 34.6948 208.893 31.9976 208.893 cv
cp
f
39.4433 206.315 mo
37.6617 206.315 34.5046 203.508 31.1246 198.898 cv
30.9984 198.726 31.0356 198.484 31.2077 198.358 cv
31.3803 198.23 31.6213 198.27 31.7475 198.441 cv
35.4556 203.497 38.3797 205.668 39.5298 205.538 cv
39.7185 205.517 39.8311 205.435 39.9071 205.263 cv
40.2452 204.494 39.7581 201.749 35.7881 196.338 cv
35.6618 196.166 35.699 195.924 35.8711 195.798 cv
36.0432 195.67 36.2851 195.709 36.4109 195.881 cv
39.7255 200.398 41.2967 204.022 40.6145 205.574 cv
40.4288 205.996 40.0737 206.256 39.6138 206.306 cv
39.5585 206.312 39.5016 206.315 39.4433 206.315 cv
cp
f
37.231 222.882 mo
31.9754 222.882 28.357 220.136 26.6036 218.41 cv
26.4517 218.26 26.4497 218.016 26.5996 217.864 cv
26.7486 217.71 26.9931 217.71 27.146 217.859 cv
29.9348 220.604 37.697 226.055 49.5077 217.402 cv
49.6807 217.275 49.9222 217.312 50.0475 217.485 cv
50.1737 217.657 50.1365 217.899 49.9645 218.026 cv
45.0284 221.643 40.7604 222.882 37.231 222.882 cv
cp
f
52.9208 221.203 mo
52.8362 221.203 52.7512 221.176 52.6804 221.12 cv
52.5132 220.987 52.4856 220.743 52.6184 220.576 cv
58.7912 212.815 59.9121 205.258 55.9501 198.116 cv
55.8469 197.929 55.9143 197.694 56.1005 197.59 cv
56.2871 197.487 56.5227 197.554 56.6262 197.74 cv
60.7544 205.183 59.6093 213.028 53.2232 221.057 cv
53.1467 221.153 53.0345 221.203 52.9208 221.203 cv
cp
f
57.5088 206.172 mo
54.892 206.172 52.1741 204.013 51.2706 201.74 cv
51.1921 201.541 51.2887 201.317 51.487 201.238 cv
51.6847 201.16 51.9095 201.255 51.9891 201.454 cv
52.867 203.663 55.7981 205.835 58.2594 205.324 cv
60.4847 204.864 61.6418 202.272 61.5171 198.026 cv
61.5111 197.812 61.6786 197.634 61.8919 197.628 cv
62.1369 197.636 62.2834 197.79 62.2899 198.002 cv
62.4745 204.297 59.9418 205.765 58.4159 206.081 cv
58.117 206.142 57.8131 206.172 57.5088 206.172 cv
cp
f
29.7331 224.094 mo
28.2654 224.094 26.4688 223.579 24.5504 222.556 cv
24.3622 222.455 24.2913 222.221 24.3915 222.032 cv
24.492 221.845 24.7245 221.776 24.9147 221.873 cv
28.6865 223.888 31.2705 223.556 32.1576 222.335 cv
33.1421 220.979 32.2541 218.635 29.8945 216.366 cv
29.7406 216.218 29.7356 215.974 29.8834 215.82 cv
30.0324 215.665 30.2769 215.663 30.4298 215.809 cv
33.0843 218.362 34.0081 221.102 32.7824 222.789 cv
32.1496 223.661 31.0794 224.094 29.7331 224.094 cv
cp
f
25.1642 226.732 mo
24.9634 226.732 24.7939 226.577 24.7793 226.373 cv
24.7637 226.16 24.9243 225.975 25.137 225.96 cv
26.0411 225.894 30.6548 225.41 32.6683 222.303 cv
33.8451 220.488 33.9009 218.079 32.8348 215.146 cv
32.7618 214.946 32.8655 214.724 33.0662 214.651 cv
33.266 214.577 33.4883 214.682 33.5613 214.882 cv
34.7144 218.055 34.6324 220.693 33.3168 222.724 cv
31.104 226.138 26.1609 226.66 25.1924 226.731 cv
25.1833 226.732 25.1737 226.732 25.1642 226.732 cv
cp
f
30.5914 197.709 mo
28.9945 198.856 30.5531 201.509 32.1631 200.351 cv
33.7601 199.201 32.2014 196.55 30.5914 197.709 cv
cp
.980392 .341176 .392157 rgb
f
35.1617 194.579 mo
33.5658 195.727 35.124 198.379 36.7329 197.222 cv
38.3309 196.073 36.7727 193.42 35.1617 194.579 cv
cp
f
39.3612 192.034 mo
37.7654 193.183 39.3235 195.835 40.9325 194.677 cv
42.5304 193.528 40.9723 190.876 39.3612 192.034 cv
cp
f
44.5706 192.901 mo
43.9532 193.345 43.669 194.117 44.084 194.816 cv
44.4472 195.428 45.3795 195.749 45.9994 195.304 cv
46.6187 194.858 46.901 194.086 46.4874 193.387 cv
46.1227 192.778 45.1914 192.455 44.5706 192.901 cv
cp
f
26.3802 200.896 mo
24.7833 202.044 26.342 204.697 27.951 203.539 cv
29.5484 202.39 27.9902 199.737 26.3802 200.896 cv
cp
f
24.5514 206.289 mo
24.5137 206.309 24.4759 206.329 24.4377 206.348 cv
23.666 206.751 23.4576 207.818 23.8827 208.534 cv
24.4271 209.448 25.6608 209.54 26.4014 208.824 cv
26.4929 208.736 li
26.994 208.251 27.0594 207.425 26.7118 206.837 cv
26.253 206.068 25.3131 205.893 24.5514 206.289 cv
cp
f
32.7362 212.797 mo
32.0946 212.8 31.5191 213.253 31.3621 213.874 cv
31.173 214.612 31.5709 215.165 32.1541 215.513 cv
32.4484 215.857 32.9938 215.885 33.3093 215.524 cv
33.8073 215.242 34.1801 214.843 34.1761 214.217 cv
34.1711 213.437 33.5135 212.792 32.7362 212.797 cv
cp
f
29.4342 214.93 mo
28.4139 215.663 29.4095 217.358 30.4369 216.617 cv
31.4583 215.883 30.4621 214.19 29.4342 214.93 cv
cp
f
27.3975 217.114 mo
27.3749 217.1 27.3523 217.086 27.3296 217.072 cv
26.6741 216.676 25.6079 217.218 25.7041 218.038 cv
25.7071 218.063 25.7096 218.09 25.7126 218.115 cv
25.8112 218.941 26.6268 219.558 27.4273 219.082 cv
28.1879 218.629 28.1271 217.553 27.3975 217.114 cv
cp
f
23.841 220.969 mo
22.2452 222.117 23.8033 224.77 25.4128 223.611 cv
27.0107 222.462 25.4515 219.81 23.841 220.969 cv
cp
f
24.6626 224.978 mo
23.0667 226.126 24.6248 228.778 26.2339 227.621 cv
27.8317 226.472 26.2736 223.82 24.6626 224.978 cv
cp
f
50.6498 200.891 mo
49.0538 202.039 50.6125 204.69 52.2214 203.533 cv
53.8193 202.384 52.2612 199.732 50.6498 200.891 cv
cp
f
55.9712 196.866 mo
55.9485 196.874 55.9305 196.886 55.9089 196.893 cv
54.9267 196.919 54.3919 198.148 54.8649 198.947 cv
55.4293 199.894 57.1817 199.811 57.3628 198.585 cv
57.399 198.411 57.3864 198.413 57.3297 198.593 cv
57.7261 197.725 57.0257 196.514 55.9712 196.866 cv
cp
f
62.7085 197.359 mo
62.1797 196.857 61.4582 196.648 60.7931 197.043 cv
59.9559 197.54 59.8186 198.734 60.5194 199.41 cv
61.1071 199.975 62.0725 199.955 62.6366 199.368 cv
63.1165 198.869 63.2504 197.87 62.7085 197.359 cv
cp
f
107.403 321.078 mo
105.459 317.894 103.773 314.32 102.307 310.631 cv
104.127 309.035 105.165 307.745 105.892 305.274 cv
106.689 302.565 106.976 299.679 107.17 296.875 cv
107.212 296.28 106.353 296.217 106.26 296.795 cv
105.509 301.408 105.23 306.093 101.851 309.484 cv
100.223 305.217 98.9023 300.822 97.8901 296.684 cv
97.8257 296.419 97.7733 296.155 97.715 295.889 cv
98.9165 294.086 100.844 292.732 101.694 290.717 cv
102.857 287.96 103.41 285.032 104.823 282.374 cv
105.077 281.897 104.505 281.486 104.139 281.891 cv
102.442 283.77 101.917 286.636 101.106 288.968 cv
100.361 291.114 98.7152 292.522 97.3789 294.207 cv
95.8414 285.529 97.3568 277.032 100.243 268.701 cv
100.432 268.153 99.6571 267.886 99.4135 268.393 cv
97.3387 272.742 96.105 277.328 95.608 282.003 cv
93.7605 278.367 91.9252 275.07 91.8507 270.629 cv
91.8426 270.124 91.0718 270.037 91.0557 270.558 cv
90.9088 275.477 92.4001 280.758 95.4087 284.728 cv
95.2437 288.359 95.4953 292.027 96.1534 295.666 cv
96.1876 295.857 96.2439 296.044 96.2801 296.235 cv
96.2801 296.235 96.2801 296.24 96.2822 296.24 cv
96.733 298.528 97.393 300.778 98.1437 302.997 cv
96.1493 302.227 94.5434 300.985 93.0219 299.466 cv
91.5992 298.051 89.6128 295.845 89.6993 293.698 cv
89.7154 293.311 89.1801 293.275 89.1136 293.646 cv
88.6951 295.956 90.3856 298.194 91.7601 299.87 cv
93.2292 301.659 95.6441 304.141 98.0953 304.378 cv
98.2946 304.396 98.4536 304.328 98.5723 304.221 cv
99.0775 305.644 99.6048 307.059 100.146 308.457 cv
101.406 311.699 102.595 315.094 104.133 318.266 cv
101.786 317.558 99.3934 317.212 97.1677 315.988 cv
94.2133 314.364 91.7762 311.875 89.4377 309.494 cv
89.1801 309.232 88.7937 309.56 89.003 309.858 cv
90.8264 312.442 93.02 314.622 95.5436 316.515 cv
98.4213 318.673 101.665 319.091 104.928 320.343 cv
105.04 320.385 105.143 320.397 105.244 320.397 cv
105.497 320.846 105.755 321.291 106.029 321.726 cv
106.54 322.541 107.916 321.919 107.403 321.078 cv
cp
.376471 .564706 .470588 rgb
f
100.273 265.223 mo
96.4834 265.223 95.934 271.126 99.7557 271.126 cv
103.547 271.126 104.095 265.223 100.273 265.223 cv
cp
.960784 .643137 .54902 rgb
f
104.739 278.622 mo
100.949 278.622 100.402 284.525 104.223 284.525 cv
108.013 284.525 108.56 278.622 104.739 278.622 cv
cp
f
107.345 293.325 mo
103.555 293.325 103.006 299.228 106.828 299.228 cv
110.619 299.228 111.166 293.325 107.345 293.325 cv
cp
f
93.4365 269.486 mo
93.2393 268.403 92.1706 267.668 91.0899 267.866 cv
90.295 268.011 89.7576 268.592 89.5544 269.303 cv
89.5564 269.291 89.5585 269.278 89.5585 269.264 cv
89.5504 269.291 89.5464 269.317 89.5384 269.341 cv
89.5243 269.395 89.5082 269.445 89.4981 269.498 cv
89.4518 269.687 89.4096 269.876 89.4136 270.075 cv
89.4256 270.832 89.7436 271.512 90.4962 271.792 cv
90.8606 271.927 91.251 271.919 91.6051 271.804 cv
92.6818 271.705 93.682 270.824 93.4365 269.486 cv
cp
f
89.1056 290.907 mo
85.3162 290.907 84.7667 296.809 88.5904 296.809 cv
92.38 296.809 92.9294 290.907 89.1056 290.907 cv
cp
f
89.478 306.725 mo
85.6884 306.725 85.139 312.627 88.9628 312.627 cv
92.7523 312.627 93.3017 306.725 89.478 306.725 cv
cp
f
251.902 48.7109 mo
255.532 47.8501 259.454 47.355 263.414 47.1065 cv
264.367 49.3313 265.272 50.7184 267.396 52.1754 cv
269.723 53.7733 272.378 54.9416 274.983 55.9946 cv
275.537 56.22 275.863 55.422 275.342 55.1548 cv
271.19 53.0106 266.822 51.2919 264.647 47.028 cv
269.207 46.8037 273.796 46.9113 278.043 47.2323 cv
278.316 47.2534 278.582 47.2856 278.853 47.3123 cv
280.195 49.0138 280.885 51.2663 282.536 52.6991 cv
284.797 54.6599 287.409 56.0943 289.498 58.2617 cv
289.872 58.6505 290.44 58.2345 290.169 57.7606 cv
288.908 55.5655 286.347 54.1768 284.381 52.682 cv
282.572 51.309 281.744 49.3072 280.557 47.5145 cv
289.284 48.7442 296.891 52.8199 303.917 58.1474 cv
304.379 58.4976 304.873 57.843 304.467 57.4547 cv
300.976 54.1335 296.998 51.538 292.708 49.6156 cv
296.738 48.9872 300.441 48.2646 304.687 49.5718 cv
305.17 49.7207 305.49 49.0144 305.001 48.8377 cv
300.37 47.1724 294.886 46.9525 290.179 48.5812 cv
286.778 47.2981 283.213 46.3996 279.549 45.8965 cv
279.357 45.8698 279.162 45.8658 278.97 45.8412 cv
278.97 45.8412 278.966 45.8396 278.964 45.8412 cv
276.649 45.5604 274.306 45.4905 271.962 45.5152 cv
273.314 43.8584 274.993 42.7168 276.909 41.7412 cv
278.695 40.8276 281.409 39.6231 283.422 40.3718 cv
283.785 40.5065 283.986 40.0095 283.654 39.8309 cv
281.587 38.7164 278.937 39.6297 276.915 40.4165 cv
274.759 41.2582 271.651 42.7847 270.665 45.0412 cv
270.587 45.2253 270.602 45.3974 270.666 45.5433 cv
269.157 45.5825 267.649 45.645 266.151 45.7255 cv
262.678 45.9176 259.081 45.9956 255.589 46.4736 cv
256.99 44.4626 258.062 42.2952 259.916 40.5589 cv
262.376 38.2536 265.498 36.7085 268.487 35.2244 cv
268.815 35.0603 268.623 34.5909 268.275 34.6975 cv
265.254 35.6298 262.501 37.0391 259.918 38.8508 cv
256.974 40.9182 255.57 43.872 253.369 46.5857 cv
253.293 46.6794 253.25 46.7735 253.219 46.869 cv
252.713 46.9707 252.211 47.0778 251.713 47.2031 cv
250.779 47.4365 250.944 48.9379 251.902 48.7109 cv
cp
.376471 .564706 .470588 rgb
f
307.214 59.2549 mo
308.389 55.652 302.948 53.2994 301.763 56.9324 cv
300.587 60.5373 306.028 62.8878 307.214 59.2549 cv
cp
.960784 .643137 .54902 rgb
f
293.09 59.3449 mo
294.266 55.7421 288.824 53.3909 287.639 57.0245 cv
286.463 60.6268 291.905 62.9779 293.09 59.3449 cv
cp
f
278.304 57.262 mo
279.48 53.6597 274.038 51.3066 272.853 54.9401 cv
271.677 58.5444 277.119 60.8955 278.304 57.262 cv
cp
f
305.282 51.4338 mo
306.372 51.5818 307.402 50.7938 307.549 49.7051 cv
307.659 48.9046 307.272 48.2133 306.66 47.7993 cv
306.671 47.8053 306.683 47.8109 306.695 47.8154 cv
306.672 47.7993 306.649 47.7877 306.628 47.7721 cv
306.582 47.7424 306.538 47.7112 306.491 47.6851 cv
306.326 47.5829 306.159 47.4838 305.968 47.426 cv
305.246 47.2031 304.5 47.2946 304.001 47.9231 cv
303.759 48.2274 303.647 48.6008 303.646 48.9735 cv
303.405 50.0276 303.933 51.2522 305.282 51.4338 cv
cp
f
286.261 40.6732 mo
287.436 37.0703 281.994 34.7177 280.809 38.3522 cv
279.634 41.9551 285.075 44.3082 286.261 40.6732 cv
cp
f
271.107 36.1209 mo
272.282 32.518 266.841 30.1655 265.655 33.8005 cv
264.48 37.4028 269.922 39.7559 271.107 36.1209 cv
cp
f
121.693 83.9514 mo
123.758 83.3256 125.489 82.1648 127.318 81.0384 cv
130.233 79.2433 133.53 78.3553 136.821 77.5271 cv
143.164 75.9287 149.739 75.2832 156.243 74.7273 cv
168.558 73.6758 181.74 74.8636 193.152 79.8475 cv
193.465 79.9848 193.725 79.5215 193.408 79.3745 cv
182.268 74.2035 169.542 72.8481 157.383 73.4901 cv
150.776 73.8397 144.125 74.6926 137.655 76.0696 cv
134.934 76.6481 131.994 77.3017 129.457 78.478 cv
126.622 79.7911 124.06 81.6311 121.306 83.1077 cv
120.827 83.3643 121.194 84.1024 121.693 83.9514 cv
cp
.658824 .752941 .564706 rgb
f
197.372 80.815 mo
197.407 80.6309 197.392 80.4487 197.396 80.2646 cv
197.596 79.3438 197.43 78.3321 196.84 77.5829 cv
195.387 75.7451 192.584 74.9159 190.535 76.3649 cv
189.332 77.2152 188.659 78.5037 188.667 79.9803 cv
188.674 81.4072 189.642 82.5749 190.793 83.2898 cv
193.02 84.6759 196.854 83.5907 197.372 80.815 cv
cp
.980392 .341176 .392157 rgb
f
176.629 82.2091 mo
177.368 81.5515 178.073 80.3597 178.188 79.3681 cv
178.293 78.4755 178.31 77.4275 177.705 76.6778 cv
177.15 75.9911 176.566 75.58 175.85 75.3511 cv
175.41 75.0533 174.924 74.8022 174.355 74.6704 cv
173.198 74.3997 171.72 74.5647 170.757 75.3123 cv
169.246 76.4837 168.829 78.079 169.23 79.9063 cv
169.59 81.5566 170.858 83.0172 172.476 83.4881 cv
174.033 83.9409 175.495 83.2163 176.629 82.2091 cv
cp
f
187.146 74.5079 mo
187.722 73.7622 188.044 72.9527 188.084 72.1191 cv
188.306 71.3855 188.24 70.6052 187.799 69.8611 cv
186.289 67.3349 182.832 66.6743 180.746 68.9273 cv
179.634 70.1307 179.345 71.5461 179.623 73.1248 cv
179.883 74.6004 181.011 75.4659 182.333 75.9478 cv
183.856 76.4992 186.162 75.7858 187.146 74.5079 cv
cp
f
163.253 70.6379 mo
163.309 70.5494 163.374 70.4593 163.422 70.3702 cv
164.314 68.7989 164.213 67.0099 163.004 65.6479 cv
161.792 64.2835 159.659 64.5215 158.121 65.0351 cv
155.76 65.825 154.615 67.8748 155.134 70.2843 cv
155.49 71.9395 156.957 73.0604 158.453 73.5882 cv
160.488 74.3067 162.795 72.6358 163.253 70.6379 cv
cp
f
148.264 83.1701 mo
149.193 83.0055 149.911 82.2363 150.292 81.3524 cv
150.701 80.7375 150.945 80.0025 150.94 79.2749 cv
150.933 78.2998 150.434 77.4843 149.816 76.7638 cv
149.786 76.7181 149.766 76.6728 149.735 76.628 cv
149.515 76.3125 149.234 76.056 148.932 75.8331 cv
148.837 75.742 148.746 75.6495 148.658 75.5614 cv
147.342 74.3217 145.21 74.3826 143.967 75.6963 cv
143.567 76.1204 143.318 76.624 143.187 77.1523 cv
143.16 77.1965 143.133 77.2429 143.106 77.2871 cv
142.649 78.0403 142.41 78.8654 142.397 79.7433 cv
142.381 81.0344 143.235 82.3746 144.395 82.9286 cv
145.686 83.5429 146.907 83.4111 148.264 83.1701 cv
cp
f
191.22 81.1133 mo
190.9 80.584 190.308 80.2395 189.936 79.7267 cv
189.79 79.5245 189.662 79.3112 189.549 79.0923 cv
190.388 79.6095 191.199 80.1679 192.145 80.4749 cv
192.856 80.7043 193.295 79.5451 192.612 79.2468 cv
191.802 78.8921 191.061 78.4232 190.302 77.9829 cv
190.323 77.9668 190.345 77.9513 190.366 77.9347 cv
191.075 77.5543 191.909 77.3942 192.691 77.2323 cv
193.29 77.1115 193.234 76.1415 192.648 76.0459 cv
192.591 76.0373 192.539 76.0414 192.483 76.0364 cv
192.485 76.0319 li
192.478 76.0329 192.47 76.0343 192.463 76.0348 cv
191.816 75.971 191.256 76.1279 190.757 76.4162 cv
190.054 76.628 189.391 76.9354 188.825 77.4345 cv
188.636 77.3953 188.435 77.4647 188.41 77.6996 cv
188.318 78.5852 188.484 79.3323 188.859 80.1373 cv
189.176 80.8185 189.883 81.7437 190.644 81.9224 cv
191.104 82.029 191.462 81.5118 191.22 81.1133 cv
cp
.658824 .752941 .564706 rgb
f
171.458 78.2496 mo
171.826 77.6087 171.975 76.9741 172.481 76.3976 cv
172.841 75.9876 173.273 75.6414 173.718 75.3184 cv
173.928 75.6762 174.089 76.0525 174.142 76.4841 cv
174.226 77.1804 173.976 77.7244 173.761 78.3602 cv
173.625 78.7567 174.201 79.0304 174.462 78.7366 cv
175.12 77.993 175.141 76.952 174.84 75.9991 cv
175.546 76.7513 175.978 77.7233 176.075 78.801 cv
176.126 79.3438 176.897 79.3061 176.915 78.7663 cv
176.969 77.093 175.841 75.5694 174.386 74.8319 cv
174.752 74.5215 174.355 73.9233 173.904 74.1668 cv
173.868 74.1854 173.825 74.21 173.789 74.2301 cv
173.781 74.2211 173.773 74.2085 173.764 74.1995 cv
173.503 73.9489 173.178 74.2468 173.258 74.5301 cv
171.95 75.2887 170.26 76.4872 170.505 78.0293 cv
170.578 78.5066 171.189 78.7185 171.458 78.2496 cv
cp
f
181.955 75.9977 mo
183.038 75.9961 183.922 75.8638 184.876 75.3094 cv
185.742 74.8062 186.629 73.7497 186.681 72.7273 cv
186.71 72.191 185.9 71.878 185.568 72.3117 cv
185.07 72.9648 184.862 73.6561 184.162 74.1662 cv
183.621 74.5612 182.951 74.8722 182.29 75.1015 cv
182.29 75.0996 182.288 75.0996 182.286 75.0975 cv
182.975 74.3207 183.403 73.2018 183.84 72.3405 cv
184.03 71.9686 183.494 71.537 183.226 71.8946 cv
182.844 72.4028 182.444 72.8964 182.063 73.4041 cv
181.917 73.6008 181.751 73.7955 181.587 73.9932 cv
181.557 73.9097 181.524 73.8287 181.497 73.7451 cv
181.287 73.076 181.291 72.2775 181.614 71.6447 cv
181.803 71.2754 181.281 71.0092 181.058 71.3433 cv
180.526 72.1337 180.307 72.9819 180.415 73.9323 cv
180.461 74.3404 180.634 74.8444 180.907 75.2505 cv
180.939 75.4905 181.114 75.6938 181.346 75.7249 cv
181.5 75.8401 181.667 75.9272 181.854 75.9594 cv
181.89 75.9704 181.913 75.9987 181.955 75.9977 cv
cp
f
161.891 69.1532 mo
161.684 68.8504 161.237 69.131 161.41 69.4535 cv
161.85 70.2731 161.726 71.225 161.385 72.0607 cv
161.283 72.3112 161.151 72.514 161.004 72.6981 cv
160.927 72.6604 160.834 72.6372 160.715 72.6574 cv
160.705 72.6589 160.698 72.658 160.686 72.6599 cv
160.397 71.9827 160.123 71.3347 160.004 70.5594 cv
159.945 70.1609 159.334 70.164 159.364 70.5861 cv
159.412 71.2401 159.473 72.0104 159.705 72.6866 cv
159.246 72.6232 158.848 72.429 158.367 71.9918 cv
157.717 71.4037 157.191 70.6349 156.81 69.8475 cv
156.646 69.5079 156.202 69.7902 156.259 70.0996 cv
156.474 71.2779 157.077 72.3243 157.93 73.1565 cv
158.338 73.5575 158.957 73.8926 159.581 74.0023 cv
159.551 74.2744 159.722 74.5788 160.042 74.5432 cv
162.321 74.2915 163.008 70.7787 161.891 69.1532 cv
cp
f
145.061 79.2 mo
144.843 78.5696 144.84 77.831 144.924 77.1754 cv
144.958 76.9158 145.037 76.7066 145.119 76.4982 cv
145.184 76.5415 145.252 76.5792 145.316 76.6291 cv
145.796 77.0164 146.147 77.6227 146.303 78.2139 cv
146.399 78.571 146.881 78.4358 146.901 78.1112 cv
146.945 77.3928 146.732 76.7624 146.252 76.215 cv
146.072 76.0087 145.84 75.7989 145.591 75.6072 cv
146.168 75.4905 146.761 75.5539 147.299 75.8523 cv
148.137 76.3176 147.992 77.1307 147.991 77.9427 cv
147.991 78.4548 148.791 78.6722 149.001 78.1771 cv
149.512 76.9732 149.026 75.653 147.973 74.9421 cv
147.281 74.4762 146.388 74.4863 145.572 74.7041 cv
145.454 74.5768 145.289 74.5013 145.091 74.5859 cv
144.826 74.6985 144.639 74.8998 144.478 75.1268 cv
144.388 75.1177 144.298 75.0884 144.21 75.0996 cv
143.885 75.1368 143.608 75.5942 143.934 75.8366 cv
143.981 75.8724 144.034 75.899 144.083 75.9302 cv
143.997 76.1928 143.93 76.4584 143.89 76.7101 cv
143.732 77.6745 143.931 78.6626 144.501 79.4555 cv
144.7 79.7293 145.181 79.5482 145.061 79.2 cv
cp
f
197.613 83.4518 mo
197.345 82.8607 197.073 82.3917 197.292 81.7725 cv
197.57 82.1317 197.876 82.4809 198.288 82.6439 cv
198.766 82.8336 199.124 82.3278 198.803 81.9334 cv
198.596 81.6819 198.327 81.4781 198.047 81.2819 cv
198.17 81.2597 198.294 81.2285 198.41 81.2205 cv
198.845 81.1913 199.215 81.4605 199.651 81.469 cv
200.039 81.4756 200.198 81.0308 200.04 80.7315 cv
199.721 80.1337 198.992 80.0095 198.361 80.0522 cv
197.667 80.0981 197.178 80.4829 196.682 80.9236 cv
196.497 81.0866 196.534 81.2904 196.658 81.4318 cv
196.021 82.1624 196.066 83.2713 196.76 83.9837 cv
197.105 84.3378 197.832 83.9364 197.613 83.4518 cv
cp
.290196 .184314 .137255 rgb
f
173.286 85.9931 mo
174.731 85.6757 173.907 83.5797 173.409 82.8209 cv
173.229 82.5467 172.943 82.5825 172.765 82.7495 cv
171.915 82.4934 170.599 83.1963 170.211 83.794 cv
169.945 84.206 170.503 84.6921 170.892 84.434 cv
171.074 84.3127 171.537 83.9554 171.966 83.7552 cv
171.789 84.0148 171.627 84.282 171.516 84.5687 cv
171.328 85.0502 171.923 85.6193 172.313 85.1469 cv
172.559 84.8515 172.759 84.5209 172.947 84.1823 cv
172.966 84.2886 172.994 84.3886 173.002 84.5003 cv
173.031 84.8646 172.774 85.1257 172.724 85.4703 cv
172.675 85.817 172.942 86.068 173.286 85.9931 cv
cp
f
186.331 65.9941 mo
186.207 65.6313 185.741 65.7582 185.712 66.1003 cv
185.64 66.9435 184.96 66.9933 184.467 67.4793 cv
184.211 67.7324 184.341 68.2572 184.715 68.3104 cv
185.924 68.4855 186.683 67.0195 186.331 65.9941 cv
cp
f
184.556 67.4078 mo
184.636 67.3354 184.696 67.2469 184.701 67.1417 cv
184.728 66.6567 184.631 66.2723 184.869 65.816 cv
185.092 65.3838 184.487 65.0854 184.222 65.4653 cv
184.191 65.5086 184.174 65.5554 184.145 65.5997 cv
184.028 65.2746 183.484 65.1695 183.281 65.5332 cv
182.792 66.4022 182.932 67.4904 183.945 67.8708 cv
184.289 68.0005 184.521 67.7102 184.556 67.4078 cv
cp
f
149.146 84.93 mo
149.154 84.6774 149.207 84.3102 149.213 83.9504 cv
149.419 84.1391 149.604 84.3424 149.75 84.6553 cv
150.061 85.3265 151.034 84.7101 150.724 84.0476 cv
150.393 83.3376 149.805 82.6252 148.965 82.6167 cv
148.847 82.6156 148.764 82.6715 148.692 82.7404 cv
148.67 82.7233 148.663 82.6876 148.636 82.677 cv
147.648 82.2971 146.924 83.4468 146.69 84.2739 cv
146.512 84.9114 147.457 85.248 147.762 84.6804 cv
147.814 84.5849 147.892 84.5038 147.966 84.4223 cv
148.001 84.688 148.049 84.9355 148.087 85.1132 cv
148.227 85.7501 149.124 85.5066 149.146 84.93 cv
cp
f
160.115 64.9365 mo
160.949 64.7816 161.424 63.7929 161.432 63.003 cv
161.434 62.4305 160.588 62.4859 160.555 63.0398 cv
160.537 63.3503 160.401 63.5298 160.23 63.6777 cv
160.037 63.2717 159.674 62.9326 159.265 62.8119 cv
158.961 62.7218 158.733 63.1525 158.972 63.3567 cv
159.133 63.4931 159.208 63.6485 159.261 63.8116 cv
158.813 63.7532 158.401 63.7431 157.961 63.4478 cv
157.631 63.2239 157.233 63.7728 157.55 64.0163 cv
158.031 64.3841 158.719 64.6971 159.358 64.6568 cv
159.358 64.6583 159.358 64.6583 159.358 64.6583 cv
159.386 65.0704 159.849 65.1851 160.115 64.9365 cv
cp
f
182.909 347.797 mo
183.454 347.772 184.016 347.65 184.557 347.458 cv
185.299 347.382 185.994 347.156 186.639 346.764 cv
187.751 346.081 188.556 344.971 188.859 343.703 cv
189.475 341.129 187.838 338.316 185.204 337.748 cv
184.818 337.665 184.431 337.582 184.044 337.5 cv
181.821 337.018 179.622 337.984 178.482 339.956 cv
177.49 341.671 177.423 343.653 178.438 345.394 cv
179.329 346.925 181.148 347.877 182.909 347.797 cv
cp
.960784 .643137 .54902 rgb
f
173.433 333.352 mo
174.298 332.821 175.14 331.823 175.293 330.787 cv
175.46 329.661 175.407 328.654 174.796 327.656 cv
174.224 326.725 173.294 326.05 172.229 325.797 cv
171.166 325.541 170.031 325.721 169.1 326.295 cv
168.235 326.825 167.393 327.822 167.24 328.86 cv
167.072 329.985 167.125 330.992 167.738 331.991 cv
168.309 332.922 169.238 333.597 170.304 333.85 cv
171.367 334.105 172.502 333.923 173.433 333.352 cv
cp
f
172.233 358.799 mo
173.107 358.96 174.016 358.92 174.871 358.66 cv
177.73 357.791 179.557 354.584 178.6 351.689 cv
178.431 351.176 178.23 350.662 177.933 350.208 cv
177.211 349.104 175.83 347.818 174.413 347.658 cv
173.34 347.536 172.941 347.453 172.203 347.576 cv
169.358 347.911 167.117 350.444 167.225 353.356 cv
167.277 354.745 167.859 356.366 168.972 357.277 cv
169.707 357.976 170.567 358.446 171.554 358.686 cv
171.785 358.739 172.011 358.774 172.233 358.799 cv
cp
f
157.983 331.996 mo
158.997 331.371 159.986 330.2 160.166 328.983 cv
160.364 327.661 160.303 326.478 159.582 325.306 cv
158.91 324.211 157.819 323.419 156.568 323.119 cv
155.32 322.823 153.987 323.033 152.892 323.706 cv
151.876 324.33 150.888 325.5 150.706 326.718 cv
150.51 328.041 150.571 329.224 151.291 330.395 cv
151.964 331.489 153.056 332.282 154.305 332.58 cv
155.555 332.881 156.887 332.668 157.983 331.996 cv
cp
f
158.116 355.477 mo
159.356 354.715 160.251 353.478 160.589 352.065 cv
161.012 350.302 160.513 348.05 159.074 346.837 cv
158.704 346.455 158.284 346.124 157.806 345.856 cv
156.929 345.381 155.992 345.156 154.995 345.184 cv
154.991 345.183 154.985 345.183 154.981 345.183 cv
154.022 345.22 153.131 345.488 152.312 345.989 cv
151.158 346.696 150.084 347.996 149.86 349.369 cv
149.673 350.524 149.62 351.248 149.967 352.381 cv
151.007 355.773 155.083 357.339 158.116 355.477 cv
cp
f
145.065 326.593 mo
145.459 324.944 144.938 323.175 143.714 321.999 cv
142.503 320.838 140.606 320.325 138.992 320.87 cv
138.582 321.008 138.137 321.173 137.773 321.429 cv
136.36 322.424 135.445 323.867 135.504 325.649 cv
135.573 327.676 137.029 329.583 139.023 330.076 cv
139.061 330.086 139.101 330.102 139.139 330.112 cv
139.146 330.113 139.15 330.117 139.157 330.118 cv
139.174 330.12 139.193 330.125 139.211 330.129 cv
139.209 330.127 139.204 330.126 139.201 330.124 cv
141.706 330.737 144.431 329.241 145.065 326.593 cv
cp
f
141.943 352.38 mo
143.053 351.696 144.136 350.415 144.334 349.08 cv
144.548 347.635 144.481 346.34 143.694 345.057 cv
142.958 343.86 141.763 342.992 140.395 342.666 cv
139.029 342.339 137.569 342.571 136.373 343.306 cv
135.261 343.989 134.179 345.271 133.981 346.605 cv
133.766 348.05 133.834 349.345 134.621 350.627 cv
135.357 351.825 136.552 352.692 137.918 353.019 cv
139.286 353.347 140.744 353.114 141.943 352.38 cv
cp
f
182.639 347.584 mo
184.216 347.594 185.619 346.874 186.401 345.506 cv
186.882 344.667 185.899 343.907 185.131 344.297 cv
183.663 345.039 182.159 344.776 180.736 344.071 cv
179.964 343.686 179.298 343.499 178.503 343.935 cv
177.838 344.299 177.782 345.305 178.144 345.892 cv
178.974 347.247 181.203 347.576 182.639 347.584 cv
cp
.839216 .513726 .439216 rgb
f
171.048 356.006 mo
170.69 355.021 170.584 353.706 170.724 352.671 cv
170.779 352.257 170.915 351.763 171.168 351.423 cv
171.547 350.915 172.133 350.78 172.389 350.147 cv
172.707 349.358 172.402 348.704 171.618 348.403 cv
169.762 347.69 168.332 350.249 168.168 351.743 cv
167.955 353.668 168.617 355.361 170.067 356.607 cv
170.492 356.973 171.263 356.602 171.048 356.006 cv
cp
f
153.525 353.699 mo
153.343 352.5 152.946 351.401 152.981 350.173 cv
153.015 349.044 153.441 347.675 154.082 346.751 cv
154.506 346.14 153.531 345.453 153.048 345.99 cv
152.031 347.12 151.292 348.003 150.812 349.489 cv
150.321 351.008 150.577 353.02 151.499 354.31 cv
152.067 355.105 153.702 354.881 153.525 353.699 cv
cp
f
137.157 349.671 mo
137.207 348.713 137.226 347.788 137.443 346.849 cv
137.728 345.619 138.772 344.701 138.738 343.409 cv
138.72 342.633 137.875 341.948 137.108 342.242 cv
135.49 342.86 134.899 344.968 134.665 346.55 cv
134.441 348.069 134.867 349.709 136.405 350.287 cv
136.807 350.437 137.138 350.023 137.157 349.671 cv
cp
f
137.703 327.167 mo
137.729 326.262 137.749 325.477 138.238 324.684 cv
138.682 323.966 139.661 323.376 140.536 323.443 cv
141.083 323.486 141.135 322.628 140.629 322.504 cv
139.878 322.319 139.447 322.125 138.646 322.284 cv
137.964 322.42 137.23 322.831 136.742 323.315 cv
135.691 324.359 135.204 326.101 135.622 327.511 cv
135.977 328.711 137.671 328.346 137.703 327.167 cv
cp
f
155.647 330.429 mo
155.295 329.665 154.693 329.098 154.263 328.379 cv
154.024 327.981 154.02 326.214 154.717 326.216 cv
155.576 326.22 155.517 324.922 154.671 324.893 cv
153.105 324.84 151.809 326.326 151.593 327.815 cv
151.331 329.612 152.492 331.296 153.999 332.157 cv
155.172 332.826 156.128 331.473 155.647 330.429 cv
cp
f
171.72 331.479 mo
171.272 331.05 170.874 330.738 170.586 330.174 cv
170.485 329.975 170.352 329.799 170.323 329.568 cv
170.304 329.417 170.35 328.915 170.467 328.831 cv
170.966 328.467 170.642 327.51 169.995 327.781 cv
169.395 328.031 168.989 328.072 168.573 328.641 cv
168.198 329.151 168.034 329.766 167.98 330.39 cv
167.844 331.964 168.87 333.495 170.331 334.025 cv
171.794 334.555 172.727 332.443 171.72 331.479 cv
cp
f
177.253 343.502 mo
177.227 343.502 177.202 343.5 177.176 343.496 cv
177.066 343.479 176.97 343.43 176.895 343.359 cv
175.439 342.789 160.122 340.531 146.585 338.536 cv
137.347 337.174 127.794 335.766 121.436 334.73 cv
121.155 334.685 120.964 334.42 121.01 334.14 cv
121.056 333.858 121.316 333.662 121.602 333.714 cv
127.952 334.747 137.501 336.155 146.735 337.516 cv
173.589 341.475 177.27 342.135 177.66 342.659 cv
177.741 342.769 177.782 342.927 177.762 343.062 cv
177.723 343.318 177.504 343.502 177.253 343.502 cv
cp
.290196 .184314 .137255 rgb
f
172.204 348.091 mo
172.041 348.091 171.881 348.015 171.781 347.871 cv
167.246 341.375 li
167.15 341.238 167.127 341.061 167.185 340.904 cv
169.819 333.674 li
169.917 333.407 170.211 333.269 170.48 333.366 cv
170.747 333.463 170.885 333.759 170.788 334.026 cv
168.244 341.005 li
172.626 347.281 li
172.788 347.515 172.732 347.835 172.498 347.998 cv
172.409 348.061 172.305 348.091 172.204 348.091 cv
cp
f
151.997 346.456 mo
151.755 346.456 151.54 346.285 151.492 346.038 cv
150.009 338.388 li
149.987 338.272 150.005 338.151 150.061 338.047 cv
153.055 332.475 li
153.189 332.225 153.501 332.132 153.753 332.265 cv
154.003 332.4 154.098 332.712 153.963 332.962 cv
151.056 338.373 li
152.503 345.843 li
152.557 346.122 152.375 346.393 152.096 346.447 cv
152.062 346.453 152.029 346.456 151.997 346.456 cv
cp
f
137.493 343.849 mo
137.304 343.849 137.122 343.745 137.032 343.565 cv
133.502 336.543 li
133.434 336.408 133.429 336.249 133.489 336.109 cv
136.799 328.419 li
136.911 328.156 137.214 328.034 137.476 328.149 cv
137.737 328.261 137.858 328.565 137.746 328.826 cv
134.531 336.295 li
137.952 343.102 li
138.08 343.357 137.978 343.666 137.724 343.793 cv
137.649 343.832 137.57 343.849 137.493 343.849 cv
cp
f
181.018 337.609 mo
180.062 338.11 176.605 341.163 176.848 343.006 cv
177.224 345.87 181.746 348.416 181.613 347.645 cv
181.526 347.151 179.582 345.659 179.494 345.164 cv
179.406 344.671 181.257 345.186 181.134 344.928 cv
181.011 344.668 179.482 343.637 179.438 343.391 cv
179.394 343.143 181.263 341.897 181.263 341.897 cv
179.313 341.529 li
181.319 339.901 li
179.738 339.746 li
181.018 337.609 li
cp
f
166.945 330.117 mo
167.122 330.969 168.744 334.322 170.229 334.535 cv
172.537 334.866 175.503 331.907 174.875 331.842 cv
174.471 331.801 172.888 332.986 172.485 332.949 cv
172.082 332.908 172.884 331.583 172.658 331.622 cv
172.429 331.659 171.295 332.625 171.092 332.606 cv
170.892 332.585 170.332 330.86 170.332 330.86 cv
169.619 332.296 li
168.792 330.381 li
168.325 331.577 li
166.945 330.117 li
cp
f
150.813 329.083 mo
150.992 329.936 152.614 333.289 154.097 333.501 cv
156.407 333.834 159.372 330.873 158.744 330.808 cv
158.341 330.769 156.757 331.953 156.353 331.913 cv
155.951 331.874 156.754 330.549 156.526 330.589 cv
156.299 330.627 155.164 331.592 154.962 331.572 cv
154.761 331.552 154.2 329.828 154.2 329.828 cv
153.488 331.263 li
152.658 329.349 li
152.194 330.543 li
150.813 329.083 li
cp
f
135.744 324.03 mo
135.48 324.94 135.332 328.994 136.651 329.954 cv
138.703 331.451 143.067 330.114 142.495 329.732 cv
142.126 329.486 140 329.821 139.631 329.577 cv
139.264 329.335 140.713 328.467 140.472 328.388 cv
140.235 328.309 138.652 328.66 138.466 328.538 cv
138.284 328.419 138.622 326.472 138.622 326.472 cv
137.205 327.49 li
137.384 325.226 li
136.329 326.138 li
135.744 324.03 li
cp
f
142.531 343.675 mo
141.874 342.991 138.436 340.837 136.944 341.503 cv
134.624 342.533 133.603 346.979 134.219 346.674 cv
134.615 346.479 135.388 344.469 135.785 344.273 cv
136.177 344.075 136.204 345.764 136.393 345.594 cv
136.579 345.428 137.066 343.88 137.264 343.781 cv
137.46 343.685 138.977 344.949 138.977 344.949 cv
138.804 343.212 li
140.675 344.499 li
140.414 343.127 li
142.531 343.675 li
cp
f
158.015 346.682 mo
157.333 346.027 153.812 344.011 152.347 344.735 cv
150.07 345.855 149.226 350.341 149.83 350.012 cv
150.216 349.8 150.911 347.762 151.298 347.55 cv
151.683 347.335 151.778 349.022 151.959 348.844 cv
152.138 348.671 152.564 347.106 152.759 346.999 cv
152.949 346.894 154.515 348.097 154.515 348.097 cv
154.274 346.369 li
156.195 347.58 li
155.878 346.221 li
158.015 346.682 li
cp
f
176.981 349.323 mo
176.315 348.52 172.723 345.875 171.031 346.483 cv
168.402 347.419 166.917 352.214 167.618 351.931 cv
168.068 351.747 169.082 349.607 169.532 349.425 cv
169.98 349.241 169.871 351.094 170.091 350.924 cv
170.309 350.757 170.97 349.099 171.197 349.007 cv
171.418 348.916 172.978 350.428 172.978 350.428 cv
172.932 348.51 li
174.877 350.073 li
174.703 348.55 li
176.981 349.323 li
cp
f
344.007 266.942 mo
355.371 260.528 363.452 249.058 368.452 237.224 cv
369.057 235.792 374.488 222.905 374.384 218.049 cv
374.039 218.253 373.695 218.461 373.351 218.669 cv
373.071 223.027 367.193 237.181 366.532 238.832 cv
362.139 249.769 353.903 260.301 343.655 266.22 cv
343.207 266.478 343.554 267.2 344.007 266.942 cv
cp
.815686 .839216 .588235 rgb
f
342.428 267.272 mo
342.543 267.216 342.658 267.211 342.773 267.258 cv
343.263 269.031 341.864 270.405 340.302 270.937 cv
339.175 271.316 334.753 271.622 334.634 273.2 cv
335.217 271.768 335.441 271.03 335.842 270.224 cv
336.328 269.252 337.124 268.47 338.12 268.007 cv
339.75 267.25 341.079 267.309 342.8 267.497 cv
342.746 267.624 342.702 267.522 342.583 267.529 cv
342.428 267.272 li
cp
f
349.131 265.93 mo
350.375 267.046 349.564 269.738 348.76 270.884 cv
347.328 272.924 345.44 274.384 343.737 276.144 cv
345.003 274.282 345.758 271.881 346.538 269.782 cv
347.087 268.302 348.643 267.377 349.227 265.989 cv
349.227 266.134 349.165 266.093 349.079 266.137 cv
349.131 265.93 li
cp
f
354.243 260.751 mo
355.929 260.997 356.338 263.873 356.377 265.207 cv
356.426 266.941 355.698 268.234 354.792 269.664 cv
354.154 270.671 353.124 271.722 352.686 272.811 cv
352.846 271.662 353.254 270.651 353.176 270.056 cv
352.959 268.373 352.733 266.859 353.137 265.193 cv
353.527 263.583 354.466 262.194 354.831 260.602 cv
354.756 260.678 354.711 260.764 354.656 260.852 cv
354.243 260.751 li
cp
f
347.079 262.29 mo
346.94 264.061 343.845 264.178 342.577 263.967 cv
341.108 263.722 339.88 262.755 338.39 262.555 cv
336.989 262.366 336.192 262.926 334.95 263.304 cv
336.148 262.279 336.855 260.839 338.438 260.235 cv
340.31 259.524 342.311 259.427 344.166 260.244 cv
345.09 260.648 346.79 261.251 347.079 262.29 cv
cp
f
353.299 257.728 mo
351.825 259.702 349.394 259.284 347.601 258.12 cv
345.738 256.912 341.239 254.151 338.953 255.678 cv
343.073 251.581 350.31 254.998 351.298 256.018 cv
351.709 256.44 353.382 257.718 353.402 258.19 cv
353.299 257.728 li
cp
f
359.073 255.826 mo
360.442 256.338 360.197 258.708 360.099 259.839 cv
359.909 261.996 358.883 263.934 359.953 265.963 cv
359.999 264.867 360.705 264.054 361.086 263.051 cv
361.661 261.528 361.909 260.001 361.828 258.377 cv
361.743 256.716 360.897 255.698 359.304 255.338 cv
359.073 255.826 li
cp
f
358.495 251.492 mo
358.319 253.059 354.741 253.276 353.574 252.658 cv
352.228 251.948 349.26 250.001 345.425 250.251 cv
347.142 248.229 352.14 248.568 354.431 249.195 cv
357.096 249.925 358.614 250.41 358.495 251.492 cv
cp
f
363.836 248.202 mo
365.628 248.4 366.606 251.275 366.619 252.785 cv
366.639 255.476 365.9 257.946 365.511 260.558 cv
365.454 258.128 364.611 255.544 363.974 253.211 cv
363.527 251.57 364.315 249.781 363.957 248.191 cv
364.047 248.32 363.966 248.322 363.92 248.415 cv
363.836 248.202 li
cp
f
368.195 240.86 mo
369.989 240.459 371.513 243.201 372.067 244.529 cv
372.787 246.257 372.554 247.842 372.192 249.635 cv
371.938 250.896 371.305 252.352 371.285 253.62 cv
371.001 252.4 371.023 251.225 370.715 250.655 cv
369.844 249.042 369.032 247.601 368.796 245.767 cv
368.567 243.994 368.977 242.234 368.731 240.485 cv
368.685 240.592 368.673 240.692 368.65 240.806 cv
368.195 240.86 li
cp
f
361.444 245.043 mo
361.409 246.729 358.485 247.01 357.271 246.879 cv
355.864 246.729 354.649 245.881 353.223 245.773 cv
351.886 245.672 351.161 246.248 350.009 246.674 cv
351.087 245.638 351.676 244.233 353.146 243.576 cv
354.876 242.796 356.769 242.594 358.57 243.267 cv
359.471 243.599 361.114 244.076 361.444 245.043 cv
cp
f
365.893 237.114 mo
365.169 239.675 362.56 240.192 360.302 239.712 cv
357.957 239.215 352.353 238.169 350.641 240.594 cv
356.35 235.31 361.826 235.519 363.216 236.162 cv
363.794 236.433 365.974 237.071 366.175 237.541 cv
365.893 237.114 li
cp
f
371.032 234.548 mo
372.61 234.532 373.28 237.017 373.618 238.197 cv
374.261 240.442 373.975 242.793 375.836 244.424 cv
375.458 243.302 375.857 242.211 375.854 241.05 cv
375.846 239.293 375.505 237.659 374.796 236.052 cv
374.067 234.412 372.823 233.714 371.079 233.964 cv
371.032 234.548 li
cp
f
368.801 229.86 mo
369.489 231.419 365.416 233.258 364 233.087 cv
362.368 232.89 361.008 232.794 359.357 232.905 cv
358.681 232.952 357.98 233.008 357.315 232.914 cv
358.265 230.211 361.27 229.408 363.817 229.116 cv
365.283 228.945 366.863 228.372 368.17 229.206 cv
368.498 229.412 368.699 229.634 368.801 229.86 cv
cp
f
339.78 261.298 mo
341.888 262.054 343.375 264.447 345.655 262.65 cv
345.824 262.519 345.633 262.22 345.448 262.335 cv
343 263.864 342.129 260.747 339.93 260.546 cv
339.488 260.508 339.374 261.153 339.78 261.298 cv
cp
.945098 .956863 .701961 rgb
f
345.117 255.499 mo
347.204 256.286 349.175 258 351.506 257.871 cv
351.814 257.854 351.863 257.384 351.536 257.378 cv
349.201 257.337 347.557 255.314 345.338 254.854 cv
344.921 254.768 344.694 255.339 345.117 255.499 cv
cp
f
351.113 250.235 mo
352.977 251.242 355.2 252.944 357.339 251.779 cv
357.541 251.667 357.39 251.354 357.181 251.456 cv
354.963 252.526 353.402 250.121 351.41 249.646 cv
351.071 249.565 350.759 250.043 351.113 250.235 cv
cp
f
354.854 244.801 mo
356.684 245.526 358.586 246.455 360.501 245.499 cv
360.729 245.385 360.561 245.05 360.329 245.147 cv
358.474 245.923 356.789 244.766 355.061 244.196 cv
354.668 244.067 354.473 244.65 354.854 244.801 cv
cp
f
358.18 238.13 mo
360.183 238.493 362.033 238.904 364.022 238.254 cv
364.246 238.181 364.185 237.819 363.948 237.885 cv
361.972 238.434 360.169 237.924 358.211 237.611 cv
357.878 237.558 357.854 238.072 358.18 238.13 cv
cp
f
361.468 231.005 mo
363.648 231.635 366.994 232.634 368.463 230.243 cv
368.625 229.979 368.229 229.708 368.063 229.972 cv
366.671 232.18 363.646 230.923 361.647 230.481 cv
361.308 230.407 361.119 230.904 361.468 231.005 cv
cp
f
370.656 248.299 mo
370.673 248.503 371.014 248.477 371.011 248.274 cv
370.991 246.371 370.425 244.574 370.543 242.658 cv
370.567 242.309 370.083 242.304 370.019 242.625 cv
369.639 244.534 370.502 246.412 370.656 248.299 cv
cp
f
364.732 251.342 mo
365.224 252.725 364.984 254.219 365.292 255.639 cv
365.341 255.869 365.69 255.798 365.65 255.566 cv
365.386 254.083 365.708 252.557 365.195 251.117 cv
365.084 250.803 364.622 251.033 364.732 251.342 cv
cp
f
354.183 268.278 mo
354.211 268.491 354.567 268.468 354.561 268.252 cv
354.499 266.389 355.077 264.841 355.643 263.102 cv
355.778 262.683 355.15 262.468 354.997 262.88 cv
354.355 264.616 353.936 266.422 354.183 268.278 cv
cp
f
347.294 271.729 mo
348.573 270.677 349.581 269.33 349.962 267.698 cv
350.027 267.417 349.619 267.264 349.53 267.549 cv
349.052 269.099 348.272 270.367 347.045 271.44 cv
346.86 271.602 347.105 271.884 347.294 271.729 cv
cp
f
338.254 270.098 mo
339.827 269.987 341.604 269.217 342.53 267.882 cv
342.716 267.613 342.347 267.278 342.101 267.498 cv
341.554 267.991 341.089 268.501 340.453 268.892 cv
339.765 269.318 338.971 269.58 338.171 269.683 cv
337.894 269.718 337.989 270.118 338.254 270.098 cv
cp
f
359.349 168.07 mo
357.305 166.782 354.87 168.485 354.78 170.612 cv
354.461 170.459 354.13 170.334 353.775 170.275 cv
352.651 170.086 351.403 171.091 351.124 172.133 cv
350.796 173.347 351.256 174.665 351.962 175.962 cv
351.246 175.053 350.475 174.161 349.593 173.3 cv
347.131 170.906 343.154 174.556 345.655 176.891 cv
345.95 177.165 346.251 177.457 346.553 177.747 cv
346.342 177.755 346.14 177.813 345.961 177.921 cv
344.909 176.58 342.406 176.612 341.925 178.576 cv
341.128 181.829 343.718 185.41 347.129 188.012 cv
346.942 187.935 346.754 187.861 346.571 187.775 cv
343.998 186.563 343.365 184.541 341.587 182.638 cv
340.353 181.318 338.335 182.197 338.144 183.883 cv
337.794 186.958 340.674 189.513 343.242 191.021 cv
342.934 190.97 342.628 190.925 342.319 190.857 cv
341.112 190.589 339.83 190.263 338.726 189.671 cv
338.945 189.704 337.796 188.713 337.569 188.57 cv
336.97 188.192 336.18 188.01 335.49 188.2 cv
333.875 188.646 333.193 189.935 333.334 191.526 cv
333.665 195.264 339.751 196.162 342.54 196.631 cv
342.878 196.689 343.22 196.709 343.561 196.744 cv
342.319 197.025 341.058 197.212 339.777 197.226 cv
337.885 197.247 336.917 195.833 334.943 195.999 cv
334.054 196.074 333.292 196.953 333.035 197.741 cv
332.943 198.019 li
332.641 198.947 332.838 200.251 333.59 200.934 cv
340.435 207.13 356.806 200.352 359.186 191.897 cv
359.37 191.852 359.547 191.782 359.709 191.653 cv
360.15 191.538 360.551 191.219 360.763 190.643 cv
362.082 187.054 364.492 183.943 365.741 180.293 cv
367.09 176.348 366.381 172.054 364.808 168.312 cv
363.695 165.668 360.649 166.229 359.349 168.07 cv
cp
.980392 .341176 .392157 rgb
f
362.31 171.641 mo
362.897 175.982 362.171 179.988 360.721 183.865 cv
360.862 179.746 359.556 175.512 358.036 171.775 cv
357.746 171.059 356.748 171.524 356.839 172.2 cv
357.133 174.444 357.866 176.603 358.36 178.807 cv
358.911 181.265 358.934 183.603 358.749 186.099 cv
358.717 186.548 359.038 186.847 359.411 186.951 cv
359.297 187.195 359.176 187.439 359.059 187.683 cv
358.886 187.608 358.685 187.577 358.462 187.629 cv
358.434 187.636 358.411 187.64 358.385 187.647 cv
355.899 183.768 353.447 179.597 350.068 176.529 cv
349.503 176.019 348.638 176.768 349.179 177.342 cv
352.106 180.452 353.643 184.647 356.159 188.025 cv
354.792 188.128 353.602 187.871 352.032 186.918 cv
350.107 185.753 348.537 184.078 346.625 182.912 cv
345.901 182.472 345.105 183.417 345.672 184.051 cv
347.517 186.116 351.097 189.653 354.555 190.517 cv
353.533 190.824 352.504 191.084 351.362 191.143 cv
348.912 191.267 346.163 190.673 344.418 188.864 cv
343.929 188.356 343.121 189.087 343.607 189.602 cv
345.307 191.407 348.025 192.685 350.809 193.056 cv
346.997 194.093 343.087 194.577 339.269 192.971 cv
338.723 192.742 338.374 193.584 338.844 193.889 cv
342.662 196.365 347.534 196.023 351.889 194.682 cv
348.668 197.321 344.833 199.216 340.679 199.809 cv
340.018 199.902 340.112 200.975 340.775 200.968 cv
346.64 200.902 355.061 197.504 357.554 191.714 cv
357.757 191.576 357.967 191.443 358.156 191.282 cv
358.439 191.041 358.499 190.701 358.416 190.393 cv
358.796 190.517 359.237 190.372 359.454 190.08 cv
359.797 190.22 360.188 190.173 360.517 189.788 cv
364.666 184.916 365.411 177.299 363.76 171.33 cv
363.504 170.402 362.184 170.697 362.31 171.641 cv
cp
1 .678431 .678431 rgb
f
359.727 185.998 mo
358.106 187.642 352.55 191.305 352.619 194.36 cv
352.581 194.459 352.544 194.556 352.513 194.641 cv
352.522 194.632 352.534 194.622 352.544 194.613 cv
352.498 194.744 352.454 194.879 352.435 195.038 cv
352.301 196.153 353.427 196.92 354.431 196.844 cv
354.851 197.045 355.27 196.849 355.471 196.516 cv
356.113 196.159 356.613 195.589 357.134 195.033 cv
357.77 194.355 358.382 193.655 358.989 192.95 cv
365.102 194.873 368.79 199.68 373.053 204.248 cv
373.814 205.064 375.354 204.091 374.714 203.1 cv
371.599 198.275 366.223 192.735 360.246 191.48 cv
360.964 190.632 361.683 189.783 362.424 188.958 cv
364.114 187.071 361.563 184.134 359.727 185.998 cv
cp
.760784 .87451 .721569 rgb
f
352.513 194.641 mo
352.511 194.644 352.507 194.645 352.506 194.648 cv
352.36 195.064 352.407 194.92 352.513 194.641 cv
cp
f
394.472 194.098 mo
389.975 190.241 381.455 189.832 376.172 193.172 cv
372.375 189.768 364.985 189.878 360.571 193.507 cv
357.702 195.865 355.539 201.723 355.944 206.455 cv
349.278 207.376 342.085 210.362 344.28 218.603 cv
345.789 224.273 351.179 227.392 356.879 227.982 cv
355.988 232.813 358.87 238.185 365.37 239.724 cv
372.831 241.489 376.266 234.949 377.897 228.252 cv
378.838 228.873 379.938 229.364 381.245 229.702 cv
385.039 230.684 389.84 231.332 392.789 228.169 cv
397.004 223.65 394.837 216.538 391.653 211.116 cv
398.12 208.282 401.233 199.895 394.472 194.098 cv
cp
.992157 .964706 .745098 rgb
f
364.602 195.688 mo
360.078 197.472 357.266 203.023 360.908 207.001 cv
361.291 207.42 362.151 207.051 361.846 206.469 cv
359.945 202.858 361.618 199.764 365.224 198.283 cv
366.614 197.713 368.236 197.6 369.65 198.128 cv
371.625 198.863 371.82 200.903 372.49 202.601 cv
373.011 203.927 375.324 203.803 375.379 202.244 cv
375.591 196.355 369.459 193.773 364.602 195.688 cv
cp
.980392 .890196 .65098 rgb
f
386.683 193.393 mo
384.418 193.426 381.411 194.488 382.303 197.314 cv
382.518 197.99 383.416 197.732 383.548 197.161 cv
384.047 194.992 386.808 195.625 388.409 196.12 cv
390.437 196.746 391.89 197.765 392.746 199.757 cv
394.534 203.911 390.687 208.119 387.553 209.283 cv
385.703 209.968 385.647 211.428 387.585 211.159 cv
394.292 210.231 398.681 202.471 394.599 196.737 cv
392.819 194.236 389.623 193.352 386.683 193.393 cv
cp
f
389.493 216.179 mo
389.868 218.951 390.473 221.094 389.451 223.877 cv
387.954 227.951 383.69 226.374 380.975 224.74 cv
380.191 224.268 379.305 225.348 380.091 225.902 cv
383.074 228.006 386.942 230.001 390.194 227.244 cv
393.153 224.74 394.294 218.355 391.8 215.242 cv
391.013 214.26 389.316 214.877 389.493 216.179 cv
cp
f
374.437 229.248 mo
373.083 232.191 372.618 233.051 369.75 235.178 cv
366.342 237.701 360.113 234.159 362.089 229.851 cv
362.342 229.3 361.467 228.775 361.153 229.315 cv
358.771 233.392 362.286 237.81 366.605 238.266 cv
372.57 238.898 376.5 233.34 376.184 227.982 cv
376.105 226.639 374.94 228.154 374.437 229.248 cv
cp
f
352.442 210.187 mo
349.905 210.95 347.976 212.4 347.061 214.934 cv
345.174 220.167 351.193 222.697 354.684 224.801 cv
355.418 225.242 356.156 224.315 355.499 223.734 cv
353.47 221.94 349.163 219.802 349.252 216.686 cv
349.312 214.62 351.111 213.459 352.843 212.857 cv
354.874 212.146 356.722 212.793 358.739 212.969 cv
359.925 213.073 360.573 211.607 359.623 210.84 cv
357.759 209.332 354.616 209.533 352.442 210.187 cv
cp
f
368.289 204.23 mo
366.173 203.814 363.945 204.66 362.72 206.459 cv
360.714 209.411 361.275 215.435 365.965 214.217 cv
366.562 214.063 366.429 213.026 365.816 213.015 cv
362.974 212.97 363.578 209.628 364.658 207.939 cv
365.298 206.94 366.48 206.61 367.588 206.791 cv
369.041 207.031 369.327 208.558 370.162 209.485 cv
370.815 210.208 371.898 209.932 372.107 208.974 cv
372.589 206.762 370.311 204.628 368.289 204.23 cv
cp
f
378.343 215.774 mo
378.195 216.588 378.163 216.649 378.245 215.954 cv
376.331 214.592 374.211 216.887 375.423 218.774 cv
376.587 220.593 371.013 224.376 370.695 219.494 cv
370.567 217.543 367.438 217.524 367.282 219.47 cv
367.044 222.4 365.182 223.154 362.634 221.901 cv
359.781 220.496 360.546 218.131 362.961 216.781 cv
364.067 216.164 363.469 214.471 362.213 214.915 cv
360.081 215.667 357.935 217.035 357.916 219.537 cv
357.903 221.53 359.331 223.201 360.912 224.249 cv
363.725 226.113 366.871 225.874 368.829 223.988 cv
371.989 227.143 378.899 224.523 379.501 220.005 cv
381.41 219.6 382.787 217.885 381.818 215.344 cv
381.132 213.544 378.705 214.085 378.343 215.774 cv
cp
f
380.587 204.83 mo
379.421 204.167 377.747 204.322 376.645 204.992 cv
375.201 205.87 374.811 207.718 374.668 209.274 cv
374.582 210.21 375.97 210.406 376.116 209.472 cv
376.216 208.824 376.376 208.287 376.775 207.762 cv
376.841 207.675 376.914 207.597 376.988 207.518 cv
376.98 207.536 377.185 207.346 377.224 207.313 cv
377.278 207.271 377.339 207.235 377.396 207.197 cv
377.4 207.204 377.6 207.1 377.658 207.079 cv
377.681 207.072 377.691 207.066 377.706 207.06 cv
377.712 207.06 377.712 207.06 377.717 207.059 cv
377.812 207.038 377.906 207.022 378.003 207.007 cv
378.082 206.995 378.164 206.99 378.244 206.986 cv
378.294 206.989 378.345 206.993 378.393 206.999 cv
378.463 207.006 378.533 207.021 378.603 207.035 cv
378.653 207.053 378.7 207.072 378.747 207.092 cv
378.768 207.102 378.794 207.115 378.822 207.131 cv
378.89 207.175 378.959 207.221 379.025 207.271 cv
379.117 207.34 379.205 207.415 379.294 207.489 cv
379.324 207.528 379.389 207.602 379.455 207.681 cv
379.483 207.746 379.543 207.872 379.589 207.974 cv
379.589 207.978 379.589 207.981 379.59 207.983 cv
379.592 207.993 379.593 207.996 379.593 208.005 cv
379.592 208.014 379.591 208.022 379.589 208.033 cv
379.569 208.086 379.549 208.141 379.526 208.195 cv
379.52 208.202 379.518 208.203 379.513 208.211 cv
379.464 208.282 379.403 208.345 379.346 208.41 cv
379.293 208.458 379.219 208.531 379.18 208.561 cv
379.041 208.676 378.89 208.773 378.745 208.879 cv
378.62 208.971 378.487 209.054 378.355 209.136 cv
378.149 209.248 377.972 209.354 377.784 209.489 cv
376.644 210.313 377.398 212.384 378.844 212.101 cv
380.642 211.751 382.416 210.34 382.696 208.453 cv
382.935 206.846 381.896 205.576 380.587 204.83 cv
cp
f
372.883 213.125 mo
372.329 212.447 371.552 212.138 370.722 212.263 cv
370.534 212.168 370.311 212.169 370.119 212.354 cv
370.058 212.412 369.997 212.465 369.936 212.516 cv
369.869 212.557 369.812 212.608 369.753 212.656 cv
369.436 212.895 369.126 213.093 368.908 213.447 cv
368.688 213.682 368.494 213.94 368.368 214.225 cv
367.943 215.187 368.281 216.281 369.072 216.929 cv
369.867 217.582 371.106 217.575 372.039 217.304 cv
372.933 217.044 373.396 216.329 373.517 215.522 cv
373.795 215.013 373.808 214.33 373.416 213.916 cv
373.369 213.867 373.322 213.823 373.273 213.775 cv
373.169 213.539 373.041 213.318 372.883 213.125 cv
cp
f
399.568 185.893 mo
397.547 180.431 388.654 179.335 383.231 181.07 cv
383.835 180.403 384.394 179.678 385.001 179.021 cv
386.675 177.212 388.606 175.645 390.429 173.993 cv
392.011 172.561 395.393 170.305 394.404 167.793 cv
393.481 165.449 389.99 168.567 389.093 169.219 cv
386.122 171.377 383.819 174.711 381.778 177.957 cv
382.858 173.134 383.673 168.196 379.567 164.403 cv
379.051 163.926 378.215 163.808 377.77 164.476 cv
376.153 166.901 376.551 169.509 377.179 172.226 cv
377.701 174.479 378.021 176.788 378.556 179.037 cv
377.19 176.958 374.915 175.232 373.228 173.731 cv
371.911 172.56 368.447 169.212 366.41 170.35 cv
363.878 171.763 366.19 175.174 367.615 176.485 cv
369.605 178.314 371.949 179.62 374.327 180.866 cv
374.358 180.888 374.389 180.914 374.421 180.937 cv
374.541 181.021 374.669 181.074 374.796 181.11 cv
375.329 181.387 375.862 181.665 376.394 181.944 cv
373.337 182.422 370.393 183.693 367.713 185.22 cv
366.163 186.105 362.125 188.096 362.548 190.405 cv
363.449 195.327 374.829 187.176 378.636 184.007 cv
377.291 186.593 376.849 189.719 376.95 192.569 cv
377.02 194.586 376.986 197.909 378.77 199.277 cv
381.087 201.052 382.328 196.504 382.403 195.18 cv
382.511 193.275 382.094 191.304 381.816 189.43 cv
381.533 187.517 381.849 185.66 381.838 183.778 cv
386.271 185.337 390.373 187.66 395.082 188.578 cv
397.161 188.984 400.727 189.022 399.568 185.893 cv
cp
.960784 .643137 .54902 rgb
f
392.73 169.599 mo
389.065 173.665 384.628 176.912 381.131 181.143 cv
381 181.3 381.257 181.472 381.386 181.323 cv
384.977 177.179 389.558 174.031 393.206 169.937 cv
393.457 169.655 392.978 169.324 392.73 169.599 cv
cp
1 1 1 rgb
f
396.091 185.522 mo
393.943 184.04 391.323 182.85 388.845 182.059 cv
386.231 181.224 383.378 181.343 380.689 180.887 cv
380.538 180.861 380.421 180.902 380.339 180.978 cv
380.432 179.173 380.519 177.376 380.339 175.567 cv
380.07 172.852 379.086 170.27 378.832 167.548 cv
378.816 167.369 378.554 167.425 378.562 167.596 cv
378.671 169.875 379.212 172.089 379.582 174.333 cv
379.944 176.532 379.791 178.706 379.615 180.901 cv
377.99 180.062 376.501 179.031 375.101 177.802 cv
373.167 176.104 370.782 175.022 368.941 173.203 cv
368.796 173.059 368.551 173.258 368.695 173.409 cv
370.379 175.155 372.408 176.409 374.282 177.929 cv
376.015 179.335 377.629 180.66 379.535 181.691 cv
374.541 183.354 370.333 186.714 366.038 189.654 cv
365.894 189.751 366.054 190.002 366.2 189.909 cv
370.512 187.146 374.703 183.835 379.619 182.211 cv
379.115 187.073 379.333 191.875 379.782 196.748 cv
379.799 196.925 380.065 196.873 380.052 196.699 cv
379.641 191.823 379.676 186.934 380.206 182.075 cv
380.213 182.066 380.22 182.057 380.224 182.049 cv
380.518 182.189 380.815 182.325 381.122 182.452 cv
381.46 182.589 381.689 182.246 381.617 181.974 cv
384.135 182.299 386.687 182.29 389.141 183.023 cv
391.499 183.727 393.583 185.295 396.005 185.75 cv
396.133 185.773 396.188 185.589 396.091 185.522 cv
cp
f
380.883 179.705 mo
380.852 179.715 380.822 179.725 380.792 179.735 cv
380.215 179.926 380.13 180.752 380.479 181.167 cv
380.911 181.682 381.841 181.567 382.056 180.895 cv
382.066 180.866 382.075 180.837 382.084 180.808 cv
382.339 180.016 381.606 179.466 380.883 179.705 cv
cp
.980392 .341176 .392157 rgb
f
379.476 181.655 mo
379.351 181.391 379.022 181.206 378.723 181.246 cv
378.169 181.12 377.637 181.693 377.738 182.241 cv
377.859 182.901 378.907 183.261 379.272 182.579 cv
379.276 182.561 379.281 182.54 379.286 182.521 cv
379.52 182.288 379.625 181.969 379.476 181.655 cv
cp
f
382.086 180.634 mo
381.25 180.634 380.845 181.41 380.954 182.036 cv
380.801 181.994 380.632 181.992 380.465 182.05 cv
380.296 182.11 380.142 182.203 380.012 182.328 cv
379.697 182.629 379.621 183.105 379.913 183.455 cv
380.172 183.763 380.738 183.869 381.041 183.554 cv
381.222 183.367 381.355 183.195 381.441 182.947 cv
381.467 182.871 381.48 182.799 381.484 182.729 cv
381.601 182.778 381.737 182.809 381.896 182.809 cv
383.293 182.809 383.496 180.634 382.086 180.634 cv
cp
f
378.803 179.986 mo
378.719 180.092 378.662 180.189 378.658 180.327 cv
378.651 180.534 378.803 180.794 379.041 180.785 cv
379.231 180.777 379.338 180.733 379.487 180.617 cv
380.01 180.207 379.236 179.436 378.803 179.986 cv
cp
f
296.765 89.2412 mo
284.752 72.8863 266.651 61.5214 246.409 58.7739 cv
244.705 58.5414 244.256 61.2089 245.964 61.4041 cv
265.291 63.6068 284.046 74.4198 296.038 89.7454 cv
296.387 90.1917 297.104 89.7031 296.765 89.2412 cv
cp
.615686 .737255 .435294 rgb
f
292.751 95.2162 mo
292.848 95.1997 292.925 95.1639 292.993 95.1176 cv
293.058 95.0986 293.116 95.0604 293.155 94.9969 cv
294.324 93.0322 294.784 89.6553 292.525 88.2828 cv
292.323 88.163 292.039 88.2581 291.896 88.4206 cv
290.957 89.4943 290.284 95.6782 292.751 95.2162 cv
cp
f
295.268 83.0257 mo
296.297 83.0936 297.94 83.1198 298.402 81.958 cv
298.479 81.7634 298.464 81.5883 298.386 81.4363 cv
298.482 81.2547 298.458 81.0147 298.221 80.896 cv
296.538 80.0764 294.679 79.3529 292.775 79.523 cv
291.469 79.6412 289.954 80.739 291.28 81.9324 cv
292.237 82.7988 294.053 82.9457 295.268 83.0257 cv
cp
f
301.678 87.5915 mo
301.289 86.7604 295.974 84.9703 295.972 86.1707 cv
295.972 87.3721 302.965 90.3531 301.678 87.5915 cv
cp
f
289.154 83.9087 mo
288.277 84.0113 284.85 90.6394 286.453 92.5326 cv
288.058 94.4254 290.978 83.6984 289.154 83.9087 cv
cp
f
283.449 78.8866 mo
282.18 79.8465 279.828 87.9402 282.343 88.5273 cv
284.859 89.1154 285.105 77.6323 283.449 78.8866 cv
cp
f
284.303 74.8515 mo
285.469 75.9357 293.847 76.853 293.989 74.2744 cv
294.135 71.696 282.781 73.4353 284.303 74.8515 cv
cp
f
278.588 70.1513 mo
279.753 71.2366 288.133 72.1548 288.275 69.5768 cv
288.42 66.9954 277.068 68.7376 278.588 70.1513 cv
cp
f
272.746 66.9062 mo
274.121 67.7083 282.496 66.7629 282.068 64.2176 cv
281.644 61.6673 270.952 65.8587 272.746 66.9062 cv
cp
f
266.576 63.8428 mo
268.064 64.4123 276.178 62.1302 275.345 59.686 cv
274.516 57.2383 264.637 63.0967 266.576 63.8428 cv
cp
f
260.978 61.6331 mo
262.558 61.8308 269.89 57.6755 268.499 55.5011 cv
267.107 53.322 258.916 61.3729 260.978 61.6331 cv
cp
f
278.181 74.4596 mo
276.913 75.4205 274.561 83.5142 277.076 84.1013 cv
279.591 84.689 279.839 73.2063 278.181 74.4596 cv
cp
f
271.661 70.4839 mo
270.506 71.6461 269.282 80.2143 271.924 80.4498 cv
274.564 80.6862 273.165 68.9705 271.661 70.4839 cv
cp
f
264.872 68.1314 mo
263.834 69.4646 263.657 78.4115 266.397 78.319 cv
269.137 78.2279 266.224 66.3875 264.872 68.1314 cv
cp
f
259.096 65.7023 mo
258.06 67.0366 257.88 75.9825 260.621 75.8895 cv
263.361 75.7989 260.449 63.959 259.096 65.7023 cv
cp
f
140.821 70.0497 mo
141.16 69.7424 141.493 69.442 141.815 69.1728 cv
144.778 66.705 148.062 64.6166 150.848 61.944 cv
153.304 59.5879 155.291 56.7337 157.288 53.9977 cv
159.341 51.1893 160.895 47.9618 163.528 45.6288 cv
163.66 45.5117 163.653 45.3652 163.584 45.253 cv
163.653 45.1942 163.719 45.1302 163.789 45.0724 cv
160.262 55.9478 151.666 66.0685 140.821 70.0497 cv
cp
135.736 70.8653 mo
135.714 70.7737 135.684 70.6817 135.663 70.5906 cv
136.858 63.6637 141.446 57.9362 147.023 53.7653 cv
149.515 51.8998 152.338 50.4381 154.904 48.6606 cv
155.42 48.3029 155.963 47.9201 156.52 47.5377 cv
154.803 48.88 153.144 50.2957 151.548 51.7809 cv
147.94 55.1419 144.626 58.8478 141.372 62.5462 cv
139.173 65.0493 136.621 67.5991 135.736 70.8653 cv
cp
135.421 69.1169 mo
134.851 63.1293 138.759 56.9922 143.181 53.2928 cv
146.96 50.1322 151.5 48.1404 156.184 46.5596 cv
156.002 46.6819 155.817 46.8056 155.636 46.9264 cv
152.794 48.8282 149.797 50.6017 147.032 52.5996 cv
141.442 56.6371 136.86 62.3636 135.421 69.1169 cv
cp
162.14 44.8122 mo
162.252 44.7921 162.364 44.7796 162.477 44.7619 cv
160.345 46.6064 158.434 48.7114 156.495 50.7441 cv
153.773 53.5958 150.815 56.1918 147.998 58.9479 cv
145.32 61.5687 142.786 64.358 139.934 66.792 cv
138.866 67.7022 137.667 68.6506 136.692 69.7489 cv
138.098 66.6814 141.061 64.0993 143.219 61.7297 cv
146.017 58.6556 148.91 55.654 151.935 52.7993 cv
153.821 51.0177 155.848 49.3685 157.903 47.7868 cv
159.089 46.8726 160.576 45.6223 162.14 44.8122 cv
cp
136.319 71.3201 mo
136.227 71.3382 136.158 71.378 136.1 71.4243 cv
136.118 71.3478 136.144 71.2733 136.164 71.1964 cv
137.61 69.0671 140.178 67.4944 142.033 65.9025 cv
144.822 63.5107 147.359 60.7853 150.042 58.2737 cv
152.658 55.8231 155.324 53.4866 157.812 50.9005 cv
158.525 50.1605 159.236 49.4168 159.957 48.6793 cv
159.377 49.4959 158.818 50.3315 158.266 51.1601 cv
156.229 54.2085 153.938 57.1624 151.495 59.8928 cv
148.966 62.7188 145.798 64.7313 142.841 67.0577 cv
141.383 68.2038 139.916 69.7253 138.303 70.8436 cv
137.647 71.0208 136.988 71.1893 136.319 71.3201 cv
cp
165.079 42.836 mo
165.018 42.838 164.958 42.839 164.896 42.8416 cv
164.775 42.8446 164.658 42.8909 164.559 42.9623 cv
164.474 42.9879 164.387 43.0146 164.302 43.0392 cv
163.479 43.0277 162.616 43.3432 161.794 43.7954 cv
161.248 43.9202 160.709 44.0832 160.186 44.2991 cv
153.378 46.4313 146.684 48.9489 141.31 53.8417 cv
136.941 57.8174 133.715 64.7006 135.148 70.6792 cv
135.067 71.2607 135.005 71.8464 134.973 72.4426 cv
134.969 72.5156 134.994 72.5704 135.034 72.6086 cv
135.011 72.8074 135.299 72.8994 135.373 72.6911 cv
135.428 72.5377 135.512 72.3978 135.578 72.2508 cv
135.606 72.2675 135.632 72.2901 135.667 72.2946 cv
135.745 72.4934 135.814 72.6931 135.906 72.8884 cv
135.998 73.0851 136.234 73.0227 136.31 72.8712 cv
136.389 72.8994 136.473 72.9145 136.566 72.8894 cv
137.276 72.7088 137.948 72.344 138.589 71.8997 cv
144.866 70.1489 150.323 66.4666 154.882 61.797 cv
157.431 59.1854 159.592 56.2034 161.433 53.0584 cv
161.981 52.1226 165.384 44.1356 165.038 43.878 cv
165.08 43.8659 165.121 43.8539 165.162 43.8413 cv
165.683 43.6883 165.684 42.8154 165.079 42.836 cv
cp
f
329.863 117.319 mo
329.997 117.665 330.53 117.738 330.649 117.288 cv
332.496 110.304 328.944 102.736 322.982 98.9615 cv
321.724 98.1641 319.1 96.9782 317.841 98.4654 cv
317.74 98.5831 317.658 98.71 317.575 98.8367 cv
317.482 98.9479 317.41 99.0762 317.359 99.217 cv
316.059 101.8 317.556 105.798 318.357 108.181 cv
319.705 112.191 322.21 116.07 325.847 118.329 cv
327.567 119.394 329.034 118.677 329.863 117.319 cv
cp
.960784 .643137 .54902 rgb
f
321.36 109.575 mo
319.979 106.654 318.957 103.497 318.266 100.314 cv
318.869 101.093 319.452 101.887 319.986 102.733 cv
321.042 104.409 321.963 106.168 322.911 107.905 cv
324.445 110.715 326.073 113.462 328.245 115.797 cv
328.243 115.811 328.241 115.826 328.239 115.841 cv
328.205 116.049 328.393 116.163 328.547 116.123 cv
328.655 116.234 328.769 116.337 328.88 116.446 cv
328.887 116.739 328.882 117.033 328.852 117.327 cv
325.113 116.548 322.895 112.822 321.36 109.575 cv
cp
318.003 99.0113 mo
317.973 98.8473 317.938 98.6838 317.909 98.5198 cv
324.291 100.305 328.225 106.329 328.437 112.684 cv
327.814 111.264 326.999 109.906 326.351 108.741 cv
324.265 104.987 321.894 101.758 318.457 99.1144 cv
318.333 99.0198 318.162 99.1934 318.287 99.2931 cv
321.276 101.662 323.571 104.522 325.404 107.855 cv
326.419 109.697 327.747 111.792 328.433 113.959 cv
328.412 114.405 328.375 114.849 328.317 115.293 cv
326.196 112.878 324.61 110.059 323.079 107.223 cv
321.613 104.503 320.132 101.379 318.003 99.0113 cv
cp
329.474 118.068 mo
329.833 118.093 329.894 117.477 329.535 117.438 cv
329.459 117.43 329.386 117.412 329.311 117.402 cv
329.336 117.243 329.358 117.083 329.37 116.922 cv
329.42 116.968 329.464 117.017 329.513 117.062 cv
329.685 117.217 329.932 116.961 329.763 116.803 cv
329.631 116.68 329.51 116.549 329.383 116.423 cv
329.375 115.73 329.248 115.027 329.044 114.327 cv
329.969 107.31 324.651 99.8228 317.849 98.1997 cv
317.848 98.1917 317.847 98.1852 317.846 98.1766 cv
317.827 98.0695 317.68 98.074 317.629 98.1495 cv
317.55 98.1323 317.473 98.1112 317.395 98.0952 cv
317.302 98.0775 317.244 98.1404 317.232 98.2109 cv
317.072 98.0594 316.911 97.911 316.743 97.7686 cv
316.587 97.6353 316.308 97.8269 316.447 98.0071 cv
316.918 98.6109 317.392 99.202 317.86 99.7982 cv
318.487 103.389 319.561 106.928 321.091 110.229 cv
322.67 113.637 325.322 117.793 329.474 118.068 cv
cp
1 .866667 .831373 rgb
f
328.61 121.057 mo
328.656 120.729 328.715 120.4 328.772 120.073 cv
328.944 120.667 329.163 121.249 329.439 121.815 cv
329.58 122.103 330.058 122.011 330.11 121.707 cv
330.224 121.026 330.24 120.363 330.18 119.711 cv
330.42 120.096 330.667 120.478 330.936 120.847 cv
331.158 121.153 331.752 120.957 331.584 120.559 cv
331.572 120.53 331.557 120.504 331.544 120.477 cv
331.546 120.476 331.546 120.476 331.546 120.476 cv
331.543 120.47 331.541 120.466 331.537 120.461 cv
331.335 119.998 331.101 119.559 330.846 119.133 cv
331.186 119.399 331.532 119.659 331.897 119.892 cv
332.238 120.113 332.568 119.606 332.302 119.336 cv
331.638 118.658 330.864 118.116 330.076 117.588 cv
330.065 117.578 330.053 117.568 330.041 117.559 cv
331.024 117.851 332.012 118.122 333.019 118.319 cv
333.353 118.385 333.471 117.882 333.138 117.804 cv
332.161 117.577 331.117 116.982 330.083 116.938 cv
329.462 116.743 328.842 116.547 328.227 116.331 cv
327.921 116.223 327.697 116.681 327.929 116.882 cv
328.128 117.053 328.333 117.213 328.541 117.369 cv
328.491 117.414 328.45 117.474 328.436 117.556 cv
328.28 118.674 328.044 119.776 327.887 120.891 cv
327.822 121.361 328.542 121.532 328.61 121.057 cv
cp
.376471 .564706 .470588 rgb
f
317.536 100.332 mo
318.147 100.245 318.892 100.123 319.226 99.527 cv
319.501 99.035 319.369 98.4956 319.08 98.0554 cv
319.115 97.9256 319.086 97.7732 318.997 97.6685 cv
318.726 97.352 318.298 97.3817 317.93 97.5266 cv
316.974 93.7678 314.815 90.5137 312.274 87.6131 cv
311.952 87.2478 311.448 87.7913 311.756 88.1525 cv
314.226 91.0706 316.315 94.2397 317.278 97.9688 cv
316.878 98.3915 316.668 99.0018 316.722 99.5718 cv
316.759 99.9627 317.092 100.398 317.536 100.332 cv
cp
f
346.048 99.8842 mo
346.382 100.077 346.862 99.7891 346.665 99.3449 cv
343.611 92.4748 335.796 88.651 328.498 89.4737 cv
326.956 89.6482 324.054 90.3949 324.002 92.4225 cv
323.999 92.583 324.014 92.7404 324.028 92.8979 cv
324.026 93.0478 324.051 93.1987 324.102 93.3472 cv
324.73 96.2904 328.551 98.559 330.755 99.9692 cv
334.463 102.345 339.023 103.86 343.448 103.319 cv
345.537 103.064 346.261 101.526 346.048 99.8842 cv
cp
.960784 .643137 .54902 rgb
f
334.1 99.1437 mo
331.075 97.6745 328.188 95.7773 325.553 93.645 cv
326.55 93.8841 327.54 94.1487 328.525 94.4872 cv
330.473 95.159 332.369 95.9855 334.27 96.777 cv
337.346 98.0589 340.458 99.2252 343.743 99.7031 cv
343.75 99.7162 343.759 99.7287 343.767 99.7423 cv
343.875 99.9345 344.102 99.9034 344.2 99.771 cv
344.359 99.7917 344.52 99.7992 344.68 99.8158 cv
344.877 100.05 345.066 100.291 345.233 100.55 cv
341.691 102.355 337.462 100.778 334.1 99.1437 cv
cp
324.49 92.7591 mo
324.358 92.6464 324.223 92.5366 324.094 92.4219 cv
330.436 89.7107 337.555 92.0345 341.87 97.0536 cv
340.438 96.3065 338.89 95.737 337.606 95.2133 cv
333.467 93.5263 329.438 92.4526 324.926 92.5483 cv
324.763 92.5518 324.738 92.8043 324.904 92.8038 cv
328.874 92.7776 332.6 93.6028 336.26 95.1117 cv
338.286 95.9458 340.728 96.7794 342.698 98.0911 cv
342.972 98.4639 343.23 98.8503 343.474 99.2477 cv
340.176 98.6697 337.053 97.417 333.962 96.1138 cv
330.999 94.8631 327.761 93.2944 324.49 92.7591 cv
cp
346.22 100.745 mo
346.528 100.531 346.176 99.9909 345.859 100.195 cv
345.791 100.237 345.722 100.271 345.652 100.311 cv
345.571 100.164 345.484 100.021 345.39 99.8827 cv
345.458 99.8877 345.526 99.8978 345.597 99.9024 cv
345.837 99.9165 345.869 99.5491 345.63 99.531 cv
345.443 99.5174 345.261 99.4882 345.075 99.4697 cv
344.617 98.9127 344.055 98.4252 343.433 97.99 cv
339.61 91.694 330.414 89.0843 323.836 92.2015 cv
323.83 92.1966 323.824 92.191 323.818 92.186 cv
323.733 92.1106 323.617 92.2106 323.626 92.3043 cv
323.549 92.3415 323.474 92.3741 323.399 92.4139 cv
323.313 92.4582 323.307 92.5477 323.342 92.6132 cv
323.114 92.594 322.886 92.5804 322.658 92.5734 cv
322.443 92.5668 322.343 92.9045 322.572 92.9588 cv
323.349 93.1424 324.119 93.3134 324.886 93.4906 cv
327.737 95.9976 330.916 98.1671 334.309 99.8495 cv
337.811 101.586 342.671 103.23 346.22 100.745 cv
cp
1 .866667 .831373 rgb
f
347.467 103.735 mo
347.29 103.436 347.125 103.133 346.956 102.829 cv
347.485 103.2 348.041 103.529 348.636 103.808 cv
348.935 103.95 349.266 103.564 349.109 103.283 cv
348.755 102.657 348.339 102.107 347.862 101.618 cv
348.31 101.774 348.759 101.923 349.217 102.047 cv
349.598 102.15 349.951 101.605 349.556 101.39 cv
349.528 101.375 349.498 101.365 349.47 101.351 cv
349.47 101.349 349.471 101.348 349.471 101.348 cv
349.465 101.346 349.46 101.344 349.454 101.342 cv
348.99 101.098 348.512 100.895 348.028 100.713 cv
348.478 100.709 348.926 100.694 349.375 100.646 cv
349.796 100.603 349.733 99.9778 349.343 99.9295 cv
348.361 99.8123 347.378 99.8787 346.396 99.9638 cv
346.38 99.9632 346.364 99.9627 346.349 99.9617 cv
347.336 99.5582 348.315 99.1346 349.261 98.6385 cv
349.574 98.4744 349.343 97.9885 349.022 98.143 cv
348.08 98.5957 346.846 98.7934 345.977 99.4314 cv
345.346 99.6774 344.715 99.9235 344.076 100.149 cv
343.757 100.261 343.873 100.779 344.194 100.79 cv
344.466 100.8 344.736 100.795 345.008 100.786 cv
344.996 100.856 345.001 100.931 345.045 101.007 cv
345.645 102.015 346.172 103.063 346.773 104.071 cv
347.026 104.494 347.723 104.163 347.467 103.735 cv
cp
.376471 .564706 .470588 rgb
f
324.972 94.1371 mo
325.41 93.6666 325.936 93.0816 325.818 92.3812 cv
325.721 91.8031 325.262 91.4509 324.742 91.2819 cv
324.684 91.154 324.562 91.0495 324.42 91.0228 cv
323.994 90.9423 323.667 91.2462 323.464 91.6034 cv
320.238 89.1748 316.365 87.9412 312.411 87.2473 cv
311.912 87.1598 311.858 87.9297 312.342 88.0227 cv
316.249 88.7789 320.01 89.9884 323.222 92.3877 cv
323.172 92.99 323.401 93.6224 323.817 94.0495 cv
324.101 94.3424 324.655 94.4782 324.972 94.1371 cv
cp
f
339.149 75.813 mo
339.417 75.6474 339.816 75.8713 339.665 76.2381 cv
337.336 81.9184 331.049 85.2233 325.072 84.7247 cv
323.811 84.6195 321.425 84.0787 321.334 82.425 cv
321.326 82.2941 321.335 82.1653 321.346 82.0366 cv
321.338 81.9138 321.356 81.7901 321.393 81.6683 cv
321.836 79.2508 324.901 77.3087 326.665 76.1063 cv
329.636 74.0793 333.323 72.7349 336.945 73.0709 cv
338.656 73.2295 339.284 74.4671 339.149 75.813 cv
cp
.960784 .643137 .54902 rgb
f
338.469 75.2887 mo
338.339 75.5046 338.191 75.7053 338.035 75.9005 cv
337.905 75.9181 337.773 75.9292 337.645 75.9493 cv
337.56 75.8437 337.375 75.8226 337.291 75.982 cv
337.284 75.9936 337.278 76.0052 337.272 76.0142 cv
334.602 76.4837 332.091 77.51 329.61 78.6284 cv
328.077 79.3187 326.551 80.0382 324.976 80.6329 cv
324.18 80.9322 323.379 81.1717 322.571 81.3906 cv
324.671 79.5878 326.983 77.9714 329.417 76.7 cv
332.121 75.2867 335.534 73.8996 338.469 75.2887 cv
cp
329.375 79.1773 mo
331.867 78.0393 334.387 76.942 337.063 76.3931 cv
336.874 76.7242 336.673 77.0446 336.458 77.356 cv
334.881 78.4735 332.907 79.211 331.275 79.94 cv
328.323 81.2578 325.301 82.02 322.061 82.0924 cv
321.925 82.0964 321.951 82.3017 322.085 82.3007 cv
325.77 82.2715 329.032 81.2995 332.37 79.8248 cv
333.406 79.3675 334.655 78.8654 335.807 78.2225 cv
332.403 82.4205 326.649 84.4853 321.409 82.4224 cv
321.512 82.3273 321.619 82.2338 321.724 82.1387 cv
324.381 81.625 326.986 80.2671 329.375 79.1773 cv
cp
329.568 76.1193 mo
326.84 77.5724 324.297 79.4183 322.031 81.5325 cv
321.409 81.695 320.784 81.8529 320.154 82.0215 cv
319.969 82.0708 320.058 82.3444 320.234 82.3334 cv
320.42 82.3219 320.606 82.3057 320.791 82.2851 cv
320.764 82.3385 320.771 82.4119 320.842 82.4466 cv
320.904 82.4763 320.967 82.502 321.029 82.5296 cv
321.024 82.6076 321.122 82.6856 321.19 82.6222 cv
321.194 82.6182 321.2 82.6132 321.204 82.6097 cv
326.645 84.9974 334.088 82.6498 337.06 77.4214 cv
337.558 77.0506 338.005 76.6396 338.365 76.1752 cv
338.516 76.1551 338.665 76.127 338.817 76.1108 cv
339.012 76.0912 338.978 75.7914 338.781 75.809 cv
338.724 75.8135 338.668 75.824 338.612 75.8296 cv
338.686 75.7144 338.754 75.5951 338.817 75.4739 cv
338.874 75.5041 338.931 75.5297 338.989 75.564 cv
339.251 75.7224 339.526 75.2736 339.27 75.1061 cv
336.314 73.1625 332.387 74.6186 329.568 76.1193 cv
cp
1 .866667 .831373 rgb
f
339.643 72.3787 mo
339.176 73.2159 338.769 74.0842 338.305 74.9205 cv
338.269 74.9839 338.267 75.0442 338.279 75.102 cv
338.058 75.1006 337.837 75.1031 337.615 75.1182 cv
337.354 75.1343 337.271 75.5594 337.535 75.6429 cv
338.061 75.813 338.581 75.9987 339.102 76.1843 cv
339.825 76.6849 340.838 76.8172 341.617 77.1633 cv
341.884 77.2821 342.061 76.8806 341.802 76.7528 cv
341.016 76.371 340.209 76.0484 339.394 75.7425 cv
339.405 75.7425 339.419 75.7415 339.432 75.7406 cv
340.236 75.7863 341.039 75.817 341.838 75.6978 cv
342.155 75.65 342.192 75.1383 341.848 75.1116 cv
341.479 75.0844 341.113 75.0825 340.746 75.0895 cv
341.137 74.9296 341.522 74.7524 341.895 74.5421 cv
341.899 74.5401 341.904 74.539 341.909 74.5371 cv
341.908 74.5371 341.907 74.536 341.908 74.535 cv
341.931 74.523 341.954 74.513 341.976 74.5008 cv
342.293 74.3167 341.992 73.8795 341.686 73.9725 cv
341.313 74.0853 340.95 74.217 340.59 74.3544 cv
340.966 73.9444 341.294 73.485 341.566 72.9658 cv
341.69 72.7334 341.41 72.4269 341.168 72.5493 cv
340.69 72.7922 340.243 73.073 339.821 73.388 cv
339.952 73.1369 340.08 72.8843 340.216 72.6368 cv
340.415 72.281 339.838 72.0275 339.643 72.3787 cv
cp
.376471 .564706 .470588 rgb
f
322.086 81.0032 mo
322.453 81.376 322.897 81.8414 322.817 82.4159 cv
322.751 82.8894 322.385 83.1877 321.964 83.3387 cv
321.921 83.4443 321.823 83.5329 321.71 83.5575 cv
321.364 83.6334 321.088 83.393 320.914 83.1052 cv
318.339 85.1645 315.206 86.2618 311.996 86.9239 cv
311.592 87.0074 311.53 86.3799 311.922 86.2925 cv
315.094 85.582 318.135 84.5059 320.699 82.4728 cv
320.643 81.9817 320.815 81.4599 321.144 81.1008 cv
321.37 80.8552 321.818 80.7315 322.086 81.0032 cv
cp
f
312.053 87.6625 mo
312.76 87.9452 313.349 86.9173 312.627 86.5988 cv
307.001 84.1225 302.513 80.3838 297.539 76.879 cv
296.979 76.4846 296.4 77.3706 296.853 77.8225 cv
301.09 82.0657 306.503 85.4527 312.053 87.6625 cv
cp
f
306.722 93.3729 mo
307.107 93.4977 307.508 93.5771 307.912 93.6063 cv
308.362 93.6405 308.729 93.086 308.578 92.6795 cv
308.351 92.0657 307.779 91.7483 307.223 91.866 cv
305.186 89.0727 304.083 85.8713 303.213 82.5558 cv
303.082 82.0608 302.376 82.2957 302.466 82.7797 cv
303.125 86.289 304.164 89.5824 306.245 92.5216 cv
306.262 92.5467 306.286 92.5568 306.306 92.5779 cv
306.207 92.8768 306.372 93.2612 306.722 93.3729 cv
cp
f
370.85 256.292 mo
374.43 253.73 378.678 252.37 381.468 248.866 cv
381.634 248.83 381.803 248.79 381.971 248.747 cv
381.624 251.72 380.887 254.686 379.703 257.64 cv
379.397 258.401 380.49 258.963 380.857 258.21 cv
382.026 255.813 382.818 253.295 383.293 250.721 cv
384.666 253.696 387.239 255.782 389.386 258.313 cv
389.983 259.017 391.346 258.758 391.225 257.673 cv
390.753 253.45 388.966 246.692 383.783 246.505 cv
384.105 240.448 382.84 234.257 380.523 228.698 cv
380.183 227.878 378.898 228.313 379.213 229.163 cv
381.368 234.978 382.49 240.86 382.143 246.735 cv
381.961 246.675 381.756 246.662 381.533 246.722 cv
380.36 247.034 379.123 246.936 377.955 247.264 cv
376.507 247.672 375.416 248.371 374.253 249.313 cv
372.324 250.876 370.742 253.006 369.58 255.194 cv
369.172 255.961 370.148 256.795 370.85 256.292 cv
cp
.658824 .752941 .564706 rgb
f
367.398 281.349 mo
371.354 283.698 375.535 284.801 380.246 285.271 cv
384.712 285.716 384.491 277.88 384.655 275.262 cv
384.922 270.962 384.782 259.735 380.925 258.407 cv
376.934 257.035 373.424 262.52 371.099 265.736 cv
367.909 270.145 362.9 279.226 367.398 281.349 cv
cp
.960784 .643137 .54902 rgb
f
368.435 274.547 mo
369.987 271.754 371.716 269.143 373.68 266.641 cv
372.212 269.572 370.893 272.616 370.478 275.885 cv
370.403 276.493 371.251 276.665 371.41 276.07 cv
372.225 273.02 373.572 270.222 374.994 267.417 cv
375.165 267.079 375.336 266.715 375.508 266.351 cv
374.532 269.613 373.91 272.872 373.386 276.278 cv
373.315 276.743 374.03 277.04 374.205 276.555 cv
375.362 273.357 375.889 269.987 377.164 266.826 cv
377.553 265.861 378.082 264.831 378.584 263.791 cv
378.599 267.963 377.546 272.045 376.318 276.096 cv
376.178 276.559 376.92 276.798 377.11 276.365 cv
378.416 273.431 379.44 270.127 379.881 266.789 cv
380.617 270.317 379.994 274.328 378.62 277.409 cv
378.352 278.016 379.171 278.378 379.519 277.853 cv
381.622 274.654 382.913 268.423 381.493 263.943 cv
383.503 267.916 383.126 274.399 382.173 277.815 cv
382.032 278.317 382.852 278.6 383.038 278.11 cv
384.345 274.675 384.92 268.24 383.338 263.64 cv
383.216 261.562 382.14 257.543 379.878 258.357 cv
379.819 258.378 379.783 258.414 379.733 258.443 cv
379.376 258.488 379.028 258.56 378.695 258.688 cv
378.635 258.705 378.572 258.733 378.51 258.772 cv
376.409 259.688 374.841 262.11 373.604 263.819 cv
371.191 267.143 368.733 270.236 367.556 274.247 cv
367.402 274.78 368.19 274.989 368.435 274.547 cv
cp
.980392 .341176 .392157 rgb
f
380.487 288.449 mo
380.471 288.442 li
380.478 288.446 380.487 288.449 380.495 288.454 cv
380.546 288.495 380.602 288.527 380.662 288.554 cv
380.974 288.729 381.321 288.825 381.681 288.694 cv
382.284 288.473 382.418 287.644 381.922 287.246 cv
381.842 286.971 381.671 286.712 381.357 286.674 cv
381.349 286.673 381.343 286.674 381.336 286.672 cv
380.943 286.627 380.656 286.82 380.536 287.103 cv
380.534 287.104 380.534 287.103 380.532 287.104 cv
380.493 287.154 380.455 287.205 380.414 287.255 cv
380.267 287.449 380.168 287.652 380.186 287.907 cv
380.204 288.133 380.32 288.319 380.487 288.449 cv
cp
f
376.74 288.327 mo
377.378 288.226 377.891 287.747 377.843 287.057 cv
377.799 286.453 377.213 285.853 376.573 285.954 cv
375.931 286.057 375.419 286.536 375.47 287.226 cv
375.511 287.83 376.097 288.431 376.74 288.327 cv
cp
f
372.648 287.347 mo
374.216 287.098 374.053 284.62 372.47 284.871 cv
370.904 285.122 371.066 287.601 372.648 287.347 cv
cp
f
368.531 286.179 mo
370.098 285.929 369.936 283.452 368.356 283.703 cv
366.787 283.953 366.948 286.432 368.531 286.179 cv
cp
f
365.082 283.922 mo
366.65 283.672 366.486 281.194 364.907 281.446 cv
363.338 281.696 363.501 284.174 365.082 283.922 cv
cp
f
120.58 308.315 mo
120.391 307.983 120.092 307.698 119.648 307.487 cv
119.566 307.448 119.482 307.415 119.399 307.387 cv
118.318 306.718 117.015 306.277 115.889 306.033 cv
112.124 305.22 108.644 307.189 107.008 310.541 cv
106.217 312.162 106.115 314.07 106.323 315.829 cv
106.587 318.066 108.12 319.692 109.092 321.626 cv
109.111 321.811 109.272 321.965 109.513 321.949 cv
109.541 321.949 109.572 321.951 109.601 321.95 cv
109.678 322.038 109.752 322.128 109.831 322.213 cv
110.089 322.491 110.503 322.563 110.863 322.475 cv
109.326 319.564 110.184 316.116 111.19 313.17 cv
111.412 312.523 112.441 312.8 112.218 313.453 cv
111.313 316.103 110.393 319.313 111.788 321.946 cv
111.848 322.061 111.865 322.171 111.85 322.274 cv
112.022 322.302 112.193 322.321 112.361 322.335 cv
112.216 320.959 112.714 319.652 113.376 318.436 cv
113.705 317.83 114.625 318.369 114.297 318.973 cv
113.697 320.077 113.183 321.3 113.473 322.575 cv
113.479 322.605 113.481 322.632 113.483 322.66 cv
113.893 322.67 114.328 322.48 114.527 322.065 cv
116.284 318.387 120.14 315.92 121.432 312.032 cv
121.947 310.478 121.492 309.253 120.58 308.315 cv
cp
.960784 .643137 .54902 rgb
f
131.162 315.801 mo
129.77 312.672 126.391 310.954 123.355 313.011 cv
122.539 313.564 121.794 314.215 121.105 314.929 cv
120.2 315.569 119.385 316.42 118.887 316.972 cv
117.669 318.318 116.251 320.136 116.343 322.059 cv
116.229 322.278 116.115 322.498 116.004 322.717 cv
115.834 323.053 116.279 323.303 116.547 323.135 cv
116.553 323.148 116.559 323.164 116.566 323.178 cv
116.588 323.229 116.617 323.278 116.642 323.33 cv
116.972 322.869 117.339 322.442 117.831 322.132 cv
117.929 322.07 118.025 322.047 118.115 322.05 cv
119.507 321.012 121.639 320.001 122.098 319.82 cv
122.737 319.568 123.012 320.599 122.38 320.848 cv
121.503 321.195 120.663 321.718 119.862 322.21 cv
119.422 322.48 118.982 322.753 118.567 323.059 cv
118.404 323.18 118.239 323.302 118.093 323.443 cv
118.061 323.473 118.042 323.495 118.021 323.515 cv
118.062 323.828 117.736 324.136 117.394 324.101 cv
117.344 324.176 117.295 324.249 117.247 324.324 cv
117.339 324.459 117.429 324.591 117.517 324.723 cv
117.775 325.119 118.051 325.52 118.318 325.932 cv
119.447 325.346 120.669 324.928 121.847 324.461 cv
122.486 324.207 122.76 325.237 122.129 325.489 cv
121.04 325.921 119.918 326.309 118.871 326.846 cv
118.9 326.897 118.93 326.946 118.958 326.997 cv
118.889 327.405 119.011 327.824 119.432 328.059 cv
119.452 328.069 119.472 328.079 119.492 328.089 cv
119.646 328.288 119.881 328.397 120.128 328.418 cv
123.873 330.229 128.293 330.31 130.703 326.388 cv
132.586 323.323 132.601 319.033 131.162 315.801 cv
cp
f
100.272 334.482 mo
99.2702 334.982 98.181 335.193 97.0136 335.02 cv
96.3359 334.92 96.6258 333.893 97.2979 333.993 cv
98.2524 334.135 99.1414 333.891 99.9494 333.449 cv
99.7979 332.957 99.6449 332.426 99.5161 331.886 cv
98.5859 332.054 97.633 332.034 96.655 332.03 cv
95.9677 332.025 95.9677 330.96 96.655 330.963 cv
97.541 330.968 98.4475 331.016 99.3175 330.86 cv
99.2113 330.14 99.1836 329.43 99.3175 328.792 cv
99.5297 328.649 99.6732 328.409 99.6702 328.074 cv
99.6686 328.012 99.6621 327.948 99.6591 327.886 cv
99.7798 327.676 99.9212 327.477 100.104 327.302 cv
100.191 327.218 100.254 327.126 100.307 327.033 cv
100.679 326.927 100.936 326.47 100.616 326.102 cv
98.3002 323.439 95.1078 318.473 91.1186 321.102 cv
87.8775 323.237 87.3619 328.47 87.6722 331.93 cv
88.035 335.981 90.6688 339.631 95.0893 339.088 cv
96.7677 338.883 100.956 336.805 100.342 334.713 cv
100.32 334.639 100.295 334.559 100.272 334.482 cv
cp
f
103.343 318.722 mo
103.045 318.105 103.965 317.565 104.264 318.184 cv
104.905 319.518 105.825 320.637 106.861 321.665 cv
106.988 321.576 107.116 321.486 107.232 321.384 cv
107.676 321 107.711 320.371 107.361 319.914 cv
105.942 318.063 105.56 316.189 105.519 313.897 cv
105.494 312.45 105.401 310.739 104.573 309.498 cv
102.553 306.469 98.754 308.459 96.5408 310.145 cv
93.9034 312.154 92.9188 314.876 94.3471 317.958 cv
95.3429 320.106 97.2209 321.949 99.2892 323.274 cv
99.3461 323.354 99.4116 323.43 99.489 323.496 cv
99.632 323.619 99.7909 323.725 99.9449 323.834 cv
99.9971 323.937 100.055 324.039 100.129 324.133 cv
100.343 324.406 100.748 324.542 101.108 324.489 cv
101.537 324.859 102.23 324.932 102.668 324.338 cv
103.033 323.842 103.525 323.478 104.068 323.166 cv
102.867 322.413 101.772 321.53 100.96 320.353 cv
100.569 319.786 101.493 319.252 101.88 319.815 cv
102.634 320.908 103.702 321.7 104.825 322.383 cv
104.945 322.456 105.015 322.553 105.051 322.656 cv
105.342 322.516 105.632 322.375 105.916 322.229 cv
104.892 321.189 103.982 320.05 103.343 318.722 cv
cp
f
115.497 341.017 mo
115.172 340.658 114.536 340.418 114.081 340.707 cv
113.727 340.933 113.289 341.135 112.8 341.304 cv
113.176 342.729 113.633 344.129 114.1 345.526 cv
114.317 346.18 113.288 346.458 113.071 345.81 cv
112.606 344.415 112.15 343.018 111.774 341.595 cv
111.267 341.71 110.735 341.792 110.2 341.831 cv
109.907 342.614 109.993 343.353 110.211 344.147 cv
110.394 344.811 109.365 345.092 109.183 344.43 cv
108.948 343.57 108.838 342.705 109.072 341.852 cv
108.415 341.825 107.779 341.727 107.214 341.538 cv
106.8 342.527 106.566 343.584 106.468 344.664 cv
106.407 345.344 105.34 345.35 105.402 344.664 cv
105.513 343.43 105.773 342.214 106.251 341.083 cv
106.106 340.985 105.967 340.88 105.843 340.765 cv
105.567 340.504 105.245 340.403 104.935 340.416 cv
105.04 339.875 104.313 339.408 103.986 339.961 cv
103.244 341.214 102.487 342.539 101.952 343.926 cv
101.903 344.015 101.868 344.114 101.841 344.223 cv
101.398 345.457 101.14 346.738 101.237 348.065 cv
101.459 351.101 104.548 352.076 107.092 352.076 cv
110.083 352.076 113.636 351.449 116.132 349.696 cv
119.62 347.248 117.817 343.573 115.497 341.017 cv
cp
f
100.626 341.422 mo
100.259 342 99.3351 341.466 99.7058 340.883 cv
100.347 339.874 100.987 338.861 101.695 337.897 cv
101.593 337.887 101.49 337.886 101.388 337.899 cv
101.449 337.824 101.513 337.749 101.569 337.674 cv
101.874 337.265 101.396 336.76 100.96 336.948 cv
99.3653 337.632 98.0028 338.982 96.3214 339.445 cv
95.2276 339.746 94.0336 339.93 93.0844 340.6 cv
91.1105 341.989 91.6257 343.973 92.9601 345.633 cv
94.2143 347.193 96.4527 348.513 98.3555 347.257 cv
100.858 345.604 101.456 341.963 102.671 339.44 cv
102.863 339.039 102.812 338.686 102.628 338.418 cv
101.911 339.383 101.272 340.406 100.626 341.422 cv
cp
f
131.939 331.892 mo
131.634 330.632 130.659 329.965 129.441 329.74 cv
128.391 329.546 127.134 329.946 126.122 330.144 cv
124.488 330.465 122.998 330.613 121.351 330.294 cv
121.165 330.258 121 330.264 120.851 330.293 cv
120.634 330.276 120.419 330.366 120.321 330.578 cv
119.933 330.978 119.868 331.683 120.155 332.231 cv
120.145 332.321 120.13 332.411 120.119 332.5 cv
121.12 333.388 122.609 333.326 123.869 333.221 cv
124.554 333.162 124.549 334.229 123.869 334.286 cv
122.541 334.399 121.081 334.379 119.934 333.685 cv
119.848 334.129 119.737 334.569 119.611 335.009 cv
120.147 335.3 120.553 335.89 121.126 336.124 cv
121.754 336.38 121.48 337.413 120.843 337.152 cv
120.386 336.965 120.006 336.706 119.64 336.374 cv
119.519 336.264 119.398 336.133 119.263 336.038 cv
119.06 336.504 118.812 336.935 118.547 337.356 cv
118.828 337.56 119.064 337.839 119.285 338.097 cv
119.668 338.545 120.036 339.011 120.484 339.396 cv
121.005 339.847 120.248 340.597 119.73 340.151 cv
119.312 339.791 118.966 339.359 118.609 338.941 cv
118.449 338.756 118.19 338.405 117.974 338.239 cv
117.71 338.645 117.453 339.056 117.231 339.497 cv
117.082 339.793 117.16 340.065 117.342 340.259 cv
117.172 340.416 117.085 340.657 117.215 340.891 cv
117.875 342.087 118.331 344.286 119.242 345.809 cv
119.304 346.086 119.475 346.347 119.764 346.535 cv
120.455 347.317 121.375 347.711 122.694 347.284 cv
125.552 346.357 127.862 343.039 129.324 340.522 cv
130.706 338.143 132.632 334.757 131.939 331.892 cv
cp
f
109.507 326.67 mo
108.625 326.67 108.496 328.045 109.386 328.045 cv
110.268 328.045 110.397 326.67 109.507 326.67 cv
cp
.615686 .737255 .435294 rgb
f
108.662 328.256 mo
107.708 327.58 106.294 327.795 105.628 328.774 cv
105.621 328.784 105.615 328.793 105.608 328.803 cv
104.938 329.786 105.147 331.147 106.128 331.844 cv
107.239 332.633 109 332.174 109.434 330.825 cv
109.438 330.814 109.441 330.803 109.445 330.792 cv
109.746 329.857 109.484 328.84 108.662 328.256 cv
cp
f
111.8 331.028 mo
110.394 331.028 110.189 333.219 111.609 333.219 cv
113.014 333.219 113.219 331.028 111.8 331.028 cv
cp
f
111.791 327.861 mo
111.779 327.937 111.766 328.012 111.753 328.088 cv
111.528 329.43 113.546 330.147 114.249 329.004 cv
114.29 328.939 114.33 328.872 114.37 328.808 cv
115.586 326.83 112.18 325.551 111.791 327.861 cv
cp
f
109.548 334.146 mo
109.522 334.092 109.489 334.044 109.459 333.993 cv
109.449 333.977 109.441 333.961 109.431 333.946 cv
109.408 333.912 109.386 333.88 109.36 333.848 cv
109.324 333.797 109.284 333.751 109.243 333.706 cv
109.23 333.693 109.217 333.679 109.203 333.665 cv
109.158 333.619 109.11 333.578 109.059 333.539 cv
108.669 333.223 108.152 333.062 107.654 333.175 cv
107.651 333.175 107.649 333.176 107.646 333.177 cv
107.22 333.205 106.777 333.548 106.54 333.882 cv
106.185 334.385 106.117 335.074 106.388 335.631 cv
106.389 335.633 106.39 335.635 106.391 335.638 cv
106.963 336.812 108.629 336.978 109.394 335.9 cv
109.755 335.391 109.815 334.709 109.548 334.146 cv
cp
f
114.141 332.832 mo
111.507 332.832 111.126 336.933 113.782 336.933 cv
116.415 336.933 116.797 332.832 114.141 332.832 cv
cp
f
117.99 330.325 mo
117.694 329.701 117.078 329.27 116.389 329.21 cv
115.702 329.151 115.021 329.467 114.621 330.03 cv
114.418 330.319 114.3 330.639 114.268 330.99 cv
114.22 331.538 114.407 331.986 114.719 332.421 cv
114.728 332.435 114.738 332.448 114.751 332.459 cv
115.221 332.971 115.874 333.243 116.573 333.116 cv
117.125 333.015 117.56 332.685 117.847 332.235 cv
117.833 332.262 117.819 332.289 117.804 332.316 cv
117.809 332.309 117.814 332.301 117.817 332.294 cv
118.02 332.005 118.138 331.684 118.17 331.332 cv
118.2 330.981 118.139 330.644 117.99 330.325 cv
cp
f
102.979 330.825 mo
100.346 330.825 99.9639 334.926 102.62 334.926 cv
105.254 334.926 105.636 330.825 102.979 330.825 cv
cp
f
107.992 323.818 mo
107.708 323.48 107.226 323.184 106.772 323.184 cv
106.278 323.184 105.849 323.27 105.46 323.596 cv
105.096 323.901 104.866 324.344 104.826 324.816 cv
104.783 325.289 104.934 325.765 105.239 326.129 cv
105.521 326.465 106.004 326.763 106.459 326.763 cv
106.952 326.763 107.38 326.676 107.77 326.349 cv
108.133 326.044 108.363 325.602 108.404 325.13 cv
108.446 324.657 108.297 324.181 107.992 323.818 cv
cp
f
112.448 336.595 mo
112.258 336.367 112.018 336.207 111.755 336.117 cv
111.308 335.932 110.767 335.929 110.373 336.141 cv
109.892 336.399 109.416 336.91 109.427 337.499 cv
109.434 337.876 109.432 338.061 109.591 338.407 cv
109.823 338.913 110.388 339.352 110.962 339.362 cv
111.427 339.369 111.841 339.284 112.207 338.975 cv
112.433 338.787 112.644 338.493 112.728 338.209 cv
112.896 337.641 112.841 337.064 112.448 336.595 cv
cp
f
106.896 337.449 mo
105.682 337.449 105.507 339.339 106.731 339.339 cv
107.944 339.339 108.118 337.449 106.896 337.449 cv
cp
f
113.193 323.685 mo
112.852 323.277 112.201 322.976 111.662 323.134 cv
111.623 323.145 111.583 323.156 111.544 323.168 cv
111.251 323.223 110.992 323.346 110.764 323.536 cv
110.537 323.728 110.37 323.962 110.265 324.24 cv
110.056 324.806 110.169 325.454 110.555 325.916 cv
110.942 326.376 111.561 326.6 112.155 326.491 cv
112.701 326.392 113.271 325.972 113.432 325.418 cv
113.445 325.375 113.459 325.331 113.47 325.288 cv
113.635 324.722 113.584 324.151 113.193 323.685 cv
cp
f
117.272 326.674 mo
116.993 326.09 116.383 325.732 115.731 325.852 cv
114.838 326.015 114.327 327.012 114.715 327.832 cv
115.042 328.522 115.892 328.829 116.583 328.501 cv
117.249 328.187 117.596 327.352 117.272 326.674 cv
cp
f
103.732 326.436 mo
101.097 326.436 100.717 330.537 103.373 330.537 cv
106.006 330.537 106.388 326.436 103.732 326.436 cv
cp
f
120.288 68.5832 mo
120.32 68.5429 121.196 66.536 120.649 65.411 cv
116.714 57.3184 93.5059 73.5323 105.537 83.2128 cv
108.807 85.8452 112.88 83.2139 113.398 80.1443 cv
114.376 78.7246 120.152 69.5119 120.288 68.5832 cv
cp
.960784 .643137 .54902 rgb
f
124.987 71.3925 mo
125.239 68.1027 120.866 68.5338 119.699 71.8384 cv
118.139 76.2638 117.029 76.7347 113.773 80.8241 cv
111.259 83.9786 113.856 88.4086 117.146 86.0872 cv
121.913 82.7238 124.549 77.1231 124.987 71.3925 cv
cp
f
122.193 67.1563 mo
122.084 67.1563 121.975 67.1216 121.883 67.0526 cv
121.702 66.9158 121.631 66.6763 121.71 66.4631 cv
123.07 62.7731 125.403 56.5239 125.746 56.1219 cv
125.931 55.9061 126.256 55.8803 126.472 56.065 cv
126.681 56.2426 126.712 56.5505 126.549 56.7664 cv
126.275 57.2262 124.587 61.6733 123.273 65.2077 cv
131.145 59.4219 li
131.374 59.2533 131.696 59.3017 131.865 59.532 cv
132.034 59.761 131.984 60.0834 131.755 60.252 cv
122.498 67.0561 li
122.408 67.1231 122.3 67.1563 122.193 67.1563 cv
cp
.980392 .341176 .392157 rgb
f
122.772 66.1601 mo
122.655 66.1601 122.537 66.1203 122.44 66.0388 cv
122.223 65.8552 122.195 65.5302 122.378 65.3128 cv
128.459 58.1022 li
128.642 57.8849 128.967 57.8561 129.185 58.0402 cv
129.402 58.224 129.43 58.5489 129.247 58.7663 cv
123.166 65.977 li
123.064 66.0978 122.919 66.1601 122.772 66.1601 cv
cp
f
126.417 54.929 mo
125.836 54.6941 125.173 54.8359 124.869 55.4326 cv
124.602 55.9548 124.788 56.7458 125.371 56.9817 cv
125.954 57.2172 126.616 57.0753 126.92 56.4786 cv
127.187 55.9569 127.001 55.1655 126.417 54.929 cv
cp
f
129.393 56.6939 mo
127.884 56.0836 126.716 58.3446 128.239 58.9605 cv
129.747 59.5698 130.914 57.3093 129.393 56.6939 cv
cp
f
132.592 58.4483 mo
131.083 57.8371 129.915 60.0975 131.437 60.7134 cv
132.944 61.3232 134.113 59.0631 132.592 58.4483 cv
cp
f
114.602 93.1228 mo
113.715 93.3406 112.858 93.5621 112.012 93.7884 cv
111.653 93.6495 111.238 93.6838 110.836 94.0158 cv
110.776 94.0647 110.719 94.115 110.659 94.1642 cv
107.827 94.9752 105.211 95.9181 102.797 97.3022 cv
104.52 94.8943 106.081 92.4013 107.455 90.018 cv
107.887 90.1931 108.329 90.2898 108.727 90.2566 cv
110.553 90.1061 110.905 88.0021 110.035 86.699 cv
109.766 86.2944 109.431 85.9841 109.059 85.7642 cv
108.962 85.6806 108.845 85.6092 108.694 85.568 cv
108.652 85.5569 108.613 85.5544 108.573 85.5448 cv
107.532 85.1614 106.305 85.3541 105.33 86.0479 cv
104.683 86.5103 104.474 87.34 104.896 88.0323 cv
105.243 88.6007 105.618 89.0309 106.128 89.3278 cv
104.085 91.9209 102.056 94.4646 99.977 96.9606 cv
100.278 93.4242 99.9629 89.9899 98.915 86.3493 cv
98.5744 85.1665 96.818 85.0336 96.2942 86.142 cv
94.162 90.6439 93.3022 97.0486 96.3244 101.213 cv
94.641 103.112 92.9057 104.981 91.0798 106.814 cv
90.3524 107.543 91.3858 108.738 92.228 108.179 cv
94.1902 106.876 96.0471 105.229 97.797 103.394 cv
97.8171 103.397 97.8307 103.408 97.8513 103.41 cv
98.1351 103.441 98.4098 103.45 98.684 103.46 cv
98.6971 103.468 98.7077 103.478 98.7187 103.485 cv
99.1892 103.788 99.6837 103.706 100.072 103.435 cv
103.229 103.162 105.835 101.578 108.333 99.6779 cv
110.845 98.4805 113.254 97.0124 115.648 95.3345 cv
116.827 94.5104 115.955 92.7867 114.602 93.1228 cv
cp
.376471 .564706 .470588 rgb
f
319.186 78.3965 mo
317.723 74.4444 311.288 73.6516 307.365 74.9069 cv
307.801 74.4244 308.206 73.8996 308.646 73.4242 cv
309.856 72.1145 311.254 70.9815 312.573 69.7862 cv
313.717 68.7497 316.164 67.1176 315.45 65.2993 cv
314.781 63.6033 312.255 65.8598 311.606 66.3317 cv
309.457 67.8929 307.79 70.3054 306.313 72.6539 cv
307.094 69.1642 307.685 65.5911 304.713 62.8466 cv
304.34 62.5014 303.735 62.4154 303.413 62.8995 cv
302.243 64.6538 302.531 66.5415 302.986 68.5071 cv
303.363 70.1378 303.594 71.8086 303.982 73.4357 cv
302.993 71.9309 301.346 70.6827 300.127 69.5965 cv
299.174 68.7487 296.668 66.3261 295.193 67.1493 cv
293.361 68.1726 295.034 70.6399 296.066 71.5888 cv
297.505 72.9125 299.201 73.8573 300.922 74.7589 cv
300.944 74.7751 300.967 74.7936 300.989 74.8102 cv
301.077 74.8711 301.169 74.9094 301.261 74.9355 cv
301.647 75.1362 302.033 75.3371 302.417 75.5392 cv
300.205 75.8849 298.075 76.8047 296.136 77.9094 cv
295.014 78.5499 292.093 79.9904 292.399 81.6613 cv
293.05 85.2233 301.285 79.3248 304.039 77.0315 cv
303.067 78.9031 302.746 81.1646 302.82 83.227 cv
302.87 84.687 302.846 87.0914 304.137 88.0815 cv
305.813 89.3655 306.711 86.0741 306.765 85.1167 cv
306.844 83.7381 306.542 82.3123 306.341 80.9559 cv
306.136 79.5718 306.365 78.2279 306.357 76.8665 cv
309.564 77.9945 312.533 79.6754 315.94 80.3395 cv
317.444 80.6329 320.024 80.6611 319.186 78.3965 cv
cp
.960784 .643137 .54902 rgb
f
314.238 66.6064 mo
311.586 69.5487 308.375 71.8977 305.845 74.9592 cv
305.751 75.0729 305.936 75.1977 306.03 75.09 cv
308.628 72.0909 311.943 69.8133 314.583 66.8509 cv
314.764 66.6472 314.417 66.4072 314.238 66.6064 cv
cp
.290196 .184314 .137255 rgb
f
316.67 78.1279 mo
315.116 77.0557 313.22 76.1943 311.427 75.6223 cv
309.535 75.0181 307.471 75.1041 305.525 74.7741 cv
305.417 74.7554 305.331 74.7851 305.272 74.8404 cv
305.339 73.5343 305.403 72.2333 305.272 70.9252 cv
305.077 68.96 304.365 67.0914 304.181 65.1222 cv
304.17 64.9924 303.981 65.0332 303.986 65.1575 cv
304.065 66.8062 304.457 68.4081 304.723 70.0316 cv
304.986 71.6235 304.875 73.1962 304.748 74.7841 cv
303.572 74.1774 302.496 73.4317 301.481 72.5422 cv
300.083 71.3136 298.357 70.5302 297.024 69.2141 cv
296.919 69.1104 296.742 69.2539 296.847 69.363 cv
298.065 70.6263 299.533 71.5339 300.889 72.6337 cv
302.143 73.6516 303.312 74.6095 304.69 75.3556 cv
301.077 76.5591 298.032 78.9911 294.924 81.1184 cv
294.819 81.1883 294.935 81.3699 295.04 81.3025 cv
298.162 79.3031 301.193 76.9073 304.751 75.7324 cv
304.386 79.2503 304.544 82.7254 304.868 86.2511 cv
304.881 86.379 305.074 86.3417 305.065 86.2155 cv
304.767 82.6871 304.792 79.1501 305.176 75.6338 cv
305.181 75.6273 305.185 75.6208 305.189 75.6153 cv
305.402 75.7169 305.617 75.815 305.838 75.9066 cv
306.083 76.0057 306.249 75.7577 306.197 75.5609 cv
308.019 75.7959 309.865 75.7893 311.641 76.3202 cv
313.348 76.8293 314.855 77.9638 316.608 78.2928 cv
316.701 78.3094 316.741 78.1761 316.67 78.1279 cv
cp
f
306.443 73.3889 mo
305.869 73.0664 305.199 73.0207 304.677 73.3578 cv
303.603 73.6496 302.707 74.8008 303.381 75.899 cv
303.618 76.2839 303.923 76.55 304.271 76.712 cv
304.739 77.185 305.486 77.109 306.028 76.7598 cv
306.105 76.7347 306.182 76.7146 306.259 76.6834 cv
307.625 76.1294 307.7 74.0943 306.443 73.3889 cv
cp
.980392 .341176 .392157 rgb
f
246.972 59.4334 mo
243.78 58.2264 240.491 57.346 237.314 56.1425 cv
240.336 55.7491 243.356 55.3501 246.369 54.8887 cv
249.353 54.4314 253.022 53.9766 255.223 51.6628 cv
256.522 50.2968 256.252 48.5128 255.322 47.0401 cv
254.6 45.8915 253.467 45.0312 252.406 44.2181 cv
250.639 42.8627 250.822 42.2806 252.118 40.8573 cv
254.573 38.1611 252.309 34.6895 248.96 34.9647 cv
244.69 35.3154 240.402 39.7775 237.508 42.5402 cv
236.332 43.6637 235.264 44.844 234.217 46.0862 cv
233.286 47.1915 232.258 48.2883 231.034 49.0742 cv
229.695 49.932 229.16 48.317 228.966 47.3651 cv
228.665 45.8955 229.366 44.3665 229.957 43.068 cv
231.378 39.9405 233.123 37.5351 233.29 33.9877 cv
233.368 32.3203 232.953 28.9208 230.837 28.4418 cv
228.665 27.9492 226.945 29.1909 225.528 30.7611 cv
223.543 32.9613 222.255 32.9694 220.298 30.7984 cv
219.615 30.0407 218.855 29.2714 217.812 29.0717 cv
215.155 28.564 214.101 30.3531 214.491 32.7822 cv
214.992 35.8995 216.632 38.9339 218.066 41.7785 cv
218.6 43.6949 218.957 45.6766 219.385 47.6222 cv
219.306 47.6051 219.226 47.587 219.148 47.5699 cv
217.898 46.1426 216.99 44.1109 215.944 42.6277 cv
214.489 40.5664 211.921 38.9489 209.643 37.9819 cv
208.138 37.3424 205.857 37.2801 205.097 39.0576 cv
204.74 39.8938 204.499 41.0057 204.891 41.8786 cv
205.25 42.6781 207.914 45.7813 206.49 45.823 cv
203.733 45.903 201.323 44.5743 198.967 46.6864 cv
197.206 48.2662 198.216 51.0821 199.369 52.6725 cv
203.187 57.9397 208.433 57.4643 213.886 56.8725 cv
214.268 56.8836 214.648 56.8932 215.023 56.9007 cv
215.892 56.9189 216.759 56.945 217.626 56.9812 cv
215.371 59.9265 212.179 62.0054 209.637 64.7418 cv
207.653 66.8771 206.418 69.5899 205.819 72.4205 cv
205.238 75.1619 206.185 77.8707 208.687 79.2211 cv
209.808 79.8259 210.923 79.9164 212.159 79.7021 cv
213.747 79.4279 216.008 77.1981 217.524 78.5972 cv
218.677 79.6634 222.421 88.9615 225.119 84.7263 cv
227.133 81.5636 226.662 77.4712 226.135 73.959 cv
225.638 70.651 225.262 67.4149 225.121 64.1552 cv
225.65 63.5836 226.283 63.1218 227.015 62.8496 cv
227.773 62.5668 228.69 62.9684 229.379 63.2611 cv
229.911 63.4876 230.397 63.9222 230.85 64.2653 cv
231.077 64.4369 231.311 64.5496 231.551 64.6276 cv
232.444 66.0172 233.244 67.4954 234.005 69.0063 cv
235.634 72.2409 237.017 75.5469 240.009 77.7766 cv
242.058 79.3031 245.394 78.7879 246.385 76.1994 cv
247.414 73.5072 246.292 70.6841 245.57 67.9483 cv
247.737 68.9987 250.045 70.2505 252.346 70.0271 cv
255.026 69.7665 256.65 67.8149 255.75 65.2339 cv
254.658 62.1005 249.692 60.4618 246.972 59.4334 cv
cp
.760784 .87451 .721569 rgb
f
240.542 48.5177 mo
239.656 48.9529 238.785 48.8714 237.842 49.0753 cv
236.507 49.364 235.197 49.7353 233.869 50.0538 cv
232.031 50.4935 229.827 50.7571 227.999 51.4952 cv
227.634 50.3491 227.258 49.201 227.062 47.9905 cv
226.727 45.9222 226.785 43.6858 226.928 41.5973 cv
227.027 40.1539 225.149 39.4491 224.293 40.6299 cv
223.873 41.2079 223.535 41.8886 223.265 42.6333 cv
223 42.7113 222.752 42.8582 222.567 43.0861 cv
220.938 45.091 220.625 47.2831 220.97 49.8078 cv
221.072 50.5554 221.243 51.3936 221.498 52.2247 cv
220.685 51.9259 219.896 51.5148 219.171 51.1612 cv
216.856 50.0322 214.03 47.6649 211.384 47.5679 cv
210.241 47.5261 209.528 48.7985 210.263 49.7207 cv
211.83 51.6884 214.38 53.4045 216.361 54.9511 cv
217.236 55.6339 218.16 56.3121 219.134 56.8982 cv
218.801 57.2177 218.494 57.5407 218.222 57.8507 cv
217.059 59.1834 215.861 60.8955 215.578 62.675 cv
215.368 63.9771 214.982 65.4442 215.614 66.6844 cv
216.281 67.991 218.009 67.5347 218.259 66.2104 cv
218.417 65.3732 218.897 64.6014 219.47 63.8815 cv
219.455 65.1156 219.711 66.3699 219.446 67.583 cv
219.134 68.9998 221.321 69.3448 221.835 68.1218 cv
222.617 66.2528 223.754 64.5229 224.549 62.6413 cv
224.986 61.6084 225.737 60.904 226.499 60.2097 cv
227.789 60.5232 229.143 61.223 230.273 61.8333 cv
231.028 62.2408 231.749 62.7108 232.462 63.1872 cv
233.279 63.7326 234.331 63.9711 235.059 64.6231 cv
236.904 66.2769 239.403 63.3281 237.916 61.5204 cv
237.3 60.7703 236.897 59.8153 236.29 59.0329 cv
235.521 58.0433 234.296 57.2046 233.314 56.4363 cv
234.344 56.0137 235.344 55.5478 236.252 55.1478 cv
238.816 54.0199 240.498 52.6539 242.138 50.4181 cv
242.897 49.3821 241.695 47.9522 240.542 48.5177 cv
cp
.376471 .564706 .470588 rgb
f
232.768 56.2447 mo
232.821 55.6399 232.759 55.0487 232.589 54.4792 cv
232.797 54.3479 232.925 54.1049 232.949 53.8422 cv
232.986 53.4529 232.686 53.0986 232.297 53.0649 cv
232.176 53.0539 232.064 53.0725 231.967 53.1122 cv
231.77 52.7963 231.545 52.4888 231.289 52.194 cv
231.378 52.116 231.444 52.0225 231.486 51.9108 cv
231.537 51.7362 231.557 51.5908 231.525 51.4107 cv
231.452 51.0041 230.981 50.7476 230.605 50.9387 cv
230.473 51.0057 230.355 51.0973 230.265 51.2099 cv
230.051 51.0399 229.831 50.8804 229.603 50.742 cv
229.395 50.6027 229.178 50.4784 228.959 50.3587 cv
229.189 49.8359 228.985 49.1346 228.26 49.1346 cv
227.828 49.1346 227.536 49.3887 227.4 49.7046 cv
227.057 49.6004 226.713 49.5124 226.369 49.4591 cv
226.034 49.4072 225.694 49.3977 225.356 49.4107 cv
225.357 49.2166 225.264 49.0274 225.049 48.969 cv
225.026 48.963 224.932 48.9419 224.894 48.9343 cv
224.857 48.9248 224.821 48.9142 224.785 48.9011 cv
224.783 48.9001 224.783 48.9006 224.779 48.8992 cv
224.619 48.791 224.453 48.7744 224.264 48.8458 cv
223.96 48.9625 223.912 49.3615 224.084 49.602 cv
223.203 49.8344 222.36 50.2545 221.635 50.8245 cv
221.611 50.7873 221.585 50.75 221.561 50.7128 cv
221.116 50.0437 220.075 51.0615 220.798 51.541 cv
220.81 51.549 220.823 51.5576 220.835 51.5661 cv
220.463 51.9727 220.142 52.422 219.895 52.9064 cv
219.834 52.8944 219.772 52.8874 219.703 52.8874 cv
218.628 52.8874 218.415 54.4595 219.349 54.6527 cv
219.273 55.1871 219.279 55.7215 219.355 56.2396 cv
219.311 56.2321 219.269 56.2194 219.224 56.217 cv
218.413 56.1571 218.439 57.4018 219.277 57.3404 cv
219.321 57.342 219.363 57.3364 219.405 57.3243 cv
219.478 57.3077 219.541 57.2715 219.599 57.2273 cv
219.824 57.8657 220.168 58.4594 220.644 58.965 cv
220.376 59.1507 220.339 59.6588 220.722 59.7565 cv
220.768 59.768 220.815 59.7801 220.862 59.7921 cv
221.044 59.8389 221.219 59.7579 221.279 59.5849 cv
221.289 59.5713 221.295 59.5562 221.305 59.5421 cv
221.45 59.6493 221.594 59.7595 221.756 59.8525 cv
221.928 59.9521 222.104 60.0296 222.279 60.1146 cv
222.089 60.6298 222.303 61.2773 223 61.2773 cv
223.434 61.2773 223.727 61.0202 223.861 60.7013 cv
224.368 60.8331 224.881 60.9293 225.405 60.976 cv
225.358 61.0776 225.344 61.1949 225.399 61.3161 cv
225.509 61.5677 225.684 61.7438 225.964 61.779 cv
226.263 61.8162 226.461 61.5867 226.52 61.3242 cv
226.546 61.2019 226.507 61.0988 226.435 61.0197 cv
226.784 61.0202 227.137 61.0112 227.496 60.9855 cv
227.804 60.9629 228.125 60.9056 228.445 60.8286 cv
228.456 60.8955 228.476 60.9629 228.516 61.0319 cv
228.697 61.3317 229.079 61.389 229.307 61.1012 cv
229.291 61.1229 229.22 61.2125 229.18 61.216 cv
229.585 61.1787 229.675 60.7632 229.548 60.4577 cv
229.953 60.2853 230.349 60.0855 230.706 59.8359 cv
230.838 60.0216 231.06 60.1429 231.292 60.0754 cv
231.339 60.0614 231.388 60.0472 231.435 60.0336 cv
231.678 59.9627 231.867 59.7997 231.89 59.5331 cv
231.907 59.3343 231.8 59.1174 231.624 59.0123 cv
231.793 58.8171 231.949 58.6134 232.074 58.394 cv
232.153 58.2531 232.222 58.1132 232.287 57.9729 cv
232.295 57.9729 232.3 57.9749 232.307 57.9749 cv
233.338 57.9749 233.572 56.5344 232.768 56.2447 cv
cp
.290196 .184314 .137255 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 17.0.0%%For: (Alisa Foytik) ()%%Title: (wreath1-01.eps)%%CreationDate: 9/21/13 8:52 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&BgYimZ7^P)!<8`4:_^a2_ciJ-W6A!rK(F.6M?6BX$B&B^hWMfRgY[7Ia;Pluluq:[gtVRF93/28+sUTXaRSfrcGAp<CNjR.%o<2B+6N6"^L&W)2++MX`g"\ggqfIDh=%\g"g(oA_r'NYMlnf2qR_-8rh+j`U^VA-0GIm[\C(#OCGAC">>OkG#p9*(dGQ+Ve\*K#l%A)hV@bKnA6G&t4Ch5U-`eT?@#pR.Yfg6Za=F8R!%iUar-Bj#<HHEnY2=?;MX]K\VASaN2M9mh3=ghQ6N](KC1Zhs9]oUL81l+!e=%]t1Yq:q(1/r\G]^eeXaEon.E`-`dc(aZk.(C,3Y:mF`O!pA%Q3dhr(^aT'Z&9H5n]s"e6Us+fEjrsSk82-9C>k5"U;9O[Vg8e.\^%?Z#4LIPCa((.m_44*s'^m^N/$:(3]FRQGl`HEYEm[`2%b<5qT:oK<%amOuW"^/N-J]9JIP*V7$<';qn*0X>6fLOM"sMrpY6k$PT4%&"<0NAlk%CY1m/trK!K?M<cZV^H?0g]<?B^4kYfb;pnTldb/<B"\ODEQJ;)7rEG%"bQ$-'C\@*rZR6%7Bcl7ADq/<ZIsQFFZVph8%#ul%mL1bkXh6kOD/p>C%VWOGs`L5sGe;Wps<lp*f=j-=Pk=0D5O,RL$8:UDRk5UY*IkE_[XP;HDmG?!d&"i<7>8orB&%38H^UV,E%3:_Qus*qTl!D9QIgs'dnp@H.bOo&'N5?X6hQZb;'3]f<pIJIYb0$^WTWHMoIIiJ<T^W>RCHb)B>rV:.tHFJ&Pk1EW3&jJU!+377P%]:FSfLV'%HZ&-#Nc?chj]%Q:i\oQLD[:ef4jc=2b$/Xq#>.<@M!T`]8TBUZ;n(ObYal^1ZRf4^Bo$@=8T)H'%GG.(8ca@n0pWmH`%ZSsZ+TV]B7;0u71m[ZN5o6,PkhQ=&20_.j%:\gh>O;a-BCcf\1JjOec*.GaW7j^3l_oPX:R&Jlr('<=Ih:Ng.Xa_Bu\@.qkhJ*-P%fWEDB&,*JJCRn4I0^Rbj#,C?n[\Efj0un?aYkr6<!H`^dgu7Hj6CWG9=eteQB943bkKt+2m<39G>Mn1Q2,9UuK\m"jl#/e==F]e@%GM91tSKU1VZokO9H`]cL\bc&LYIS`B_lYM-["QO!i#86ABD&HSYHbdh>4:%SXlcUl%gT>lg(d@e><QZmRR7'tG4m'0eQ00FHVJCQ%\%U"WX+LGrcU.IuM>PfPku@\\5=kVY"G#@dmH4E#c,[Ge^NTECmFKq.LFeO8]N2Z?[(b"jh&*c7g(J+rg$_hgSrFa+^>@G;iT4/r%*QeHCdrZ=&'cm<O=DP_j$WHm!dG)4:Tfi#ADu&FUr8Xh7rDbXBm7H]_a.g!cc#6sLEVPNuRnCP9O4A-jqW*.:'A<5$+(kZ8H+be'%\B2-C?U+:"Ns`;Mp"TKa4!s;XDi?iO+"X0OgWpkZM@;Fi!loK+%fahRRmMVQCP6-q:MuJLN\p`Cn@[>d=LhQ&e]5ZohsC@pLk3<E%%7$]FrL89Q[@?c.i?@HDjM%U&Okbo,N*E?l>BSnI2l'duV<?$6]mY]N6N6iZZF.*r>Pa\6f/p>-8osT#f*N+f71pD1?L>j@[V?K5%jrQ,s[+kOJ^QnnnOn?6]JJhU/0s]Z]6*K+uD:[dT45ZKPd76-BF0=9"lT]:qa_8+)e9`su_d+E:%i>!9C]<ncSh$@$]o>*4g39pA%>(+*?`2rf6EQ2a?c%"iHTrd(7FWB`#XU>=":AmcKYI7aR$*)B8*>EkVk'jWe_G9:?Ap4b&Z@D]UNHT*@f'%X9r2\B`'G=Cu+4#]i%c&L;j:2QpPHlP-s)9:52kX>ff[QGE#3S)TY!F0pLEe"sXXL0EMiBT',^XiF`7QHu.^Mq/c0:j3Vp'uC]HrCFSH#.INp"c_PaOSTu%HXIdTlF0PiSr1s<iq8D>rRXek=+6a(D09(K#JC.Y%8l2Y*o[up5LQU;h.gkMRi,HhK<,#&ri>ef?9YZO/%b\Ns/^G=DiYn8B\,K7%m=Tjp[."$fhsLIPnk/TdrUmo>3pS@9J]p-),<uq_eB;ehKLU=g+sd,2pUJu2rR$cupXegi^,7jpZaYD0?Zc5GiU4si]0FoX[QsK2%KD9)NjSu*8Id>=$?ZgJh04Q`Ff/VFOFa!brPjG$[_d!"\E,\?r69<DMNrSmfTTT#Y=j$aP[rd,kYMY]ds-Kq*I_4/*hbK(7Er(hT%\_cQW+bMDD#4_;To'pYt]+iqPC:^^Fh.QQ_7sk38[F*_mcN\I2s73=m1n@N*F'%*j.*^r.<kmgIG@*7'>@3u0X1uueTtgWnHZ@L]%fJ>JXYB/+:hh(TdkcK"<\rA'8df4IP0.cD']nDqgYJ)0cd!rWeoH16rdRH,\S-PTS3Zg4$R9KX"g:(A8TK3=kg6NYl:[-Ten%acc%>DH"3Nl305;f/_PfBh)^><<)WqTt+/#?I'glZMO*qg3Gd8`O`WZaCsis/1/;R*`%nmB(Tth2PS?Np)[$E'F#_0"FL9:URIZRQe$k%HFn=LG.#*:l1Jb-rsJ5F2`?\D\PqDc2?<'u_qNm3Y;7jPjgA0$l,k*N^Lh#[bs!&9fsf^;C!Z.V5!Y.VH5h@heW)9?beA]5SCqtn%!)pGl#$q,GZA&/CTCr05d5)i[Xlk-(i`bq\4aLW'l`G?22mA%ZTengdNTS6#"K:.(g?BXSH"a=\).-Tu-$&8GC/#2=^[*1\3,2;s%h6#ij0OYHZ-<KM_2P1trHS&*Pk42XO0C-5Sc"!*u`3(KGn+#KMbdKHcFT:M!9t7QKT(K^A^:=+:8OkE0G.4g,>jVBrX6SM<CSs2S%qu0/MCpsr="mL,K>QUOOqOSa3X1<`F3#:PUp?K7/K9I-SA5AY7^>3UCXEF53*Rpj^+<*E*ZWl1M[FPnud+`Hh2KHmdIZDOKrO(J:%XmOa?`7`^cCY7#l1)etLD6qcYYP7Qkp(f85&#eE.mF=D@Q2f_(B8;6?]5pg'P=)<lG&'g+%i:pLDUht'2%c2F=`";)2ek,8i;6g5%$'83-Bf'TW+hYFpHECK9B7GP7fD"ul9<60\s.HWVeNVboD!nd@G)'Sl]K2Otpcqm8fc7/l[9l#Jr<@2uoE_UlFCm:IUYFKaA/7Di%fNo$kc-rofATR/DJuHu75PS.\"o%+NSTbP7e5FR5R[mM`]ALn?0B.`Epc\'YTH]pil<:[)1BN<[\hYgP^>;#dX4:&N9q!#6O1?eu%j\9e:5u_J!lWN*UFS8^ahX(<j*ptohd04`cG6DV9AZsD5A,j4']>q&0NPS[\#5GOL9tB9,6K/,<rp"U?SOGS7SF"3\IE6neDSC2M%RiRo;pJ5p%Ne6B"Q/3>)s$mG;nV/(`oOg<s8&%6SQg?h^A$45HXOhe;V5Ks]F0VbZ&`EsNT$J#EF/M&cafPFALE;u3OLI"+DJm/Z%BCfpVS]%#DghWN;$]EuCr!XL71sN!66D:tK,.jIW+rl7!$Z"K%46sNO<]brkQ=jNQ`4rGr;[\',r?o$p]&W]^2V89.d$a%Ai*"KV%<2)O(L)a[npP>=9<2"4&?ld>Bg$QJkZHaf!7qfsT>c/YN5!+-=Vsd!PL6+Ac5Y$7e-[d*m'uNgXP#93h'WTSJS->;Bg-C-?VMBnn%e(F#V&M"\)k;i"R3Q^-GOX0qU3C+'K+X<n6HfR()?1:W1g;=A^G$CH<B(nF+n&W^CQi1tNG:5>>B>o\:@6OgINT&,B,M_>o1+0hP%\B3rB,LUmT,\HJ?iC#P@2]IOo`+_X;#MU(AkdNu^?!Pr\/I[B[2NKO1mpg-o3pZ_aMV@R::(1,?*G5.`B>((r%S,It*ap=1@(t1C%>j#-(*^5PEU1g_L#T4WVpRY[d0KJaecIL\B[l5A=/'k*TB=mn^[Vp$M??ii)iPrgdKiWVJs)Ret_,>F?f'KI7GG"YW[oWL<qII$]%cj7ffp.65_hHqairPbsu>;qG_ZaW.n?_<n"Z*us0s4H0J)kXgWEhV7VoVa^`p#*g3m#5kc0!t'%D(JFX?emb$e]PlnR4g*DO5C<5%n+RU4I[p0$Vf'`GFB8*(=mp3'hQ8CN/2-kCDs"gCYJ(kn?ed1RXe.T*jcDC<lPCZBQs3d^If8:u8,M-=3'6_Kq;^hDrTTlp`>dhB%b7jV/2TNfDXQ;*UpktU`hh:h!D#<V%c2$b`_KL0B%Y<Z`Q,SJ\q*$l]n*1i48!^g&n7h2e8,dYmqr5MQLDT*Nin)@pX&G@.FU`9T%)[Bm5l0H8uA#W>>Qrr#7T5W'"NOp^)o1s:PR@IQmqJ(;LH#W`MlUR;MD`8U-DtmCLEbTT+>A#k5c$JT^/q:F^qXeH2^--r6l;Vuu%O+Y!.eLTO^rbJjL+)SWpn`oi6O0`o>NN5.)GFmU()0Z"hdgG'rrhc1N2BJ=/Dn!qu`5^f3rRV+ZE4$S?\74K!CZ/l2cIY1h1GO$I%3St=mGB=)Y<lSbg*mS#:ZZIFWqf4;"5?+!;L5!pNadLa"+)]d)9-61\h;*)(d,"!`,ok$^l:pq\(N?rIs6WuIPu7/G`_'Z'?@&o%%ZT`GAq824i/nV*P_^CJ]/n<q\qSe5]s.6m84Hoe&o4I6lG$hbaoL0"kn*ED-h7(Aah7H<=m,G^\4*d>TG@k`2I!tjJ-TP;5N;%/&%bd0j<q+$&@HlOcS9\aoM:/0'Co"t=aB7a<?O*eTe?[Ze8XY#!m>hm!fq"mt&IeE8Z[JoG[H9V?%e_IKbq<*[*X0(ish`ouO)B5=C%n('ZQ0],qNn!?5-ak-.`mG,&0`NO2D0=8Go2fEX&N,L:$CgK%%^q3r?Ge)3>c50Qsml[1g[W;?:o&@':`sS;"TG@4_oQtr60.-/$%Y(,%4h5t.7p@_\YinW7_hSJ`a*J*P_*;Tp1[X4]4e>h;oB+)DXnYPt!j'26#be:u)q2\ZK'U\\OZb.^=EW*o<Hma>'H<,eE4*n.0%K2Be&\%R8V.*5dbiUggFrnQ[,L);^&\Tdqoo#0\Nl+(88mCg2Vq9t9Tj=iQnK9rRJ4E4s$g;8%+o%VURb4P69;rn(nl[ZjR/o:SU%BB<%Y>`l-o]!eiN]sJl!2dX1f$h*JPUM')o62U>KYqOs@R_#bq:-+R1Xnd3MCj^-fai:,QR(I'PIc]CpP?,ku,Q7&F$_)0NQ>C!u%q^9E=VtYT7g@P%*ji-f(S\0=LbLG2>E*ooO`ocj?@N"=/WFrD+E2Lm4f/G\Rils-'fB9pB2Kn6;]<=;;CYNb\b7K^^#6X<Eh<6u/%b?(RXLUib@gK3LCO&tJEad$_>QIcm2Y<Jmq[@M02JkN<)53S2LRGdVU27G][Flt=^r0PBF^\qd4eTbU(E5*oE0@rCpj4F"S$n9nl%&]cN@h`HmVRJCb7H`cCtqds;j[_I<;]flc:i?]_eg(`iX9+uN`^DV'\,JOR4:\;Mi/?cU1m.^9do(L!"9qg4!9BEfHBRcCRrUOVF%s-i)abg&=QR$K@3?4.KM\MA*[++0Ya4]q<n?eJTGQo+0RFrRonk\6%5c^XB8mQFe,%H2=*;Xp^[@CCDCZ*P_U[4u#N2B-`6Y=J'L%,l-'H]@'`P*GmT:oDCpe)=:SQ+$Q:K>3LJ2<W7+m4kFWCfDQ"t*$&j6=o-s$.KB7UW*OH,4e6/g4EMJ^LU6=u*Z\^#nUiJ9IG7lJ%X3i5%E?%EuJ6?u`*"e+?2SZ8/GqeZDZf(/E+;ug,kbK^b))a5kp[[;"aOcK!cXs!%X*aDE+6H$Yalt0:c1[hjo3qh*$IAHJTCteN%1cL)hb]<KO:-RC(4bt?'0UTgc\DIOW/2VSNE46@U6f?=?_`nlCLcLjup_nUcQh)1'GG,!$O-kD[oI%uekOJ_n3!Cnj?W\3%eIY`@%",fBOQBQiqHR0s6i#(-'3hH[Wil9'21B7Xk41]5'-I4Ufip^\P/u`a__qd\D@Q^4Rm9SS8iFs;r<J;G_eF!BpPHINlOSB5#?kc0m%eQ4mMr;O$q4qh9/o!c3<+c[!AIe\n/_l\WB$OqA,H+S_HD_gIh<^#dKM]9MkFJi4?3%Xo3T3H[@G^"H,C3*)prCoAr0[eaZnB.ku%jY'Edh-.O3I9O-_d9OF$qqQYcZ:HU+he(bNHF:0-qXf&VWU]BQ'kLr$i^DIHraU(_<:$!"6Zkk?Z,6nX(V7+6FmYcXIa9*Bqd[_-%%V].dV:jI%-dom*_9;S2NurkD+5P<AkN:RCh8O$5X.Quh,/L^#GKf#K-E0)^H<R[?cV/aimMu2uk/D*X6j\:T\(%pmG&tC/@AcTe%7Phfn[Fi.+oO'(O5uN#NOG8;-;V3)]fneoO.R])-$JdVJQTLZdSfJd.Xd@A23]E\Dr*p6&&kPZjp%&'2U7@`@21_Rq+"AZ$:ee7F%2o*chCe[pl6b;`aDaOs[[\p_Jneo(Ys-DcA[u]Z#`X^ra*:!PUc%:gp?_;Z6a5Z.TlDdNsD12E&m"aou0?-6M-k7&Sm[J.sS47W5%UA`p5nathYYG",_RqNQ;>R(5`mXt#?]s9Qjm+#T3GIa9%SAU'Y8?#F1hQ<gDK*uXJ^0PT(T_(H,5*Z).0=:Oknc$#fVHg;@1GEQ#%jBjilp\-;CV_i\R5<V-qaq'`$RB&qgma&#DB.)g,Xm`.Wo%l/aqs$MjRd/W"V?#qO5==\En%W.3f`'pJ/QqT+ci)>m3%`mUQFfB]%mE).P,0r4Hi.Ba9@dn+2S%WlOpqm*bMd%,^m/k?#k`Cg0bqIBor@pGP,qOQBGl?(]ddD\A8irVfU12]5b;VZ(crbQMs5Nk@F*m<1%cI9GQK6Q?s0:o>\L9BA4iQYGj@GJCkKPq+]c\n(%l1Y)SB?fk,RIdOC1A@uDH#.kYP0:2fme//\lcGWCSD\R1n+IQ2G72B%>'N"^%p9VI.#P7q&^+_KPm9_hp"s6%RV;%'/#!]3bn'eC!l=*CFB"Jj$4]oFIm=lEtog\SC)]QE+SR*p%J%g)7)`r2K1[CZVBA^@h]Q.e7%Ej[4;07>.<O&5"L#)idcMiYI$^F5*_a-[6-GI?VlrZ3!EI(.^.F'$E`@>?l/rjnfNnatQtZ4Pet;$B%N$a'A."foMi#E^*o^+UHD%nJka3aKR<M#j:X5?>&[Z4DqLK/JBd"Q+MP5h=KLYj*,*&O7CNUV]1O546]3Vq'I_OSpmkF>^13ZRF,!s_VJo`"K;"[c(4E+o?3D2%L=:e<2s8rE09$CO\kB;<Cg:V#qC6r!qYY(*K.MK;_X.$m:D3hj[6;;eTt8e9EIgN(#bJB1[!qUpl`^dbMZ&+;Hfip1>9YMM2c'-J%&+a]+).qZ%F6V/[p!4hOg]kUJ]XH=W/H2%.'Bt44^Gf#$JNUWX1codIeWn+/409%bjm0D)F"a[\hjSo&2RtC5Ac2PJ0`TC6F@Sb7%ALMb?/jB3;EZN$:96Lp44L9@^ioAaXbH&gY03rk4\1-p9Do^$[(*?7US"O^V\GML9[`6&g:8EfW2_V@PT.m5\-Mhb4C%?SX3Qg2t%<dUJ%5L$pVh!5D]?BHJh\kr'#Q:9i'0A!)!%fLMB6LjQ_rL#ddJA9N!qrI)*k,m4b(JdGp].pe-q!PukPI>Y5?TC,)If!X<_]Pe!%H@7q=D;9S`Us&/fVeb1'8%\G9lZR(.7d%Gsb#k+CeT1KGrLMg<X6B;c:LT8ldA;9M,u:sLOL\H+]ta&YiUsl/\<4H@h$Y;mD#XE3%%XIdFLif#>.]*B^Dt_2jkl<a&%&W-85-CnIbMODc/@JX&Tb*_)n^F<BMjpbS3X`'JQV0V\s(lTIm_d=A3.u>RdQQnQp<o/LRqD*A%Xej(E\**KT-1ALPR>KVb<&t"RSt-622kDX>VCslphD]d_NkdH!m9X'3^AmHR>\EreFb/1RA/U1rr:?!.ial!]*faXMh)gl`#sm"K%\YZ^EOBth$r4KQ8@UD+#P)?p+#FC_mk!!Z70?e=IHuSnAGrV..I[`F0bM;coZ`ht%esC"bHR#R'8pom_m&`4kXkC59rCjianQD1E%[Hfq*_4p,IkM<+pH&"nX\_hkA1O1q7Ij"[Nqto.:"pa7C:bM.Q9`IG`j6Mu`f:-O\,@fW5*ZZe,^YG3F^%M$`[h7S(rbJXI\@fG8%>q^irqL-YlaQ`.!pH&NWX6lD2bth^CTPjU'E'/AgYk[/*rr1o:p#W$<CR<(K#qish5/6^UDL!4/?<e3<p$FmfV;#TKkaW_2;/P^_%ioXEGPeCOIBB07\h#I02rqQ&<a0XSpT6cEbSaQ+V#b-K_DI%m5kO%iWjukZ95$<AdE"HE5<=s$Bo%U@M_Ns)f([p6%Di0@5.^d)N%?GGA>%"!>Hio.lr.$oF67_E#Cc?t5DE%j:O!;g(DGCAIS/A&CKLfAKrleF9PmmPF7pMG*9mbXef]@[pPjBiib8"`uNhfrMaIH?gX%b,NE75UakH=kJQ=rNpCm:?4t_QWJ?s)We-G4>hQS"CPN+$`d'hjUC!/TBj^<:7OG)5lPd$d1?s84V_21SkM3(Uha$aSEm$n6@1k^%+!LX!pg3UR'!L]J(&$MT$ULdG`DY`%[p5GOYkPigq*kSj?)<@!s4qL\Nl*DR9\t'erm;!nK^4#UDhm#h<$egpZ\!6A>X&5%G^4(>%F/D%Ol)4pJab+BJI(R)djbNt&`3Bo_]tUj[bZl0Ri:Dbir\2s,2rU%3"D:F`pTh-R>J0LmqaOpjqK=PpodG=K/6A,U(TWUka^"$^%0?'7gNX?`_+1tjPU3q</kK4N:gV6cV=m,tpi/(:sV.h!Zb]8S7EVn#/jKknN!l.T1VtI\!7'>M/b;/\[oLUj"N=Y0#1HX&l^,@Hn%+!#1ja7g'Fq"qqWV=]HMAb,9gq_TRY67oI=3tj9M]n;(1oOdF;XdL`ep,ajUDVqOK7TSp0n9/S]0&GLS_=]t!4Rm+Mon%IsZ[]T4%lcP7Sq;o$3RI>U^TbIg%I':p[9J$e;iqhN_#YQ;VIK-&@5\.Q'EI7;Mff_rR44b9eNdNR#$km?p`iJPTXbsd)]"C/;,tParYdSO0%r`3!E#m]Yp:BZ+&=HQ*cT$4=nR$DaG]"U6e$^#M0EH(I>>b%7s#_B3@JmQ<SG+8+&gVu_UqUNX<1#,uXYd"(7j!$=]MmG2mgo&-3%O(U'TSAdu_'7"E)IV!6ep;^5YG(pfsKt[#i+]SI>2rV<:HZLjpjdSV*\GgYps4Z4cMiSr?62O=HHRBET^=WA[qloei@!?ElH7muU%ga]@_1H,gCBN98k?XFEtkkb&8RH6oX`W:K+OJY39b&hGa.i$C69\u0H(DdrN+:J"T&6:_N1EqhI?2cZ<1iD1(fP%ABZM!P0kM&pI%mJbl7Dg1;JHLjL>Sp#DUC&MH8bK#6P6sEomDD\bJA'OTf7M!*rTd2d\c'qXMjPXB>bjDQOm13mbTb0NB*V.".(lLc!^)#]#dt%Mg%h7/QS(C.ib(!#1TXh>'W6eJ5RZX6dEk<!SlR4JC#05lM4m1oM>`QZfE&Xt2"21Ka\D=Mr<An0uC]>sMan]!qTGGQU4iE[H06pH9N%s)>8s[j8i?Ht2Ttis0OiDS6,lm%G`=\1#Rpq;HMq:$8QjY;_f^N\<&^:2B+Cg[/'/E2MK_d/?W1lIgrrRDQ$Vs7+"3Q`p("GEs/t%[;u8g[;2nKqs_QM2"@?lkSM,1T.F=aFM@[%C$K!ZReLaUeB$m`52Fk[>?fmt?@@<.^NW1iisAScB$B60#,>G<,PPdJf!d`!+'\1d%N?Hq_*3/\KF*<!hKR9u.4hEGVpoqI$jp9-`m#+(\/PeL#O)cl!hr!XVm/N.f]GaV$(A,pnBmjit*)adD1V\_'n6gkQlb8)6IA0F>%3jL7o%bk6+/_.U`]eR!Cn&"\X0,#EZ0#JchO"P5a_r^R3rqu$S_e0Kd<k$r">*loZQa;JrW0XF%ULHkk?c9Tm1;P'-[ef:?V2sdH%/Lo64ae^AK8T*AF%CniAqb)p\%qMV?=8"8E=%aVfVl_nP,Kn4N^b.kMBl7e"dDHn&^UsHG^*@W9MbNk-:N"ch]=lod6s`+0i_X>=%)0YFVm=)OYd6\<hlC2NVrb9o^oV3-hNhV[]5%9-!YmAiH1Dsf:rTmM[e_,!a%Pj:1BhlH<XX.2@5>k3l=>gQ)5<Db+CihAuEVa>n%.>&TmLXiPfL=I@6`XKY:S-&2#1^0QIiK.i-@.;(am*KATFmS6ea)2HaHq$`c8R\5u46t@K7D7N[+&3A0.CL&K]1q@D1binBa75th%\c8e>[k=mH-'nqo&>E@sSJ%DQ]#`>eES7P0ea*ce+b/:P^Y=mr[g.b_./52,&D:'k@F7/X"R1pjdWp_miTO%9,^8qnSGAB]%V#hY%KT@A#.!BXD+!]sRY%OGTWpOta"o=<5LqK)"I]I\0!Y:8M`:e8LefI!&oi?"/Nc]lJAb1q;Hgbh=I%+G4<a99YF*`6[=mErhE->lJ%oqU>=_Ul\X+7(r`.A6i+q*dU(qn;]Fc7%Mt,_XXN*kcX(@;c&n?2$7#3ZH?;m^\[g[rKud>,Z2_nYCfmg["!>VZ9iqj@Ss:#pu3b%Csm6tH:g^mlnqt*jCEq+:+[_(9XdO@-r90]l_jZOZ9%C+*DV(+)R]#^nkBB2aj&M;XoD[2m'co3q4@q>I(h[7,*(!r3!-0'G<-C<%3`Lm&'P@o!Ut`/\AhOp731YtD0]De[64YGaP4`'Sj@klW%#EAF<n=X]eE8BkF6F<uDmnJm`hbc17t^&p4VWi7"XrRpTYp)?IcH[,%h2UYo(Qqu#oGf<%g_=A*h<Fp"p,XW7#JE\!:FF"?ldk^-(mk-t3Keu;Ej,F2^"r%9F_8BQ:Z(2]A$:;a?D7(,m-^L#\^IC"3/?i*%qiarnfD!RF6gf0@g<"Z0]-n#1)N@1hI8k>Q%:.X[8b)9_SC1Ea]@Z>UcU`Rr=!?F.q1m):.=CcH5)jGmmu/l\$X9CJngAYINmuTC%CJn]2XcI)/T-\*>`AnENmYu&IXM,qWiuI(%E#Ij&4Cho6pDmDV8U"cf[l;"J5+T?#T=sZ)BD47:L2Qknli#R^;Vp`r^23GfB)@fk%g_YeZ1?PQAG+2]Ye7:SI;e)37H:C-X.(cC<eM[l6l5nE8O7_2a`g]$6;kSe=boRK_G@bWDK/mqY_nAgHrpm8+l#Y@!O^?k=,5B9:%U=+,K"C_8)I[T4*PG:pjY@0Z?E':n40X4QS7%O,L+g'u6*BSV-;lC$bm%8=Xm'(L!A!obHllYR+^&H_$/ZO:DIj1diL,`K,&2e_4%Cpq/dRg6Qb;c$'_AG*<j:+*6&?0f,7SQ#,qg$:2CTWp9s2Ost=klA\8:b$#8eb&-Km7hY-[,-+),j7H><o6#drl;G#TCtcIfoAUL%,N@Vlf$Q-Khq7c%1kBGpZ.%IqlYVCd&9Ig<[?KqEQbt$:cWgEa[\#LjS'?E&O=+>5n+Z\0_2!sIBo]1B_cJE"5I,h&TT229`Ng@k%B&kO#4Co:+c'B[TVl5ko>Zi/<@+Ui4FCfZT'a&e1e09>6E)EuimJC&_.MN4Pnb$Y$AGO!FU5%8]hYoBU0R!C[(9lG@%qI_i!fq#Z%7<4YWOd0D7'&M)VhO%-u+3Bs,k^t&AHi^$:e&I`[Z!aG'AR]LhXRssr<RP?S/"*EU\5)`>7,BZ(GopTPQ*8l@P#&`k29($2p4\iO%.Q^qId^"r3@`p`JXfn!FPk>#`24]+paX:XKlV?/5f[AA$fq\HUrXPdk<JIe;Q-tbkWt^M?K;Maq2T8"K+:ZVQlA:7+.fLIM:DlgF%[/,XR1)cVV_O:=-Q2K*3!\=0hYrcZ=6.W@r<]QRMI^56,/mKRW318$,6]<d:jekfb!k4X%:7):T]*6'I8r5&I0o`98P4iBnDN&GT%!A'6;A5%rEo-ZP'^g@'R]]&)2H!;fDF;;$6En[0M*M?P8QBRTJ!+b07MBZNH3:0Ed'?X+unF+MFq'Jk'ae2"_'tJuDbAIZWJ.*)i%Ts/L+a@li.,!L$fKXu/=ERHU[[&(3q<D?69KHf]t>8tp#._rkrZ]lKFE&`/HIDYk77#=f--&irT!n<+bG[S(0,HEG&A5g?3_K6Np%kMIH)a(Pa4c=9`t6:mB?&sq`$O@,=9--*D^DZVUd5-DC0fkA/k8\j=8_TB>V\-\<g2C'q3bP9I%Klp756ZQ`4M/ul]-ts7R;_Zm&%THQSiKUWAlU>X&n%S4lO0t";a-?;)iTX\7KlAf9S:uqJRYuc<NkO$8kL"?mn^)?fDk^r0$7,_IF5o&LSG0jbLU4F;CHr@jXWRQ[\%EC[lf;&LRa/]p\j4W)r[Ta=1B"'6`K`.VVDQnLU[=Qi.Al%=HGj[SPV$$&ql+:+>h+iq@:rt``GJ>+[s2u27m7tT]rghlkD?kZY/%-K-E]U*rT('bLpk+ajtS8kGtCr+%ti/qJ;\$Rpgn%>?A`75u5WTEGMCd\'AZV^r9tfj%4d->P0Xb=re$(dt%!1fTiF?r<.j4\dd-%Ra=iKJU`9>/s/m5fgI$T'[fn$3<]8`F,K2PpTa<m&0s49"9-!_Qd*Xk#i)r1e_:rDTh`,5ps"B$#MEaP'JF%4?7rl`q0"(i!\%E4%OH6BFEdOTJk_(jY?LFdLn=Br#pV^SQZ=FUB,ue1fK_-gC^1W.)*q-!W;?\&M!D2s7?_t+u8;U#=JD?E#&S3D\P]&nL>(uA\/p!aX%)Wh^;3KdJ[\5qNt^`;$SRA-9hoT`Dh'ca`8*+cq]Peb%+;'ph-*J7VW=.Td*M2?d72]ACZ45a=0o4?UKP0FBe5r[j@)\NF',)n$:%!N!ULnc3)M-jaVjBYNE6JAD&81$"L"3A?t?&X3ZK6$'iB!aA@@WDZ%MmL:m+iW7PdUP)Nl6l5Z]XML&^b=@9XkYkMZ8ONo;lI&KH%:dA7m-Yli"7mTm<RtQ-`:UC09&eUN=%1,O#8]+aY[3Qs4afUN7\KSm`)e9!b'"B$o2+B76ZE+&i6R7c,-fCloOW2>q_nc91;?#<<%<]FBdE:JWOH22H81.>T'U"iPe?(u]L?=/;T7@QA<_)Q"=Xu)88_LNgi;jHj&/c)tT=aXq*RNeWQSRm_FfH7,VU-dg)5&m[>B^+hm%bRMJj=b=J$@S6thQN0Wn"ZM,6HUrZ9!0;X]nh5COVTXM-P^?Xpfdgr6"i10J=9;Sap`(3*Z'HkY=C:8^TbRJV:^I0>(FVli=\f<X%GB-/T^VSM20RsLY!NH2p6V'kU)(pVb3<nkXH8U?E%*35F;.]"Q/EJcm$fW:"-u2L!i_JnYY9IibjT<4Jia<+NLE_%0:dgMgFqIr&%!LuFC\"iEr/cl@t5XQtDP3"uQPo3!nGJn&gU*-41_U?4I"93IS"el-^ga'j^=cUPV8nV/>&J<0:/"&qbXcs$A306Np\ruY=6Fa:R%1)Q;98t"iZ'RhKij^\I(7?QtK)S,W)T`&miQ+@,Z>US=CAsoG-IT1@h_OXbBYHg-1@1Q62XXGkhaFXY/>EtD+Scgg>"A&T0[\?SB%9rZ;)#p9b1j44r;gI/u:C`m=kTR+=MU00hPUP^>k#)"iOSs3JXLeK+j"fs!UqGt^K>"2+7jOjZ+J^=4lgNFc9eW.K)#>kEo`BW/A%$IUI2[Xn)6$*0;oQQWOLnKsKH^C45Q(NNG?[D7+3LpM;>RSRWbIOYKZj_qtHUI(A>HT3$E6kt-%8Y?o@Je>)9&scc5*,/i#f0OqM%@'tA]3g(h`#!N2R;G6NcdK/DQq-OCATHHF]Tc('+_a.HNs%c#a#Qc;YhNe95::De?WuVA[YGE#/hNB/EHK.K_TZIH@nh-&E#;W*j%5#duITaIWmS7<eK')0XIdLcdUkQD0dYWF01AQc"*=@%B;(DVo?*uQ3&DI(8K0quiS4B+R3`=t$]QpTnS-m2>5M`I&-1V%?(8(G.]%<09t;DWo\YI$o[\W>qt[%oe!.'t<;=K'nt9=<@)V,QU]TA)fr`i@Bqc":sHS.dnf01^a:OdH`_Nie[n'"55^U3\Z?)O<t?TcpK>a%`;utFV3ZHN[pN"Y7k2_(0RtR1-D-+g0lm5'A0,q`UdMp;$8]LEpf7A1+t(i+:dR"IqR:.M&W0"r3,@3?KC2F.Kb/+IED*5_i1/0/%\S5IE1!';sGn`kU:lumA2;98j:1/'T.7@j4'rB.19<Zp8ZLeJC'6k68o/Mg<O5F@(M-rK'd':s/+UM1plQZ*m7H,#PDV`)X+=("[%K.KLuL'g>!Yn1J0!A#hM)O5!;5%9T'lWOt1EHF8i_J3ZW\1GmHLYdDAaW;k2&-]cPd8Eg.QpoA$5@G0mkO[=/#;W:B"CAGP3Aj_<%OUZ&e0+&[!c;mJi.$&%_JVt2C(BqVSP\!ZDQRJn7/NUR=44997gR27;YR_&.#JPQ$U)9O/QI6n2&OcJRYRt'sZCn7kNnhq@TL]FG%LTjth"%_@iE[0F4+$g07=V;R0:E2>",rA$k3ECBW9^OD2:>jDQXqQc5@S?e78%._7R'$jbaF3,q)HisMA4f0+9A7LXER6R0/IKZN%7*%e=g]VGe/E@knQr)s/[U;Lg`((U4(/[=\.O"c3h#pHN`=g0Z=e3P)&Bkp*'Tq)mQA=3qMjDpnk@EQtBSsQYT@T$S(J&fqZ:mqX%!@UA\+0jPGcd+He#<OS#UX9LgQ6-\>+VUSo"&X^Y61)YGb_=g[,*,NR8\g_9!`RGRjIcRo#f3#8b7Q.'"dBm5&TZ$Gs)OnZS9_uH%K[;@](?>c%nY/=E5nn,*Ig>YR?ls._cH1cpk)'?J#_B9k&=Ecf*o@5AajHl_[":Y1"+sO8L4m1a*jQ@9BHcXt(_rg]!/\*D;Em&V%fG$amQ3Lc<dSS;fM<0p'b=YY]S._2'0J-t+kT&6ZKA\-u4CmRXq*sL4,u?lcOWPSSR/!4_p`ONr,.n1[^u$2VFGN19-tDqu<6EM>%:^V3[2m?c]Rj;[h5q(8mgesAGR3roi)Chr7/'n@p!5;(W!#R[goc-]3*J5]dF;:\WaW07b7%Oj.iWLLogB,,]G'M.hFLdPEIlf;f%5Cs'R1V-$VWfZ<fK>;^_#V.SBon@XR&p@mkO$KRM<&'Mj-hn?ol)>g+mP+3i15$tk@*g$Z3VuX5_FJWf8P=q3V&dW(Cm"lJ*3>Zd%:c'=9$%r[g0=W>VTd];A\AmeH#0(B0N,HM58h;oUO9k^jf!,@*0m^i[_b/m.$0Z6YKlf`^p9=!-"2d?H@R&1!nNX;>?UqZhcT'@s%3B_*Vf/P+f;Ztd0\G84&&UG#n9l,?$!Y#an$62fQQG8Wf5+J^]Lkrr$M5m^8Lt(S'0J.0')E`g+A1pC&!lD3=,8'P.asW8S+Hli1%5q'Nm"jKFuO?UPP.N"Y?>"2q7!dBQ/1,b(_TJ&du[GtPd`#9cf"P=#3R6(7!K$J$C<hN\\_4Z@F"HSLo9c`(Mp7Za=9u;Z!Rq1-B%SO=7?c[<JrmMd*5j!1U[W<Z`si?'hWa;\NY-)=QD8o;@,E/=RB&`Ns.8idF2F1EN9ihYa4TMtB!fkhn%F9R%\"KWtJ6\E1CYUs6R%6%^V]5BMLPLO>PArnkaV=bEdi#>4T[,r.cu`qtDn%O[r62$^%UKj7S<p"bFQ,1g0I&b[ZEbD.C$\7M.`NShSJ>'Z&Z9>fFD(q>K[%PCYeDW8n/H'\f8aau#+lMgT#&c:\_/p`12+=peBtKpAUbMDMZE@i3Km3MK>.IlS?!@=2W.&iBC+9#5BI%Dp6g@_W4U+KS/%^8W-.%asf^fgt0aDrtudPpJ6l@!iSI?!)MK\Rs]&)Q7NleCkSAf[!:e$OI(SR%-(_K$C!DmQEaEe2dX=%5`@S;a@(*T4SSuhW$,q,oH8D%%qKEhDM#IgR9eHDaNiqq3L8ZMbU,lM1_%qa]#mbOd/-hUL9`]\m_/V:77l1i>$=*d2."Y(`E7_u9:<3S3.R>'a>='kM>=;;14:)C6%k5pt]$_EC*=V"A,']/t@"s,40?FZ5SX-BXcj5>OGgo=!C=bQECs%\M6SXdU&]e0/rk5^:NYT7OVe9W/<Rc'07>:%H_9)q.k9?\u^%;/$E>-(0hH8pcEAC_a:M9!Y;a'hJgm/c8;`4;#2W1o9pPmLmg;^bl7b4@YnDb`'1F8Vi-C6NQd(DbY1C@U^mrQcFC0@"Jr<[R:Os%ho2>4UI4@_<eQIu)(YYJ!gDO:pgE[T=i#Ln0iQ@.1q*U>$99HXKdJI+$,'l6_Ep24L!8J6,>_@!\fs`h,0%EejWM/BYOJb9P+WrC%6_n$J&hWQLEf>`\)uNTgQ==X^9*CHA/Ad,C,9:(QD[]R_V3JoJfla-U$0F@*/IEL)AYgeX-3[EW]Hfd[$iko1]Q.f_b90?l*aVe\%Bf,8_=pbC6J0>cnM\sRibTq_]S57i]hP$ct/K?>d[V1SH(:?r18\era/!s_oM!S[a`!']@<9I\3N=_W<0!N"!i5spE#'N"Z4sFP`%(r^01"`NpU,oZ)]Q]gO'TRa$b:aR$<@$PrI>Nt>'iaC(7\l@mgT*bPgg?,@_6dEeiZ>r]E6lK*Hc#)cj,mMo.k]3kg8$X;I#b<(2%=Vt'YXOJfsPf9/MTI^Zpj%6-M,-9GVllcZ>-OqXQE'U@qd]Nr4'hlS7St+96\cjjaU.WQp8d#H_A\j!iqM(b)L1%bNRteNl9/Nl9%'m^`#@7,`c>7bVO!b[5F3bTQh;M+s%@uI_.R#hWf6"CP\khKYU#!bhU?:.jD<ZJ(=-9!?)=pJT&2&M!m3Q?V8d'=j@6?U,\-[8lb%2F,KTa]NDQ#oH<o[n=tE.^]Eb%[n1sXp9(GTL\4f^)br:gs\UGhur`n]o5gJ4f,t`Zh/:%Z[fD#E[7:kTR_BC-mE0-G'=pt^[p-r%RL($D,#Ht^m(p09IVDHZ`.>j`^4fm6Y@6<U9*@UO9.\UsL3&=\k6&nge$E[\%pDBQ#]+L8YS!]LYp68t,h'dYPD*8hi?C!EjC^sq%k<6Ag;a7fbfeEC;eRFeT@lVst>q!,BnFh<@QK/obW)p-R%=O"KU-9s<L5qK=1lI4o[K])V>4`0;Q>]KpUPIT)GZCj,724G]8JpMP%6;*)j$hk2P**sYYZ5"FuOWa-ZK<roiMEnlf&d1B`3UmHla:"-ad)o0rMCdKmg'21"N\D0D[R:HNe4t#F%$m4MRF8^f_+RrXN7qTh%$_e1_j#@IGhtVYOc;;V5n\<R&L!YWtiNs%P9G!X,A+#ThD6\C5T]Ha>&M8P>?LA^Y'r^8Vi!>\O1+bVkeGh*g5]piJ_6WPVih@20%C(c,M$G@'m>uau\4CX['K/-E9oF[D5HV..'V1bf2KBVT1Hi&fkQ31\H<3Ad-GrWhI>,>.<%mD*q4CV_ufhNiA5R@BfdFbMk')#bs%Z6JRBmXepl^bJ7NK$Y+M6OS4hKI'IGJGTB>Ni-I(?7b*RU(UIa!!A03Mb?ZSe]JD6aHV!S&Q*L\@0d6E4>eg+T]E$!&k_hY5S2@4%_30?;7)lK.YK7U>qE"nFhtS+@N.K0f=D3D.dmjCd'1/<Gd*Wl)=91W);o!sS#cn#5PptYe=*^@F'c8!g9`ST-$&X;^?nJLGEe#ju%Y_uQlaFRN@*Qj#C_RGdA"Gl;1(NB!N),`*i\_WD[@]T\ag;(?$NR^AiKog'QEtXgbFF1do<Kc`:V\,Ut:e]]h&KqhCT`nj/X:2QS%@D)h"(,QU2JLM-_\A0%dOK?@MKb,E_8'=X9M<!^haa0!-O@?H?['j'_g56$e8JNc?j8s[,41;r^)4%QpRW[Si6ct@NV1N4aoN?TJ%;")'>A"p:T^%'rlZ,WeU&!o2N01]r2Xt68Md'UlG;f4&CO9;`";;WVP,/F]c9T"fU-"rera<"M7@ks-SX]Bpd'te"\WHe5:+?<qb%M)o\A01LkTZ!r9NYGb"*6kH_%WMLoglX4+'!;S_]Q/D?>jm"44!W$JK]A[Tca9ThS*2*5P[4W/Y&_ok=/CI/uV:d:dp#tDIW97D.%q8a;,+sTC+3X3!tTIQZM%RI\s=]&o*"<9pHj"DNu6[ULoOT6UVqK<6oT2_JF[\tI36kI9I_>9P"Lid)A)X5S]'e7e.c1LaG@#&;d%kdQ)k*.uB%I"$%O6`M><REhXG.1Ft`!kP3[^>Di]qe3cu.5SUDS2)>s`1[kb*R8r#+6@Kgq&hMnER_k7!"r>J1;Q/k6k]Ns%0<Q5%JB\9M0rSJm]d=+p"UT>l%=6r\LY\u+MqNG$<.Xt*I].gM^5KFm^1n#P+h&T@'?HRkmGhKFe]ApPP!klom>AT?8_PB3/Ti<P'SV.d%$ZFr9<t$]:;L([LF-0GS"n;qBnjN]Pd+f.2VR7Gi:kWMW,mKG;[(s(L0K-#\##P\`dYs;iGZSjJU;]qS(+9@UU&nlJ<#Lq*bb(jH%!<B$36WtJX+a>8gjEC1<l3Yh4K1-u.U1@2R'Gaq]97[(Q,C]g-[u(f=8-h4PLfd.]5`eKuHNgW;ginL/*6$(XqZ\4KNsH23Ak-hE%5'"/M.n!Ct+s\QgBJK.J$'L5+JV3L6fHG7>`*:E%]20nF0g()M!DP^8h<tc?&pB85*&6SHX:!%Or/Yh$likg4WXkUeMt<>I6kQTm%olG3]6Uud:'g0H(@&0K3]d.9=+9dP2`Y5b>;_lTTcmFA^]@&4%Y"EqFNihnsL8e#S$JnZ'KRJV<M=r%<Qq2i4BM0gS%^09@^g/Nl%fd[Pfe*"3k_k%.RCKqsYKJG;O]UhlTA7r9&6G67s>S`&2PCUDHU%4A!!t93u$/>^e%/o3b@0s(KP=5P:qp=t_ChNe#.K";cc`*?)%mO&'dgeYlgr,`MBq87Z+dk&B?"*-tV1cifoe=MXrWc>(%,pp-R_1ZfnCnXh1ZqP[?KOIP)XOU,f)6]KU<E.;DL);`E:3f)A"L_i1%;'Gd85BH[hGIaP,)BVm#?O=qT(0(p*&1D$*6!GIo)/RI4A:_hC6=Y8U9+e?KiMQu3]2W)@MufBH"rAJH0FHW%``<R?9HoB_L,>kT%!U_UH$@3Y"_\;;M8MLnn#q<k?_f-:2=O_!u`[liai&1r9?Q'!lGWNb`7^CX1%ok6O2Bb5@%:Hk_#XPp3\FlAQ]"jB$LhLHO.h1U`%Ikht7@?kg)6jM\bNs--KJIqr+][R+%D/>j]aqaD=)1L)Ed,8#gM2h:>bE!'PNDhD1iK.92O>A!\(6^j1L`A2=1sG.a#rbDo!P3l'%"it.DTKjJHIL2)YN9<-]Hjir?,I?5<DXBPbblh*iPR<PO88d"3#-9GmE`Jg!K==6*;-7XoR;<eE-G+JhR1V1`'"J;*(UDGeDSe`Z%7$`YI?q$hXBCsC=V79YJFb7Zb_3K^$$RAK+.2-H^_!a[%:JdsO3JQ0@3&;17+;AK!M)>;7mM2h",0_9M+Yoc48NI.m/)Y2.6s@Q/%<ZrGC2@*`,Yc%m>d?Lm=Rfnm^J,k;+cQhN\?a7I:aT,9%U-tB$EFE8]WAk0HC*W;\R&GS%"E/ZuY)W((h;7[?bM:cACEpSK:^IoW%fEW%&/.aa>Z&aZi//B.TL'A6=/K.6b'.%U+K\7OX$s>b#`b2hB&OH`&IjBio$u4%s<W\[,gC+&^kR_SK$AnDGUBgF,M#cUJ,R70)%ng"9*cE`%rCV[,*Jr0r:WWX!gXH5o0g_Cl8_8p#BW*t#P&>=p\0D'8jMuc?WM#BV4J?"QokUANsXWleU1EPdd&[k2spC!@3U*>XH%kfR-u/4]mam)_Z!.O'jD,Ol4I*,L3B&WC*pLi`+_%>t]a+td[[gan%#;)8@N*ei'&J:s`,P.+C]&`\iaN7@V*_MVtC]Rt`eL(\4\%15H3DWp(XE0W/t+g'ItZU_*.KX(<KjM$(j^k7<2Y39O;HU8_*$&RP-BT)Z&?qrQMe]^JFu56>Ba*B'1ZoSYa%!jF8W^cU_Hnr-NL%r"?=;#\X<YE'KFuL((nOBMQ5p!?k8t_>rtKa,7sT)e`]KRXfL.a"@Q.REUlV21u":+I2\XJgonSj[s.ZQ/GDNT_SSa"(67Z&',G.%C;?M%X$oT#A,roU6Y&Id%gm/iW(=dYl352%g.^Q?I#0$DmfA`1*"6csj=]B!MI_YhJrMCXS4B*!^knf<"7dEC`trb7"aLgQ2NYX$%<1Y0TBLEsYR'URKKX=&h1&hpsJ=&Ss=J!cGeK1<J#\%P5QH7H-S#JqRC!WK*rP\gAe-_tNVMU<sLE]e8U91/sC29TH8+=JR`Ms34%-CZPBU@]3<cl3Td3*m!40/1#UQ_cH=>!A$4TFO\V/(9VUHE[$&@F?T_N+ddUL;'@uBtSD;3Xn[anQOA)#UP8?VueE/9I7g6n'J_L%/c))"<ND8K>%oY0:suqk1HPf%?d?>&WXUfljJm8!J:-i&jQ%#435/oi:'J;NhhW,"fMe"mj-nm_RhBe_'1*^4Nfa\>0UQl?$"Ku8%XR`;F"]<*7,(OT+qoB8S_*RVrb#MEdct%ZLdSrN8Acm]?Bb8^$fjJ6_K"tT&@4X`hA=aP.#-8RF%^p-C4n,.Eq;#"&hh)2+,A"QM%6ls8d.)u>=_Iud!:p=P64J^G7$3Eg?"d8fac?p&O^\%))?U[^6FNt'<g`2ND83T\#(Xd<M#D%(5(+d4/oXId<$You"PLU]X1.%*>%KeQ?GZGp!@3-.95_a#8WZHDX0gEDslp2#OXR)b-k/^S)(VnbY+=@)`o%7V9RToB6c_W,5>;MeqT87<NB(@jd'ek@Vf)PE-4'rqmB%TXU%$5/Hrt(NG.c"[O=O/<\>A[,hP5%s7um"$%VD,eu7*&C=+VGQcO2S:P^K-nk]<;csj8+bVP5b4p?K.][9P/qZ-K"gu1nk;K9L%TVK:p7Be#0:B%C=BBV>]gsP'E4QT-83W!MsP^&9lKa+I4corGEg:f>f'J^_1CGO2V'oVk8lb!G<q%6aFI4U#_K]5(hkJS9T!IQ1S%?=X0XM_Z,"%<]q9K(920L.RkUHu`PnFdhrD#\q+VdKK[R=:eaqgK0gNLak@d"PSs`_"rb4[t%:L3[QsfjCj!=09Cse)?=?G%V.Il%XE,d$`X]LA&TM\@o.uF9Ri$1S)r+,K"X*dYn5s-@A:":l?7cL@<"M)#(4,X;M)H.H@AGU$_oio8GuA7tKj8L&AIRp,S%m$/&_^0[%^'!0?#Tp?QXXJ5_UBlLaFilWT/-p$HdD)*`O2^64-Nj[inHKhp7J;Fdq?"?=_DhbeIt73'=!(=*TmZ7+1.0k(%,\'q*cY5RL5E2?%MH^7I_bc$9(Y'+eR[?BT.B/6Rifnu/@7LL:OJ3GCVXctb!#:-LMnEa^3).>7dHO.2d6j^/RPi#1X%e;Q\W<ZjTX,1MZltRg7I0j)%#7[@PP?qn%O@,FDZLp,F8j"%"RjC?7%uF!.$uf&F1.;pLOG/]qCll%YRBh^(lO-N'bb4tJHE_*DV[9UQcIG+sJ+<JjCi.7W*@uRf%4I/8NGu/TPi/Q?!6Tn5@\Wq!0MQ4gR(g@\J?h9!^/;)qWI[KG[#-YSmYqUUoO5u1IU,MX=>ER<ji2?1N/eg=JVbt'V"jA[\2F>C0%[1nis71e"1.MO(Ye-`C&K0(hZGp5>I[Mc2VQ8bfh(/RXYVV4\"=/Au)<FljFObCB"kd"];qZjVKj:A<H>l@Y^LS.n=/oAHl,m^B,%40%OW1n,:^+%nGNU!Q`C#*=B8,3c'@61NYu/V&?uLgE@>8sT&N/0so+LEMb2b97`@)V[TELb2IgAu:_&2T)TRZP_ki10*Fd2+?f9%R93<o7.i!r1n;tDH3CX.%tpsTO@na<FMCG:H>,Y#A(57MBF#0W@^]k4E>DC@\2lK+,\T0Ih2.lk@9EPM@ulUQbT`@A2\,:-6G9qn%4s@8T]pu:5!Q1,u-WPWB"E"Lj':%,d<fb=5<Y]BpH$uo#9`TU',6QM](oi.uUB!`ZodI5'[jkBWrJ<q2<BII*3cKeC*>fZOUoR.M%Ddc_&78eu7bI6K[AYL8cGOQ3(fV!s1)JOZG"9>f'c#eOW?ATc(fO3I!;egO_GlIb6".`8P$>XkM75I1L#YdKu/g2X)HmnY_GU/*m%ikaga+E,E")WNTm"2^1WB/rC"V&!JDn<tt#/"3Ac+pSu.+r6o+f4_(U[2hh:WD>C""JhT'j'42hR5C/h<M4l=>4HYJ##oN*$\;$h%WP+8q+='TJ]egJZ#SA[l=6<:\'+r:(%"\Na8r]PT;mMEMmaot'JN^"$a?/P'o0;3Qo06CTjra6V+o*e=[`+n*TC]R[i(<S\rn3H'%C/bdqI"DP9I(&pQT:E;,@=3i6Knp0b@Dg<(=]`UV(.8/&cuNHlKbFas&0>5dO"chBRQAk:!.u*s2X'2/fGk<UM?G6$>j..qdKr.B%@kD/S6Uhqsc%AH>[agKKU*l$-S+CDHh*suB?6-)&OtQX%&U=X1^R"41hk()+?s'Bb!YhUUL!,V_KD8'iJCQ1/0EqM%qGF5N,Wih=%C^Zq3UqoL&:_^;@)%R-OLM>,9K<0aoYeVA\Oar_A<mGI0V]gI)0KMZl-^@e:Sj<b6CAB+(P%4HYTIC.1))[Em>$t/o]5W2^d7Hc[%@=^u%R;aEbZ%]Z8@mR%6#KncT3o#joQ8!EZB"]uYaJ])jYR1hISB=,87V7Fk'8/\on@;[ZkHe,+l8[7U%@\JU#!-m/RAAr6)"s#F%.Oc`SI\Y0U-H7SZb1s6G,"u>4=sKsc\fiWS?L'!`T$tJW!)kiBjY7)VAj#\uV6aX4W"5u=R<dfoCU4l/0S:Fl&h,_)JC41m1=q5:%LfL:lb@s]g;M/*p)t#EB[32=^EGVTABYYE%%1d)88p+00eNh0DoNEM%&`[!4Y[<n9m&<B<T@#9FM44-K1le20RGlr"*!mi3MoQXE%jm_O5>3'YlpI$<Q#ukSnD%U!,*QkW$':_K\/Q9$0TZ%`#d2YNg)O"DNA]0.B$BQT37.h0K%1`KO<D_k/7I<d.WFrV7Q9[/CTj0m-%V8EiW+JXK>D[_LsBZ:la)"G\WI9"Y?$C5F$\O8'2*9s1k>"'h]0T1h9!J:Grg/;P/RKc":]1Q:$:AV;qH;%k#I\1X6@Om<n&L8Rk%S(pn&NGLk;393>4CNRc7Jb?cU4LCC$A=PtL^(I)Eb1A0I;A'V1Ut)1h)@)B/#D>-]Ekeu13)dId63^)UCO/Kb/rWnG$ck@/N=b>1%jq]:@+tK6;(=pbA3KqN#KoT.m-Ao]WOOQ93R0r<2DSl"H"rWUnG+a0aOU.dSN7B^BQ3gh&<WRi+RS[b8)AK(/M\J-\+*BKZ2_1P<%"IE2HpD2t6/X<S5)uN3lQ(jX'ML(Dq!R?*M"RZBP(o(53W,,8M3U19)PEX\5H@7SZcTD[hag#_<Hf7J36WC/-al^;+bmEN:7D^WX%CfS2N+_I4W;UVr&KMls2Eu)h_`ClMmKp#T=0pm)^UTuDj13LK@]U#gGr60XBX[0\%=21S_T4NeYnhdI<)XoVlOO55a=MF,h_<Q60%#/pV9,ou<U)\RYY<2AsqYo;=-:kth'd)[*7erTG8UkAW&bQO=IBRqX+?;dbMLF++.^I1[qBL/J(ne)-XYtCtBn&ce7Kh+&96Pe&%%49N&U>DgkoOWtX"%5GhL:7c).Id11'b9^8-M0-Nu*f=!T#clrD#[BQa_GCkHW]969N^RkBerCcd0:"C$QJ<`/<M^.mS?1:6C7@';%1T?1`:sPk>W?pgJ%Igp%2#qmG$i"Np;:QFB+<jgNVXbNO5/Krn\C@]A:muj&ah<'_g>_\"(."gI2593s@GXm<ZUOUgZkQ's_F%>%%,SHh@etS21bP5&A!+FRD<8[f(l*Ve6aZ*@$r>JaX$p#.8RoL;7W@WQ3\n-mT776=_r/l\sJ5&^4B1pH##c2$(RJTs&A1ZefRhUo[%PGQdG&C0NNOm[sQW<`^2!)^%8@WS1L$<;/;@.K`<>eFb2\:64cPmFD2_KF;fMNW*lS8oA\rBt@Ge0LkuTERill&cPc=s4r(W$]SD%9@I;U];J`#$d9GT+-#F@HN[nT-n\c%j,%c!K3kJd8olCeUN!&M(9:hNjekX+N*;.("V;LXVEQR`cK+e#"]-hOMBQhaI&W1S</l:!%Q_e/[i\@\8HJ;(aktT9cLSCU=33fD;JiIVo>?gW##fMq[HpqbuLLq)RMhA<?Z,JKg!gPkTME2;`o<i%9#3m$jVgPTjTnUoB+Km)=%Rng^sAT9t<TKL8"I?o2H@@Lcp&t_QG.aBE*c\nK`(l?c[)EDf-MD7G<oh;Cp!@?48@.K5<*<@:[m)S8\Oe!7id[$WWJo&9g4YF*f%)"s,XUEZPK7_qJHE\s8,k?6o%C)&R&<f]h*$L:^hr*=D1Pp(l-&9^Z=nEs5SAMm`NGI^\1_Ck?b&Qm('.`"XV/<m%9VC@``cmKjU%>"s8,f9.)@:BmIsK2i)@3BIS6?Z4<c:4;Z.f;0\'LL&1TI4Si&NXq)GUcUK=JUV(:\C`J0)IblP-?mpJ:an%/jK$pB;@_K^$E_J7%OmuK;$In-s(8iWLLflr5WYVolK$G\>be1ZnKekTV/Z!o-Cp[=b-o<`P>U<u2KiK'W2tbZP2*KFia;;O3"'pS@WDNSfBcbu"N*33\%E\6LmE;VS:8!^4U@JW7b'8FQu2_,tR_6R$RSfc,bX!OifVB>,oZH3*X-DKj08--R8:)C0=<S9$8P=ejV7;>=ji?_?56,H7@l8Jm(%Y\A,NC&>1K*qWq]CZ&'9Ek*KLguA3Z.Wm5h'NaG(Qn2&o`&TQ)cBc#n%Y\W8ZH$d`".f1s/`dmGYV\D#Xjt13gX)%_]0Mu[3]+`%%abXd,W[I77;KAR.nD5*K+Quu^)$)E?QOBKCg9BG!(>=YqZ&le#Um.q%d/'M?F[:pg)W+>r0L7^<e21D56frM8qDi6K7FXMRm(C,;%epMQ_Vrt<mQ*U:=-3;TrTI:3M$VN7-#T,'"<nL2;oM1;UTUo>IHB?=Jn.p9ld_/#_2[)nJp``PHkZ7s_hJ/:K_*]lk_5MWb?mIQI%4.ii2>imE4\JVONb?BTc.s8.4[UY'f0gn3b2?"t'f:j%aKH8@S2%=VT://_a.l7X?emk?V4_W5:>.kTA\:f?mOMJ2YHm9biTS=(.%BRtSqO&:H9U7lORoa6O.M2#NSLL]s^RSp1N,$g`m$7:a.A'$B2l3!K6`Elro08!oap_"D!iER[f:jAXgV0Vja*<OuIV7X7Rch*&5%]RN@D`@F-nfK`)=-,PPJe,3sB;5FDJ=#="\)feeLd@UkP*5lEYFGP=nc`?AUJ`SM(YPE\ckm8ED7-6.+"M\cUQg"+%Y3a031oQRU%p%YJL5n(QPL+F#,Wa'WK:\=0c0DUJ9Fuat,Zs`)%hCd5?EdT25XrNCN.(!U:^rZ6opc;3IeV5)<U,2rp5m87m31Bb4kQit$/YW8h%3K<NNKi[di)VKQK&UeL&dJd1KL5""kLO>d#L=.<#p*ghiA+<`QdoVBXQ4YeG8o'^!Oqg0\Zn;ICnhs](*?Xk\7@)=A<1lS8N3X?n%7gj-qEKN\(@GgdD^(Z9$"ZG:I-mC%?[gP%1QdfAmSd>%$9;tu@:c38!41'm&2OF&K/LW#-GQoTP",a>gq8(a5ZCKHh7hPNmMaYqt%=6]%5)Q[KS0/]$;_$2dEq3kcl(Y`-<dBZa^JH]jA/N&gFPR%>e.Wdko.I$Qu#pVPlAkTO:ZW8O40LUL>MiOV4>Bs6!0,sADaer>m%<'k$C&]`&Ja786B#Y(+/+o!GbqreF,iFe`1%d+Lb"tCqUJO8<,?6@*D5Y?l(M4h@a'nL4HM+MA:'7sbW59h2J=H+$#S-6RDF<ZdY%,o"\ee#tHBU;@2.)NALE8[)1P=kprWI`lL)J_=c6J0O#u$YCB'5#TVo5DOmoqB#/9E6!2[PuNQ1'_o[G@,*Gt)+4_O&TGiEN0.^=%%M#ur7_L_aC(>kN5aCM:]r6ic+g$I\"ZF3SJ0s"Md/Yloqlg)6!dg#L!rm75q5e>1mkRtK2hFh(6a(Nm.6N9a_&7VU%Q=.jVC6*j%huchoG+"sj^m5Vie6jG,X#Wk$9J3![W5#H6G:DhI`ZeVG&A_B/>WC"(1-kDnY>M<"`#&5HUEX4`C@l%4bu>IH;s<UuQ7r7++tMNl%8dKkSW"D=dS.C3dk(ul]7h)km!`S1d:V=,96BFH":3o4J<E/146]j$a(7J86[*kkFi'Gfr_[=h>ck57<]6J`IYt>)grik`dBL<+f%&"4(,$KjUY/GT8Y<X[rGcYl!6B1+YXTnpPZYRh/$oK^<,QkCH=_N$>kTA`,V*hF0HP)&4j&e&+JJbQY`I)UbWPd)Ju4$YHtGf+"j%)`W#Ar!F2YOMla*,!VcdU-8oX%LO=hiu?m@p%iQj0c699G?pcYd3=IAU]lb(C;IRdT$Vsh%.Ap:.,gBGW*Cu4^WMh2nVMn;Pn,m@%I!*VHq?ES-j_L<qa:T=?HM,Wa7F,m7jZcb$3KGhQ2R#Y.)d'G5%uD$m2q?>`jQZ0p-j;5h^0h`O?=ZqU!oM!c4=mEPh=\!?Gs7f;%bG_Vs_WP+a\EsK_1nl68=:cHgI"DZ-A;KZu&&92Plr.]/rE$11?qnb=0?cmtJj<k%^Td&l&Wcu]7&3R3qOfhp8*E$k"iL*:ZdFQU%q4';6>Jk)H*UU]pjss_1#l>%XAeRQ61dRi9WJp\_j3+lE&-d__+3,9nBITWVZ-Y:?*N1+13Acur.=6j2:IO\cOt9Xn+GQ%4o!!m8%CboOXBTBtX:``I2<9n<b7ZIb!dou#4H?4q%^=)<<7"!l5W[UR[.hCPOg*NB@1M)$b?.`?!4..NuqBDV!<@p>Q(2-Op8*L2S^?G:l%/ZIB!$m'tsq[F/L?e+)0c7kna;oMig49Ysm$DWiR(KPc.(q2A;:/$3":+-/LJ^ZQ-$P54gXh3Mq&aC=<Vq'j@]YDRtKtZ&"!kNo,%n@]E+U.<SnpI00<X[V>\:uK-(046(4j;Umr"MSdkPU[eHba8/YVAs!#;m+WT6okZl'pue`!5o..(?2)/^_PGLe,.%gJHC2:h%W8T%`%X*,p@tuRMksAaJEcupO@SYk_fL)!H34)K&>Y@7(D-gf=fSUb$)aS0$#^n>apJa^KFkk[#e@':hZai<.`Mo@`[(871Q@d38QP(j%7DD-^-%(s(nsMDKKqm-Xk6\Y'>Ej5perX-%KqQp39jf5C2U/P*YgfUncR2T+Q4XL7U@N"#Ij%YE1>7>`D=S]M.$/ga12/Wqim.28%B2g"n>NYeY/u8SnTMQ`!q-bSA;Sh89nR5q*p*nq1%n\&X.IYp-;@D4:M(OkXgnX*)O!=GIeh4b7q>mc-19Dt^6W/Gu*k!AIdT4/%%3qoBM:I:*&%SI-Sblgf69u?3C,QU\)\jGdC!E)QuSh#jMTGf0P(1M-olCK1I-TitpX"(lD%)f54+o+\>R\BAEA$9"V<#Q*iHsrRr%Am4^F<U^@6lZij&-2`%a<ko+LiFRI$fY@ptcBC#+`QMU'Kp@0f2G4\spbM%mNX0qVBO6spo*Zh.&HNb_Z<jq7^1N%QJpJ^k=VcqF%>sPOB"A[6i!ZJ!;AsduZW@PXkCbS9mnk@0j'@K<k\s`asJVK=@.jKZrBFi..&aYAMb'_JsC'\R*5X!14'YpC=K@Ah"gS>ekp*AF6%1k>_nTgaFk/I`6[=<nCB%EkM%g(i23._dBf_hW/M3&?GNaMm8>,th-hUii]a6jA4r'RV4@TCU7\(m,7^QMi!HHrR*)1F55?m!,S7%Q.d3Q14lJ)1roBj9*G#7nWuOo^8*T=cnQit`[8Z!$Qc7LjS\SXBGi*]>S,V:J\^aqHAgK"I/"Y#Kp7$/B`j$-;Y)IhMDc1ka:0BO%+>UE:"!;#BK;ir(k;5!+b%W"5Tb7Nf!`F(G2'?Uca($!K=:q@9T\k9oo!N2Q`)'r`;6`K\?W+='X=WmRM.UU*9P,UrN$7DU5ZnG5%6ek:aWC0Q/k[V%0^k<'V'hgGrb8/J.l51T13!Sg.$5Z=:[Z5Ag::"\.X-X"94N#6VnWl2\._%&"oqS-eRarB"%"H.56Oo,?D="Ag%hAZf%#X.a36&/jL<0$<BYRq([#./_@KfN!(Pl%IuB.X#WBOV9?#`C.qZcda$Tuo#pK0pGG[Agf.[&`?,O9s>mVB-kD)PdPi8r:(a%LLBUUSW@D#(hHX(E8Va'TgT?9T<j!?S9ii!IC=\oPqI'EY]Yru[hPR16KG/r65C0A@"FRH*4Csu,-3F/`Y-a,d)UbRPY;S7/g(Af%YTpIXU6ib@63o,AH#YkA#qs`"[Yn_X.W00RpD.3^T>SN9_:U;!qOj02PS?'IQ4Ur-%)bIq?76P-pM7$B1c_Ac^j#pXNS;WR7nZmj%;h<C"bRDC.+b)kY+&.JOYfHk<BX$uZY^oT+_tD%q;bi!DHG%&'!,+n+*Fh)Pk9Ao]j9)27aYB_2C']`BX!#UF(3me'8\BQeCUWeR%YG<*E-jB^]).!eB+2eN(]5I;8*uo*KhWOG3,q>la%7ieM7]#5Vb+t<:RRcrRN$NY!WCeet6kXaBMd!!.FpHeAoV#n'7Ku=L,KcDL%>bD1ji\3!q-!bI\-Na,f!Ugl.ro7bA^[6.EV%;M5YiZ#mGP$V4I]?pU9K?Z`7g-*Vl\HsdKFg?B1%7G(A@4#,nlUK%FD.@@WTlB(%U3pSlJIO:h^l)4?Me#[aO*VGuIJ$DW*iFQ8_Gbi7T2,HEg`'86Wa)0[Xu6&3&F?+m8-Pp9YmpZOY_SGIUDc6R:eZ']Oc)](;EMrX%$kF'cN+%2<G<H6Z8X$S5`55X$Ic=kmLji`^+_lfVkG)R!)j3LOZ%HJ^6tA[OB<=.bNslfRU^d>`X?U$lE8e'H,R@js_giZ#%Wcm!%b8_nL,!&_Qr'JZb9J<)p'Oi>9Xc\3^JgKXL0oD_l/Ss#",ca;*q=F>D`M4bc0IHUke8fp_S0c<f$M%uP-!7lm>q&U5eg']90uc;/%dP,EbFt04BT"F?]4@3)9HXZ`/<_<+^U:hG*.,`=B_F/5h&C^r-.RZ-kUH"&ZC^bI(4G[)HW3up&61=tS3RoJuni$SC#>T8<g]kkV%.-:dcP:$f%/dg^50=Xs(W+Ooo_(u+'^>STHD@HP^%iNANA12_6->E^T._dKm>QMKO7aF.)5^6cH;/7Q35cK5n;FO*[+VGr&P9R$u%1Z&c4#1K$:V-9ggb625Abbfnt\(!SfZE4&&C72(iWM[NNW'>>X0E]D`qf?F?KKN"pon_E'2jK(&@k!QA+O1t]pMYEi*D=%kfS2Mg%g[3?S`gS:amXp%JB+[s:Y%/$V44t;Qg!6RdNo:r045baqXAZl_<3C%uWADLkcm]NRhkgP?+M5HV$sqRM^<$$:$W!C1>u\AMgC?Y'%^7\S*i2e>nGnc/<Q`%G*O,lP8UQN76i:KKE"":=**Y,UPn@C7DBcZ1lN-Z,d+XY"DK84$dTK>3;TRDD*U%fKs$iC&_<Q%)oXLM<K%8jjnAWdqC%a*.'$di+./!PBDtPTG-?#S/9"Pq8.+Qj7b7^do!oG\&/I*Kl#4JQl]g('DkMku0/kPnV&Ml!uK2#Vpse+rYQC>c;]J%OTB>&O?3sd')X/D6"tEB_.-XAl`ss=;OoPdp,fRDh\bL#A-rK,5R1,.H&#HYQJ+_3Ugoft:hi1FC&(d^&33fb:b-ukQoPoa6a0IC%Wc3Fg+q4";/ABIT[<O&''e@FUfe&*j19Y#i$Mp>'RX#?Cc_Eg+P2$DsEtAe8FVrbEOP!lk&+KZHqQ;$tX]QA\M@!r&3$pbcM',Wj%b8[I-7s=on*RrD*j]'Sb#6/n[;F9n0V%SZXWd(,%JH,OPW"#?F7RRY/QIJf`,RY;!e9F'qN:7H$:#mS+PZhJF/r$j2.N?mqObR-X%R5)_CHtbIX4&)&r-S&#X.mp$'M\1:UBn3K-qen?"2kW'=:+tS\"!PEQgn<uK,*3np>fc`q[SlXb0qZM[FF(C8@E:0+`Q6Rq(`g]*%![OL,&"7a4?s=sLBC(B%9GLKH,E*%-9u>=`NkH1-D,d0/['b6TX05n]V7<Ql2fSUnCb\V<NI8%&5d[]DjI-^t%VWpL&'.X7-6/I@%d)6<IRQ@\2CZZG)h(*/"F'::X_Xcm?nlIP=!4OHjcGo2-LS4-8+G<jQ=5f7`BiY/nftcF&<&J<0\7%rNFeflVXr12T/+Zu)W[gPl%?Bd!V@Hjo!Ln\=MUbS&KcUG115o&r\nF.Q@]#^#D%*m8)ko:e%DjX(bng@*^_eZHs+_J+k,kf'^>S,kTm-(@_;=[Sa$CZTAlM`8S%0FQC]$GI36"qdd<_Z0aA@C0LFO[E">P^S>'BbasOTs>1D.N#['MZkZF2AAV2>!es<,n##n@NYbk%I^9/KHh0/%.Q.i8qG/j[MiSc%GjkqI,&^YE.5>A]/0PEl_17M$EZ-tTlIdsO$B_KB\(0#h6/e_,#a8k.:bl!p?:l-PO?e?-SeTEtUZ$-G[o8U1`Z3OP^9l,\/h/_[%["JW1l_)62i9pHm10!8k-^Eh/\m.*#E\aJ5R#6F'NX5_4`:f9lBm'5O']]]lqRX"9N]Nt^i=YUtBEr+N@!_<s;k,E1-a9_G3!lp0%:b[OT2tSAM4HE!\!pg!\$&^AE'Ar9tTc]_P*RjZR,K.a*Vn5ds0W5$S[:,k/p&>T)J+fO;U_YjbKXpJ\F*(%>-)\]u%b-XNRe[=O%*"N'p)IN>mGXD$a*9E=FB,#d$J05r@j(Y:B0P'@>os,U1Me.hQj)8ll0PE4%#ne<)"Z-I8-f,8l(K"I/NFEqVqB1mJJ[,C^@=c;j%Ng>M#i^-$FPF+`'>V=fa4q-dB$AMn$ons&E&\F`d*t^-Lc_NprT?;pU@\8@)C(%bl!3ZV_C+6NaZ:9GA>$4Cpk_0/OlDMQ3K6g/Z%;Rslc1q;KKKlWU>_JE(OhtpCT*ATKT/=*-pOMHbo8<"!,Gj@&JWZVL79DD1kbYM%Se9OJfN^LZ>r5n.)3RsfgKn9+0eHOpYF=AU9%TaUCW/Y5WW"'#WrB,_pjAX-o(FJN`o7uK[=TL6,":R@nDfg`X&Kf4jV5D)S!%!>&p#&'cJJ_/YMY*>6f6Q>(ga-,D4I2EjEZ2%cP%CNUPd5F,m[a?i^H-s"M-M,:90d3ep"#O`&)?6Q6p>"WCe)jVR8V&U7*p+VC,8rW.h-@i,q/0,8$KJM;YDN9G1OtOn/YJQgtiBD7/%R/l\&+itC#U=aAJk^>157#"dHa=f/COFrl&Nd?ApTnQL;fuI!*15OTFUX7d!?@Ro/"&*^)%]*mm_?ZB/aHGnFD=kZ;r$A-i[!6FR%4q03:[B_cTf0Y;gY##-7hj'#p2^k*4@Qc\5,Qa[Y+Idp4GDt?9+f^qID$9oTR(%bH0S#;3cQXbNAJKdB4tq$cD8)h#Vohf(+h<:g%7Qr`eD[`^c%toZubm]'.)3i]@V\8Zep_h?m"-n9'1GJ(CE&s>!!nZn&()C'>>]:@=G*QA^s8Q$lk"9\?>E\+^j?"XC7#Tf;7VBn@%QgGD'C5AZ/1K9;)gJ<3h=s1**RoRN4WmDabKCJALF'Hqa8!SUtJEj?d=`T%aVZVUjg$0hK_ijd\mNl1(X_1aj6EAk6c7'39V`?4Y%i8#S\h_bkq\Ae$-?s"g24<LcE3GJ%ad1ER!GN?OUme[nMiY-iL@/'+tg8Y;[^(5p2f!HY6Ut8Aj8!u<]`?L3ff26:XV1e2"oN5;p%E]Xq@_aMN\(hfA"*a\h]:'VuUm%*-V^0?CVUgG'?FMZY;&pT!#4PPD;I"VNNZ]ge+XV@1(1f/aT;oPL4lfJ,YkN)b..3G(#;bL-Y%@ol^gpJpp/WqFH=E47(TM1&j+p@rY7r0tK)jP<ofP,<62;6tZ*Ei+M%*A2pfcSL!1A;lZFL1.s`2.?=&4FoPEF+T-&K0MQMA,rAU%"urX87D.+-2J,u#,rnP$KM_1iBj[K9*'&IG"YE4DhX!;0lknaJD>U)<#g;^;-=U^n$>fTAjP)4`!Bb('lSPX=#!Cqf?KW?me`D.$%hsLEcNi.h1iM,\#ZL(rBX:jgWr5pBQ/c2`/QorOl%f$IOn2$u7g59\f.ZH#EBaF>%*+>2C?Z(1s6(5bj!CEh$m]j$tC>$db0"62:%;)FY"bDLDK]#Hm`p``'5-f>&51YR8&NHp1o!tN2rAOiT3;B]er.M,7i1;\09,YE6>WTUnb4!iEH+GA+^F0]BMp,%pJjecdAAq=:o%T>46L)-]q")*dH?VD12`>M!A#GZ`%7dIpM?&JuP'Fu]K.';`J+jdQ3<q7`R3(R(!Q_KI>^O1[;F=E-/8ocoS7h'm*.__hM%3D\;E%MoU/tDCdm5$bcl.6+6!Fn$rRdCu^Z^r2t*!G>.)_pq)^WCPisK]J>pJ1..?"b]0QQg7CMsA@NX>A3b:irZ@R[MBY)DLNV3IF9>b_%pFN)[]0mGfa5l/!o<e->16&ojU"o%_=bK"uEi/HTXd@-7.8P5ImdQY#ZIO!b8LVNN$t5*&!!r^$Rimp:[\C&60\+Y/]3d__g*#>(%IBa18:7fmDaa*c.9`O6meEbE0/E:WM*Dm#IDXDa5!/#=?oRubG*%L,LI0;Ba;pakkA@^Kd>ptNUq;KS)VP,Imq)VDc\efBuP%gZI%a^3j>ES_f1J[$dhB4aT[/_QKF:=!@ZXd(;??tj?Id@GjAP*,&US2c%2r!W)A*p''gnU1.O;<%nNRWM7I+I%1D'$Qbt5Gk$p\F7^B%N,<dk66AuL?=dG<IPjd><(qeX-'Dnrgc`7]S#,bfUk6[\'["V>*c"U/-n`dq+3XAiY016>S9Y>H(N:'(/)hOJa.j"JE:\UF=$Agg%8l1Rc;I\g<%6Ynr!4]`76H76C+R.m(nPsDH\)"7-=*a0R\_eI>@aATt&DT?'SeQ!(R#h[<IKDsU$TfG*1PR$-M/\l-<!5rm1N6MV%>n\^O3sYWCD):6cg=H3&%\<@e%099^f$L%Djk+r6j`lj@;:_SD2&B3Xkhm3)Gf!KlTDN[KcY6c>8a,Se-FJg0CaZ$figZtn0Q96=%3r9r@QYVq32dm[&c$+&2e:Y<=gonlF9G2@=4P[:17`U^?c?7+)3anK=M=6q"QR1\MdUN%Vb77[*j4#j%[UNl#:J#DK!.+XPj>,Mm%O$d%f$uL)1Ir8-\3L4tC,.ut"l*5i;o@msa5Oego]l*0[S*I7?7ZSXANQL3-@cW4$I\u<[i>8kH]n#EH&Ts]#XmI1MX3?\L38+2Y%aO!cL]kiJ>`aor^9ZG8DbJ;<AL$VsF,ts0Id4F.W[%9FeK#,6ClF@k`8&llf*P7]/2S@Un,W8eO77JOhkco6N.eR,>fri5;[qIOT%4f;8[/b-V/,sSa2P6a_A?8l,,C`UcFNR`oI",MbOg;>>rG2l\:)YWYp7eNY]>@rb$!IAZP6MB^q&)^6!?@U!uq<"3s"#Z-ab(%D?%?I-*&U7\&Ej0q?P"6PE"T+Pm/#\ZD*pfg?\RtCQZ'%[1S9"=F!^Y%'>D`"3Q'&a_of[]Xj_\J"scB&tK:^f#ABjX:+7F4^H9-.9R%2#nESF=Gdj0MP_:N#YZ>j,7\VB9dBSUg^9?,V*WFbjfiGNO+e1k3&J?7HYL]L((q7W<p\WbbLOR1#&p+>6aXXjP7Oj&P6ID;CWDd%]9eoK`_3/4!k6J_WojlQ(M!DL3Gb[&&(o6Z?pN]HHBT('_6gC@G#@,P[K=]N^AY\#?duqZ?-sp,hlqGECi4*)l.Xu`C%KOFr(/H5%il^TKr`q)OTYZY3_UnMVndR2eh)m6'<laBQ:AE#3\s37!i.Q[h6+/.uK;D$;PeKIujbl<S\9&VL^qR[n:'r*";/joOs(*pB]i1>O%rT=nr8SXaKDImPlRf_1am9bE!4[RL&:qk)od]KMArUH>nGlh(7j>5lt6*kg6;p1.H#mV:!e$0&kd7iG1ABnpcE8*l.YBf;s(Ae@L%cL4L19.,.@;%(8e3q";,@6]='2;du#];ad?<K!4TX-3!9PQSs3NW4+kf`!A'lE!)+,e=1n[I:SPp6P\gF8oRQk8W"b_UYj9OUe*7%qL`Hp*(,h4Snkh5B?uX\CFEi9a'PCqP@7f!r=-;m$DAgaIK1_/gX#?ZVi0aRlAtt877>:lfqr:a?G2V\]iP!'A2HOa"E-^G*jDQ?%fM]VnKab:;%0KXc,jN[@laAh1%5$q#+C'Gl?%@U(AlUZf'7Y`>);N[#7/%!TV/BZ^0QO<i_LB>eO1R%2-BFdeG#"d2qc["kdYe%d%N@HW.;,V4E&="D*M?,s!D8G7i5eFNI$;$'Dd8C?`@Bj*)9T(Y7@^8L%md*-S)/Aa=baX6&2"Tr,(\;5C/jUto>0_^!19E#6G+l*G%d%@J5mk\stEW)Qe"-jP!6Vbj!Ta=d>.;IjfEip+UaFQ[1Vb9b!WO)`Q48\^WOYE9JCeu.s-E1mdrKfJ>dkt))/=-=#2+2c4hEO70%l7HF*BZYhFHn6n47C=M<(7fj2iNLLK^+%He8tAZ(bDhC3]h+./Da9IN+_hSf"DqZ+kqaX#_<"1t>FBiRQ3?un6jV6&)+hDt53k4]%1LcN5<qW@_3Q\Nid'""6GBYON7RW.(r%h#>p1r<:UK'`(:XD;W3Dq-0"mlDL#jJ&!l\+o`5G9k(YB?IKK-uaGTd4n>f6&7_r9&-U%*7X"$;fGTlo':_DO@n;@YNAV^chEh_hg5,]@GM/<a:,s.LFU:8"l!$tj-q5&IJgD..;']"N)A"lVFl)pkga9lBItM6h^N2dFf.H,%5&>YDf>!XcrX\mG&2\F?8CX2dKG&0_dp@/IBSjV3<EhG;fC"+[MsAI,@/3f)';TJ](CP@]**EOe4Hi;OF=TWF5\@q"**V'CDV;L4%QDrZlTa2<u"m^Bi:B;<ajh]Y"Vc,UQmu>b.<F3CaCKVa.o:iD_-sdWY%cX/1g]QtEO*gOrg'?1JN#9L#X@;=u&rAbDNM*dXF8#!m%R0"/rrjW1D'HG8`nQqGR$`WgqkEC\8L.CI\jAe1r,^"l2b51F*0Bl7JdeB1mhmSX!PE*eRl6ldF6+Z.=)Kb(o91iW+6;_D!)/*3+%A.AK?jmL#%&Pi[S<hL$6IHb(/cbFpOVk7KCEIr;dLZiL7Pl6]\!J#58CZ6';P7[WI>AA"M.Ps.!c`LhSW3V5R#g3h4#4155To>45%Cq)u&WQ[G;%tiFdl%gE)A$:'o\tp3L(",D>%27t['G7hd<cR\h\ID/k77,o="E.\U8kOFh*FRLl4mtr;6UtE5Tu!8OKjW*Yc5Xd_%q_Np`r(Mb97*J]T7F):j8PP\>5!N>f1b5(:oRu&T6Vb_nc_lg"eJB?WmV'e4`(j)#s3"L9o.?_ZO%S-#VU#KgNE1(b%lrdJ)f8UE%443\2NnhoU72%js;+40ZgcA>X@f6'Kp\X5F5KbN#;9AGdEbTi@!(fdD"&96.6m5DIq.AT9Y(COY_O9^q/])9(D0j,'4_Y3C_T_&s%*"S>KoKiba6I-3/OHRq[^jB]3\VLGRdM_FYo;#I7Q71-97un:/SpKt^%Y5$_oegtJdb_>nELMK;.4LY/?R9Cg>Ck:6?*;b$N/+\=%QEstX2kGgqUU>EuE>-qu6Z7&&?RI?XBb2+R"g&n&!HHkns)dP%iO!)UOLI:+1_e\%e&JRu]qV-<(%(>f'Ek&i,&36&UDt[a7IjFq%o'"u<(t.t>U`"'mPc?1tS7q*iV_Nalb/IN0$39,8)uXKAs3S+KT<sC[iXC#@-+XVl;!XqC$RT5<86^+'J437k8<'Qt?MmjN>4Rsj%-+F=9V!,fjDh]s6RQQdfViP$m"aO6C=$ACt?3$5ImPW?dXHK,&e+A1X=lT+OpY"';.+A5(TJf-2J8uW8MlFLR0SU=M>r^a"VZgOm%_Kr,1$^d]lr\!og2"0j?F$P[T^KP9b0b-b_f\K<)[pHb+KWN^+)PdnXnXDK1T?\B2=2j]Z;B"_Hm+X-PhhF@%d%?V/^<aIf&+b^8%XXN-;(pa>WEqp"MF@U_4<^W5l+1I6*$I0YM`5E5h,4rj"-uX6Jb0B#F]r6V?ANm)K!_+c@2OI"s^(Nt4"h:uG\30!YjXZT\^a\2\%88ceRiur?-?O'h_5t[b5ck"<NIWL'Us8#3qIgNXaQ>Wkr/_sYO3FMG,]hJ4m*_GSO8_@Z/<+lML/\;uDe$g(&##o0%/qDS<=<\P_%[Zj"aNhfJcjkB<0&c_PtThTHoiEIP2++]t>B9N>nnk9!F'?Au/pG-`<UPDaPfBq(RS)o9*\k-NA`si[Ei]n5q-3JrhCY.QU=&eS'%(!nN>O60DuD-Qed"nEL+-MXndrNJ$Pk*[5Qk:h^A4hJnHbjP%Caf>ER4d*-.'HD8C8W]-#-Cr4U.`jDdIKf()k</&:N7:O8[=Ur!%*Hm2o!4St#]2TC,hSPp6C/G>t"?e7O;3-$/"POdAin(V.R!`S6WphYV8GI+Eh&A`1Y9_oqXF*_e\.POt4qTb*.P2W]'!M8g?jbsg%:\,N]=trZ+)2QlUj$8#I%"C>4aNOKeN8n:%\4S&e(YSJIT&s,P7%.,,oL6A0L$XSL7OaRQRS$kP,5^T0j'p_Ci$c^1cmV\17:7R+%a8,"9J,eX1qD!WnmJT1(s(M"rXN18klZ)r0lVT:S)A;N7W0Ta7HA)0'd;9AP;GK]Nk4%NKZ'H5=$37qg9?=Eg'EM2^[?l%"="M$j%bU$f_e&'kBQQ=S3n?nE94Q2G@S5NR6J9/83ChErQX+W$0UX5*c_2u6G"Q'?Z#X"keG#a989[mBZQQ_\"b3003/5.HYVFc2>QPRN'%51AX?PL?(V1_:XLF]D-.O"d.+d[,qjq3c6*C%X!$csiZaBNfP+)bSFFX'OGZIT^s/:C1qX(q@qFYlP`f!]-I8!PR"t,#5ncJAX.c%%Y@DaZ2ihGD6`,Z"gH+h.7pb.AD,prXbtF:*XNi#btN<WdrG[J6dOX#J]k^_@oZjQ&d>mVT:m=oo\,?>$7CZ@TF6i!b!nZFA_m6\%O`n?D4:Ii0^9##5?un:PSr`5^m`[F&J.$(_cDCaegi-X*'Ab],=#9?"^.'RL6W0,2G,6i^`YQ/FMfV7<Us0`[a`rG5hSI,=i6II3%#t/9eaTmhTdrefU2?!Ii)0C/l66;Y"7Qm,WW?;69VZo%PHZ&g:Z(Z&1.f!KR3,FbmZiEZB_)7=.^1R*Di#5ig,9=%?F'P/i7a?(A%<1%nXL3^Q6&f('S6>4Z]f:AhhP%`t(e.@<4e53c$1*Ju,'<)b?3oI5<>!O1nB^!S'/VZHSp*F%1%pGh#f=dB_nMAs1V71NonAQ:i%?Ul0fk#D*ibq!(_)"fFEhLssZoW_UAYqWh4P.qi'/akRWQ[HNlrMfS=?gap>qa:0TWYt#95Q%8Td<tOQ*]6@6>&16-TS?^b;B2Pi%L;GHK[F]+!0Lmt;@"nd$)(7oT<FZ=MeYua'*IX-qg&W%Ud_DkBYE)X*gs^n-CJ]8bF@$I:-KSu>WJ&li4eU5FG0,]68kfYYREant%mX)<-(&>OX^"pR5s#<L`L@?I.1!&3-o?Q"eQUL`:XVK64rG(Q1;e']5$>IfaB<Lm9aRPMpTH):-<bF%c&L<PYW8oWsY^J(ue;4C/%!4%+,9/Gr']*]b00;MM@45VfgK76)=Y+8%#<@S"Q/\@V(ZsV#IK)Ih4L`mY436N"KocnQI8#A+`,P"qDU?BI(Jfur#+Vc3_2&/s+%ks&dOQ<alKYc:n.*DhV"KCWNU@nTfLDl2:lf:Yi/Hm"%7g"3_GBT:W#Mib8[Lq'^/ZeOS2V6\P@U6eGXA19eJc50!hNrF?Ik$L3n%=(D34rH0#U?L.C^X7#h6qc(r,00=]+p+Y?J&P#rY'!H&'%[`S$Rq1^eJ;lllbj63q?F@[krON/%65+5Qa+X$d")Yn/cp0=W:T0a0%.8@qY8H4VlTBLCn0&Jqn*]Ya=3)=([$faqKR)YerE^l$6b&^Q/&#tB!F7,#oUD^biOl!X.IKldp*O>#;B'5hW6HZDW6r#+5P1$R[%P6c==Ucm>c<'*s"9jF>;DO+.pdl/f>#k7:>I[Kt;JhaaoX.(_sV=6oSQ#\]tIuiT*oZ6F0$\Oem.$k$kJ]"&0DPYH64H6`"OILB\%"^sO><?SH+P"_5!J7tX-n,cH\='t8r,./obTuL&4&_Jcmf611Z[`)dr,M%h4Ct2@\+h@)i:VKZO/sT.<:XAm);LZF#)TaE<IZVPH%Pg)W:b)^SA6SosgAo1!kY0-F9L,FBn"b%Em5q*nQM\eS^N';XlH;L>$,T!+RUG?IhUVk%5?"1%R]rtfhL83HT>6:`Hp88)%a&_YE%X7%u4>sLRRhQp4oZ5>HfmL[`[MI>ok.1<G@J</QM&53P(@Yr\V@L%)!AN[k]]<[nuNW%rorD))S=qGEfZTK@l#,15rd+)TD<cAeD%_W=3=YJF(D,>+1)&%sj3@nRD85P!NL8Z14o-/2&_/&uO0YTV`aFV-d1:^DU3!+`A9"SN\$S+&g$V)eQKHbW.!6JrYgH_=*0M"mB@%1LE;l^TJB$dpQ%r7A,f3:GH@_;KIcSo>H[mRAJ%Z?i6?/+LB.joCM(8rTtCCZ0$lYl\e/1=6reQ.C0pG?Rg]4VBVRK_*0^C2FYZo%ZQD$;hq..h/1FR/N$_s9k;/!\_K\U0']pjjg]%!:Z`dDP'Ls^04qY=H1uI`%Rt[Y[+^p)`=Y\,k]jnVqM:^V*j4%jH1"aT`R_ZLb%SZ@We[rf?@==Mo.)jE@IRG^h<Pr]=3n.!/^XI+.RY^pldDpZ"3$8l1rp_(WY5;i2l2#B!%/'I,f2LYBn^XKKOKS!@]=(^iT?Tp5M%5i)rAB3J6'a$Br^_ZNL?hQO;Sl_?E%P7:7(JKcPpjPN0RHXi&/Ub9YlObPt*ApJ1P4`\W-dMYga5Jt0*/f6*%na?g92?&^[+W>W#%gjLW\<,4s'a<f_++D`ar0)88Md#2#6?]Dtt)W(calsqg1d;Cq\<+pKrR!N5&:VBj[mTIeYO*&`DPWIoGi"HIq.;r5aNn:6B`BUsN%I;-\>P[^,nlTH_n4S61Ane:Hn"8Q:_L%X:Bc]aF2o0s*LW?GUK?igWg>U2#5HOWDOa0LJce<XXVDUT8m[c$>$n=9c-fb=!a8#'X7%NQj2COp;hfB)I*`ZYf1-NoM<X3%6j*Q4se_cDX__mO'c5$tXYC->@*r!u!Y5[sP?g"SKuMrhd5Sf:^@DduG>A-3NMpKYiT6D%&:K%V9Pf`WBN=Hj!sHp(@`$rXZF#T=Z)fL\LGNgeemD73UU)[-NQ4f)T!=,Gu%75UurA7kIEn+=jQb\?XDZ6U^!2<P+oOALjCnKgs:cQ%4.TFKX?F1@_Z;LWX4*VjIbU'n$EfrV,m[%1S<ORKDk2N_l>;8J0a87D2OKrFH(mGN97^&Yk"N3g(9nE^nb:Uc^p%<&E,'p8,nFIi%\`Makcl-Z>I(_.dnKRbj#l3%$hZFGl$F3o8+<]'uf*rltE6L%1Bel%boK2<o5OHb.%c\4?3:+eH93Z=as3n7M?LL:aS]nB6g@Bk\%k-XI""7lPHU%f[4B2lL1<6LmArLS9V;f2foPVqFq4Kr6?#+3]8%[Ji!St#VH7LdT-2K,,8PrESB27!MhE&=e#ZaZ=,ZRrf"/B=q\%`/Nns;Q*ImW\GKS>h[+B!g'ufaNi(I!JK8+NmGc(H]>/Pbs%2eL(D&O7sm1bjc5Z0,3]@U_9;81mZ2kn;"rT1"BR8p/b>urp)o-I%bk&-F2t"<aCkkT"/KK-tl(*1M&7D9s6DW+j2,Km1m=K#oPQV]Z3-d/EBki@>S241B4Par7n2rWRP=j9LUcbpG]Ai9R!c=o$RN%N/%:0RA2O`7)D@3Sq!cAO<==%$(lO0fI/P[mbkEG"g>f/,WKL&kVS01YndSNVLBEQCg=5;dAa;PrFIn!PBDctVNkOHe^TW:h-_h:*+G%*RY"n)0Z<XDNj@TEGW8:)[NiA`-p<.3"5M6!(oXf+P3?"_)!U+:'g[Z2SmF$,)+>kM6gH^q%e6kCj>+[X9`S%A>ddZ&k24"KIXIV%mpCWDI6IqoCPA!Go'd!Lm8>b)4Go2!Ou<=nVAhr8I$mQegddX-Y<BYX33EmH>RjU5YR1SO3*RG/FM>/r;h7`Y"nDp`;0#a7UmDh+%>Yo->F_%=W,8$<S)W!"QY5f#I)H8+N=[$c.AM3P1;PWY7^g(A'm0>V2=]&Rdn"tEP4S.,3[H4AETg[#X[s<LO3GRGeW_4X?9t9OA%h`W:hTJ]`uR"OH\J*V`Sqn^h!!4jg>n6p)]O.nOp]piV4%a"Bdl_t:Z8!Le*k^HMC6lD"qUQ#oh!T4UhSHMX@<bI`ha@fG8;s3K)%cnCQo$f*%*n]t.?LK(6`kX2.PiPn5A7amAbqrJB:Y<X,sK5i`!2!=O>bmBUQM0Y.;gmV,O[hl!b"5&U]8p5l*`(;hi>l\BJaXeiB%fJ97S.+E.cHPZ_OM<S:9gg[i56cld^G#2`#X#UKt-ZSCm/sA<f&1So>#D<V9B;Rmj(oKti7c)1WM:Z('?s^XC6MAqPI';0qc*PWc%<tml;21b+R'8lE^'N^T][(p=XSm77h5F&J*?&oLfS[M-P]Vt/c,tksk'o71!Hqcdt9ZC8'O>M%-AqaX&LZ\27iqm9T;*['s4u`k&%/S+HuGrObbP?g+M=<;15G)m,TZR<JTOrTX=Pb#VQX&8Xu;ci7WR^7Rj-Bh+n6*TYJ?rAEVJ5r#mA3]YgAAsaD.Q;98_`R.>A<uC!%"c5U;]Zq%eG0YI*\t^=V1'3R\<b<=D(-n"6ZV!M;EmhDTY9Vpg]k5elmuc8I)ct29aeG)j?pEE9>r34a.+hE[eK+;m<BO>fW#fY3%:jJo!U-k"D^S[fZebHiUqUOMPY:37eh)a'm8]1jGaRf,*])1IFXNhL/(<:WXpM3,Un$`ui$)@#_`eY;Bp#c<B,fn:iL"::09S5I-%WE+g(L+02ZFM6m-B5S@-PT):rf?)k]1ufckQnT3a!W4lK)dbbVGFH;Hm=5+sC=fq]F86'[g_=kF/EaH[.He.3K%!1h'gh+SSO<N!%+Xs4bSsg]H0JtVYE-0VXEX+'L0"]:>c<#7L.dV4-@<m-d$"@PHK7Ga%G^nkF^WE<BR/KET7J^73!cTL$me=Ip1=K5`kjS2/>do2Y%;N1Y!E3."+a_]@4"]C%-R5!+gDkKT&N!UluC!kPsEb^mfWQ"o1$d\up4a`;7,)Ge<?$Ur8W&\**YN0WV?%;kXR4/nXV55+D1F6jp%c`F_T=+gCJY`HOK'$pHTqE$9KiTh4bAp%G,1F$l4fc0fqCukaP>1'oq=ZWbLrq:j@^()EH]Iu6'PAT:S7hQ'm>a6>`'8LN9!aCpp%l,YLYbiK;rSTFKk4_hB#<6/h=Y/aG.3E(s2f5IS1T6Vh^)i-b*"!Z2(+BtO*#TV0UZXHC47Eh7rI#S&p]D`aN)[L==MU%(up]8iq%<:HYS_/I=4QAQ>^J\M'(TR[.:Oq'KnXKSSd`>nsAeJ5$WTd8L=OX!a%U`)c$+VNilp,s3_SX7P@<9iMDDemt_oI[We_E9"5=Hp5l%%'V7Lrd)oBMGjJF-*lHg,mNiiZAXH$D[=\r2'K9e>i>@;D.6_gA]K@]@>d?bI+E:fpC9>FLeA_e@9j5C"Q<8AT#hQZhOfeik9Kt3%l(MLA:rE'lpLtN/P8aQNQ=ulQ(hmD]rGE1SgW;ufbOK5/jIG5,epFlPNEkPRh#\09/U!i:'5Ma+@6W)R>V!(G<@dj;,pT)*hW9A-%`29>2LsNl*,.uED-!kIr'X6kNHZOG0.7N(,]5(Rbb[:-3M+ORpeEj%'>SuW.q!JiEcFP+^)LRTnM)s*5'bRWH@PD`q/P5ua:jtF[%ht:RC<6<om;Ur!g!&44^_B@-$6eB[Vi5abSE5\%>a;"Sd)sI5QkiqX1bWG^Vnq9QolH+Rndn(o3MMWmbNRAtPF#>iEI9gH8Ih9O1%1%a1'EQr75md`8Pi&0>+k-.6@"d4=ROUC<I6eX#NBUH+_9G=[UiEb.eja^AIr@,jd*u6]Fj<-Nr;L[aGCUs,)#<\FCC'L-6lft+'%j_*WP?/HusPsU#q0`:<MRi5;tO!YeV#n7q(->cd?OTa'(pAQ@^&`6J!a%3YfKA5+M/]o+,,]%dj])pHkVH![S1G3''@EJau[Vg+7%\0B5cOt2PAOHPr=FL6b)Q$YeY[RI1B1\3\!RZcm0=-"G!--=)t=;ZcQ7r5lRMoS!FhXh7=+G,?(:!Xh&EGFg>#i.3kLGc3!IklhP%&+oUEN=b(7f]b/^>I#B6o[0JN7t2IOdCg"^,(jPde\WY,/@83CLS?k$9&$Tn]M4d7^/U<j=?$Ka82*8LB!Sb#s*A1-bj=c)!,3in%VQ$Lb8jZkR/7Z'm5eHh!&4XO$Wdi?[63&jm2;"d$.f:BWLt*OaQ'\tG/G.D"phZo.`JaN7qkI:#,OOY32[U:+cJEP[E7lYp[ApT3%@S(*TE0#</@S'7fe9;oKr;*peHT%Q(!RSX<f7KfKS>T`;C?_<.aW=D+=1hCY(\PEnH=>9_)q,J-UmZSEA]A+`Uf[Z32`cBE44V+j%4u&#pV;^:qXE3jK*VKc1,DH1_XP3Gn1*gdK;$"SbK*@rm>L45!d?inl>s2&W_TW`j;.e\I-`0qZIaW_hR5=/UGk)^QO;Yq/04*K_%T=JJ.a1(\fVb_fe5FoCco9](CGE_!//l?##2hAL"k,1)YF?Yj^/9H\ET!^?F2?[kgL\Dm_5oB<Cng.Z"ke"PkcB#Ebc%G8'&p^t[%d/r73hmrcKk?V0*pS5R,rH0U?:Hh,X`]RSAjNH<UMeDg@!rdB;)6KBll:2/]*DCs1hL\;1S/%:e9mr`P6'D[U#$+Uj>^jRT,p6g(%Q&(,_gf0h1MVh:^XkgLoFD6X7/J`,6FPu3QK#9,__O02I1.Ah25?ZO#7\m73$M5sh@llf--("9#gt&9a/VZ*/W!r");lBLT'WG8Z%s.2uRl'o4"iQ,LgV13+@cUWWIA[HIb\)Z)R:'i?^cTR-i"812`s3""0='m@JY\F]2GYaYIJP/]er]FW[WK/^"L:&W)l'"F!nFs;3%9HA6tMU5RqI$F.UC*=qD&;Q)te&aJQKu43h_iSDi(.TkHH)gQJfRPZ7A,@dm&@p&+6/u]:n">:\"C-R=UtnSM8E#)5T%pkS!l9Bu%L'B+6kb:`=?<Z'fIOEB<B>.uqAe-VSac)tHmeHIUJbr2J-'4#W,U.*Rr\>)=^EjKFIu6YT?30al"P%O58`YAtABMsV8I\r8eXip=%BZ17PRKPclp(?'HXflZYg<m/;bQ.)/dU8R[D]&0^W48P/fMbJaZ;6oWee81>!r)82c&]9Uoqhm3.HsTqX/MgJ!SN;U%,jKkhL?1n%5HY.4@kqSqX[396A%r[J8q1$64Xm)!9E8%6Ns+B9cVW(j%7O#/&o9@<RLT8@!Pj=H0nBAl+%0VoQ0],O-K@Y6#5;Yd.#+jMPdIJ0%=;QY:8"6(01l.TG!m>1G\pPp*S35t>R4-lZb$#F_P214s6L8X.r/kALAVM(o&"=cWRKn>Fiqs^aof)!@s(^E`Mimb@<`<4"/3D$J%$C9+[Os'_4?Qt4?3^(;ep1@P]Rnc-UIp\lRq?.G0X#<FO3s'^q7')qNo&r1:62&hanuqHN6>tUfPMdMa4(fI*j]CO\g5>WYR,SfU%>YK;'1NqD?+`9^j#5?5G7tj$<j)J9N=2I]XRnpM`G9d\CeOT<8,R4p4ZqY&cplh@S\J%qXC`g<9FoI]1VY-"@"Q/XJ!U3J`!Xc6.%b6dUVh<C@2Cpg2dWe6$l9c"9+!k&:U<Cq&L]s&<pAupXuOLb`h.LY5Br?%p0`$F7TXI*O/E;Is8TlM)hcr;'P439N\]2]'Af/16[%s4f+R0/[hKrtW2CS:3V[TucGRIX^jUFtZb29TI<gg<$rQCZ/fXgB?0S?1JNFb[mhDL>epC;usiODVka64&=?us*QLb)t<<cO.]Z^%1\$gQH7Wp*NtuLMUYW\'j&mi*n+@/4W,J_-LJ#$ZO#?+NZ\%92kb4f"lQaj.AJ$QU6-W-PYSen<P+IU[gnQ+RZs/BoE7oPUAM*5Z%m,I8g/s^)j%OL#IW;gnQVkcJM+69.>2*EZNq+B?6P3X(7<h#4t;3cRja0lWMHU/Y$NN%l+-7q6@M1j>i0(%;h"8V1XJ)=ci'qpdB%\>)S85)Hu=+!uQX]t[!!X+odmpF4AMUGj-9-0e\r:$k_/=sO7Sn^g;75,2J0E]DLKIbCL%>KEbh9_r-]QYF%,ZY_4NcnsEW5jqL:%=im5!lb4Wo(i!!F_`kGTNQfoM*L\TG3a77-?5NkUHKf8SM^ESVOli]jBq?'[']4B1aQlCeqhDTs>C<FqFiIFPI#mCPj8FC-ARu4f%Q"_Uc4iA2h^!hYn\SFkfd,f_BMc:)_4j_:92g1XaKX8(S<EH1:omWW1FABG^eK.Mgi'f(Y83Q`F<Q`I\RLubD_p&lXU<lteoiZb7%1=1IL-oG=_r[dkuEf`R/a^RM(P\DOqh7X(HPBB;D][:huEVOR'qI>nHb@[:.&#G2iJTf?an![1-fq!,f9tgY$R@fQ$B;>ERh^+Dq%09/V=Et(_8;X5DO]]7gW39WA2=Ej41XZenGflH;>HVM2!dQf:iE&c4*/1;#?(\]1c35[=R1Djl,_(5"3qE6+YD]I<M7UOK2%DV!\%ALI;ZO[S>9%(N3;m<`;+(5W`-X'ogoG"</,.JHN?>Q%.^Jrc/g$`;@hlq\Q9,%K,m*1-NCZR1.oj$9FX&cL<sdP1M6L//'Pqeie4%MNpJkc_uXJgG',2*i4Pao`Ot1?5V/6:X$2hF7I<X1WY%B;V1j_.-E:kID<2Ih='SU+6h-Q1298>:;po%11/>m\4"J8a[P@^h%;ps%dm?(hh'!kE/9dHSIrGnT+1GkhRGFU3'qs;c"B9[$KTNsX%FHY)?Eq^A<W[m\QYuVP2d_U":ZpDogHY0"ZdWE_^p.3R&%tP;pCiN&%.GkHm/^MHq/b$!j-+P7VTonuS]7$t=m+-P'C.8^EV8`Q#,H:7??'W?[_ocV;<1)[D21%i9[-W#l)o<fa"7uKg+oV2qJUY<6Vr+OE%`4kh>3hKp'CZ!PE81DZ_L[8!Bl2'<)3qMs/UCckaV8/S.:25d&'H3rm][l`^:V#g2791j2\#:l]ZD37_k-jVYY/c$pLUV!KaDT`!%^=T&X7=^6beJ%n'A'P*Y9$UNr&3bJZ)W<:c34Tq-Y^U?N:Vo&Y\RSO^K>X1%'%NOB\e`l]=/)@AXc+=W(/9C8:*Z_3Q>7Pr?s%E1%6K&Qa2_&PWeK"&kG0omCM2m.mV\l#>Y%t:\M@*)[*JY@_iAAkHI(j0I7!N^C)5Wkq\C;*JLPgPeZBb]P+Lb)ST8hZ&pNFGIZ(`NF%Z1eK.J3I!DprOsAY9!g&rKsgeYgkQ&f=%a4!e8DM19!Gi\HqZB2RiDASUT3nI!_%OI&%eZ>(,pF3'?M&`o.5PYr]#K!jk1"OuVa%%#m2\N!ui3G`%ZmYkb]OiB;kAeK+T%J]N8Wn+oL[`cOS$IM".2tcgm/l?J3ogbYtpC-b<PE=sl(2.\Cd&c1>P?a.mkn:DdT\oi>D5%4%`*6Fa%H3B&C\`Orq&Vc])?K)$;i[gAR2^ATEP-Ak@^4K/\M*:hOi@'J:]f!ko3\@l\]XeK[afU*:_FjGW9@U7RAZ3.+4"._2^'%N!?s6]BK315I/n_hrVs;gN3`eVlHB,2*=%!<s7VH)2KJcqURi[Z[_,Crq2[KX#ni6]X68/&9UQRP#afS(Vh1;)=4>rIdHd@^@Tbo%\TFg?'+`a+.X7X78sW\-Iu%RR/OmN#o\2%T<:C>JCJfQ@3B$t$E$Lno#%jC`]V7l#oL-7F)E.-09^/7L2,<hehcdV1$2U90\[ipK%Cj-+,<8JB?n_&(,E$!KP[-5etH:ts"39gN+:H?J[Z)7S:IQ79TNT8tI[S)l^:RH*lKRmF(T=M'gP\;#CRi/L(BfWa$EJ;2OclL6Q%iPV"XKaZ%`jKf'k"D(9L4.lJUR^s2>$+4C;.JqXr/p8^4=clY:JYXIl)=2[DQXXpn$9s@M\h"oL3/!-YU<o[^_roM3ch]pEP3;;u%@f>tV50ufC-;e<?3u<`(MVTUhQ!gT[6n=/]>LMG)pO;`IFP[5+T,VT)KfC^O5Z&YGD?^f?DHE/mq=VVGdlpWhDD2VEM5,A'-'.p]%NjUF8_6WO6MtabKiHD7RGi3H?!a\Rq!YF=agea%,0U@>P3CN(2D5dgPL4U;MqY-:NI+;;Y]Q<SB;@:ESN6U3NB,>+AQ1rUJ\E3`D%-@B1P:f6;#,<m5`&Sm:MR"1fOa\l%F=kaF9\@beo<YE$EbI,IT@[O//54ITV`<[eBHO`"e2cpil`USWE#K'Ch'#T_F_6`O$KiJNd%*E*tU9<g:b7)M+_;irr27P>_d?9[**0eEGbaNF4t7H_o=]j/7[M"s+K/P%WhqOa7L3Ba"^LOp.5DJI-.Uq)"ZNKpRf%.u3@,Kt6B%lpLiNbZd585sc5sQZA:J7H'FXGs!ij;0r.fK)`JVnYA<SO`hk%++P>)cQ&B1W87OHm_5;cWHnqqTTP-].(bOMdUnE%4k-;66dLm(%gWQGsUh%?4n5!!#'1uC2(h!=)CMeP=q4#rV2['PTJD,c<2C99*pGrXe7:UITBObF!Kf9ZtjJNt>E,-(&'QH,`C2tkuZ,sTEkfkh*%+oY.;Yj0M$91;7(gB+:8Pas0kBT4K*L)!ZN[(8qu!\C6>os,/)?t^\;(]tm9(fkrFLJmRm-3flh1oEg@"3;2[Lete%+>^S'Nh.V]%V,tSI8#:ita:K75'Lp_DqQU;_&T>Mk6Y<3KelX5'$[YD&S^1rc:HN3S&k?Ztp%W)$OB03/Qf%p[+B[]*:cg(,3OY#.5S.B->(HV=%M5B*QZ?)6PQZ^=\3G-MqMkFbZm2*1Wfc7L--O:HZ\oSHX,%,`d``1c`DIo'?_mN+.gD6GKoS-V)l=6>>-Sjmdr."GtZrG;nVu>Ut%Xe:+O)s6!c<bWuiTU4W-m0)O<#5Jf%!PjB`)%m,/P&4_Q9EOF74AbbdaMu=1NZNXZq"tL-BWQ`Q$Y"`UWjQ7_8^inEI"r^L6\S<l%V8]-+<:.,KO!:e@nM$4%Y[gt1L\VpF#4*8%ZTmPC;B>C55&r:6Xc].6CWl=j]WE`C2]bjG+Fh:[>W=M&'aJA\adu"tcNrkErGW7r%FH<(8BIG$uVQ3;]@WdcD!k@^"8b^[d&*(]rkG?[;P/6Vq`B[>Nb(T8-FL%4G:6-\:\BVlPBO=lflWPMO4*%P?[EaoFSS93";Tq3W%e9rORPu3"bKsPH'/9-jg=trtGEi*RAfXY\BI"\IQH0EbOBaB]T/K>(9&`,2_PfEc0O540pdLS()jOc2c$I;%LC@Y;VA%SaOAFS1_%hQj2obdp+j"[?]Ck8+AmLOH(%R9bBb(RbjC0V)\:8tuEC^lqZC:sL@]Cd/%LS2D5Y21Q=#TuV[e;`q?U[>gq@0RnFYni(Am(^rUd%YA/fcR-9jVA8j)6D2H(r]3FF#)FcZXND^#Y%FjDLHbFS)6V>uiEPE&?V!TW9REF0;@-<A\q&(*Sr#6P)pSIRAm$.`->;2pJR%E;)%;9/=]/QYB<8c:V$Y&$<d&/'0fKg"Yj($Vcrc$T[t@Ya'%<WF-MUaZSq.%fE9X7at4_?r:fn7DLrK;5:+d-$5OQ9`K3Z:]3s^0F/m%mt)p`>PDEGc[7+"R4?:'Ek((U:PT4Y[cN=tcK>=H6"j2CJ+='cY-+o/$Sb&J,,Ug#+G);F>u%%b]S:,,j!LNiQ)bcbH`'1@2MO90%cdbQ]9he&;%*I`Zh]dWm15DK[SmoWiaVWHO0q800aU_rABfIoU(IA8tj9IS.8]V2V'0s,LW=07OcZ&C.Xl`Zoo6%A,`"^?V<_++@%le85CTKg6("a5a3!D*r0;C:4u^nDD1eB9IaG`[ss+A7Lu&a-6R*1G\rXuW0'Q#%q-[)`nq[LPf;5n1?Va_V!M=1$l5#flPJfnqE@%8&L6m2EX;O^RQ?0m6i:T,-\M,9UW@_,[h_q(\[-Y%*q&&Z5)4)-YU9AY_*&\K6f/6B*X(8]/$2a1lN[)f3R:a-JghMFuq%/#=X>d%C^!UF&\FK3D5#GN[5,#<#RfI[f?h>e.b`"-X(6lM3PoTC<`c8N=*VVYrdIo/-4Cb7e@M"S5fP*acg;HI88N/%QBkg0M$=((GgF'Y%Airb-:(jHfW]rWg/,+fm5lo=Sepp3eDq5TU[3[b2=-!rV,E[7Q8-Hi:!ttc2cVb)WGj-`k1U9FLW-KtnZ+)WtP$ihpRDohkl<n\e%Djrg)<%[1G/+D!Vs#a?iWNd7LQnE/G=G$U"SoKtV+Zulh"NL([]s;@tG63%>iPVhYCBaLjh?Z#\mkX3fnCB?@d@BE%88J)n$`:@Q%_,<>W(!&nWOB+JH[Rh+-?VTl/[047T)H.`OqYrl\Xk%Eia4,%-a6^o`&r$H#J\IURgc!.agC&]+l9UZ$IoXuGc)1#*9HjJ58g"m\%aoc9T`>,W.7"[ljJQ,THG'K(S#"$_GV$4M^'T\rrg<*:I.YNsZP5l)=I-Rrtd&'g,+fE,4V6XS*)^m%f!G[X1U9ilG207"cRtPL.%21](<KId=H%B<a\Ht&qgLb]Bq$@^3-m1WJt=L(1e<sD4u4b.V$46@-0q]'8_o$Mh3jT`gO4\tCt)6'(-^nCru5#[j1%.IO!PL9;K%`;dJTni%p_PIR=`j:A&'++E`:!2&d>;*g9aJCZKD"*P7FL^lRn<L&.O\kd,kLcAHKXV;7[]c(041uP;B4i/r>[,J(.6q)6H7LC,f%R6d53@?dk!.dDI^iQ#0O,4>qg'Dnk?7[-KSYp]uD5t((#Z^C1Ti7V/a*V./Q+tD7[=.X(HrActq^D@k+r$X@[8QBXj3q%T^4dg\-%#Sa&J"Ro>IVNRt*k/aQ=DC2r__TuHR8@PFdm&-6%L)*C/>ZKSEF\6tX4]TP%5`]jVd9"b65)NLWRBWfJ)O+C=Q->t@r03\n_nG*N%7%7KuM60a<h'IeS?jg'A^"m$s;;cDaauR%sX8HIRHoZn0m"E?%<g.2`XGN9B5OJU)"N)Zu6$"&*@q%GY+^dClcFp,]drFr<E&oJW%78=3K/+?pbVRYL*MVRq^&Fk:NGVUQpV_NqbT1ZbC`Uj'AB2Ks\`U&g=JscZ,"8Bj_<1^sF3`f'm;4->7*%UbhG^E%TbhQpdH;Q+<%hQJAKikPfOo71L@3iQ4SZ4[H+Jn;O%]`&49KZ1E6IXrSm[=#$k7/ka]!MTLfckMU35ES<o>aftf'[H))0O,3n@MIKO',;Z6W`k9u%6.dln]h'g%NV4rMPJfZ0hbmStUakG[6%Y<iJU@Jloh;u/j'G[3Vrfk[a;f^"j1P/%mek_*$JQL=P/8GrUGKZ(rF'GeIP\/-J!tAZ%)Yf/LGlkFWa]GLRg;mo-Yr/"oK;B^o4VBWa&Q*P32i)4b2+VCd/sR#U1?9ilb%+R!!<@`qiVm!Ko@?L/;OHY7PcK?E%6m]'V*2+7%m+k+!HI(eB<kZYJ@5a\$$I*>[<^iV(T'%Nc6YRYU4@QZg4cM6/ka3Z#ksIH<_oZenUC2pc-u?:hl7JAf:`Nj]@&+pjhW'&S\n\hQ%m[i'gr#U/)lBQLRrDju?%KfXjntj]oI\4.td7'_81GVQ&\s9^H\'f_dMn>,>e$"6W`ZB=bm#3U:]g(Z"QZM@\3s2lr<$:tF&+6lt%Z>UDPe0EDfO%0g\i@S.f2m"(c/kc7[4e(mHK'i4?_p&Qe2N_TG&:7E0-`.BJ`FM:cT,>XRh.tFk"/g;Ul:&JJ'J<fm)lu/R4W)D.%)m?Sd@;;\*7S:R5I]q>\m/Uc0\Q),%.3]#<jSL.;kk10dm=k)>!0Z85AriW:HS!eRlg>QT[bS"9Hp/Fh0?<pE^0!gW3N/MbFOUOh%]*W2a-=B[q4igSqpj7=g5:6AP?GYL,Hpjh?l8[:Y0m&N6UP>@9EUDIt47tW\ZBbq8VK&>.>f0]TNU@'/NmH@A1#6O%<9$B(`$C!q%@:_6edUa.[<Xc;sQXd(Z+iUge3`sOuJL]MjC9ajA$t`YZZo/W9]Tg\%]I6hOHOJA$"[DHSQaCX.!U;RPFlnU>b>2N#IuNOQ,Q;31%YOKs+5#2p&DmctO@A-es5JSVS,GJGbB=[2#$06j:`,*>T?7.qC<=Wl-/djT$p[9n\7"lEKk`#d\nCgq'C;73jUL@L_J+\)bdD"B"%BM63mV37dI1;a[%NZ70Kok$)I\]p<ZaB<Di*;Kp=2972gIJ\4'C+:qqH_fnqA"R0Fc1!`0+C,md]bRd"maN1lE>,i`l^9R0_).[0%U4bHBq?HB0cTCKK6Ofs+&TDt1SH7X]h3N-Ba&6rf4qo4JUJ!,0]Ws3Jl49FQd)r4g7UdrW79([freH?DSCVVPZNA4A]t)mdm<>a^%\Ylbk+Ek+NTfrg:?/ckgE(\\RR1<T3Be`G*#].Tif"7G5S241#8eAP8>#%=<D9j>ORiZI(Na-P:')LWHhZb6OD'<X_/k1"<-*Rr4%mHO?`qVrit]erL3qP"Vj$Etj[a=DTfbX2*fIWE:sNhL;KU\5sk=@3?(D]*H8\H_l^J4&a0FK@%phc#=,R8Kr%=09o1"t,LK[oj>I%J44eTPl1a14B.IT1A'g8qsr#2fQflHA0W<J'3j[GH_bmMRWuR_LS,bHjHhR(Bb4;(S64:S37""$4W#XI<,%fuh#G)'8n'jO</4jc%RT`N,>Jj@&#e9&7YXecpbbCfi6_,0J*ON;Ii8DeL+^71+&99kOGmV'V"bKu>Y3A\!)O)!_`F1SMZbXYA9P'G93cbRbCh$%5GKP^a%?l27pPn/me`PD9u;)feWQI?R+AV<RP;gm():AjUWD=2BY.e]?oAgPo[=Pn&Vg^plLDYs3L7NA#G%%k5\n(Mi;E5a8MHfZ@;43'3L%&4@FgcVV^Q@+&ls;kft@%,:ki;_NajgQSK4pr2_39A'-\Sc11$bd?/T=`<sd%Kur?&o\elIJBXE)*S-<8Ya:T[p+P_Y9ncsY*Oi(%Bg!\WCH&+>&u43F]fsOlI<hT[DC"]S9I"LGN0W&K.X/1-bCHT=?$P00`5<JrZb5M%US_!L]*IjZQ$jAUCII,#qoMo`qUpUT/<##r%o,/0OEU@Do/BgSG"L5\/UuDK-PJt`+;qa-hLF=9.dL=\>,Ah`WUXr">*j"7":I&.Lq@)\Rhnu^uTQ>BkJ+ur^!ImV=pQD8oNK2G&%P4H$"72PbK!SsA4cd+N-Cc\*Fln+4Z$kG%C^ZLFtJTPD5dck:7=F;@=opfW:aZ+CK2XlPNJj%/XV>OVAVEVc@:H&j`p++:3k]VWY%goSLRWdDu@]1+M+*C9oZrHm0]c^m:`e**<Uk'0pIU(-=L_$+n7I-mHUM<pC%UJPDTJaAGs<r_+tOAsJ0*kBYT;GU,[*]NcReG\DD%o*G/R8T9Ri-gB4dJ!hamEmrbT9WO&O`D^]cFaO#Ik4$,(QQPt]r]4=,bK]f''pV:c?8bP.\OPT+isAJn+u%KB>78@]6ORN297:))%`>T_<m2Rag6i+2'eJ?unC%e0qn'oC_<W7qfc?46jE,/:MZs7&Y(,lYYBe5$I#f2C8%fAoeGV_9!_qD$9?n1u[CW:uV<[Q<RqXpm4%plPsNYJ)AM0g2[K`Oj_"l(re@.@AIE8MG"C5D0NdW"7]QmCjtF6Sle^kI84`j^XkHb<,ZEq[ErK/"tQ^mHT>$eaoG&N[!5&>7<R5%^s>f.Z]^V2.uhiqI1%$u4TefVBg:pr+B/-5oLO9g@$PL/iM,;..1;gA3hh(`iS!so>tS:?lU[^`<ZQ51Wr09<Y/GBMT3eY5Pt'Q6%;Mm$uhKPE7r,NL#]%9?kF@0`We??>\Da#9&%==\3W"3<+[l51$A52&kCo\"]`T9\/q8u?Vq'!Y\CIb#aoDAH-j3U/=<$`fn"tmoD%2eH@;>>0TmDrMiKQY,;O_Wd)uDC+8mW[X1aFo.@A6E"8Ik[th@+L0asI*]h3i>7XB[k+`,'VBr[,VIP#<EuTP(d=.c=@4s.G($6%%d^&/.lSEB>dQYFp:H&u2i)YKUeoVt`O.j^Kl1I$uZJ0F0<&H?P_lhs$C$n"3*%=":0,J,c1eX51+BVBff;<]H'n("^a7#HGMf,W[%HMTRY%cUB*3F"@ueKdg9hm,f%o!d<Q)ID1VE.:T!EB`AXAR:p!X*2)Al/4lqYpLjMJ,O*rI^[ibjn;:=5Xp3l@-gJW2j<BrSu?pj%JKTT>/1j<4P-,DF]X.rJ@/tX8^le'7Ainh]o/9V"<:t05g--`sgNE-F*4[ssFLu3FC,;.MI8sfSe"/KGJs+'b%9"U_gTOsId>o4:%D[4D7\$/p/-Q'C4+gnH06>B0YO1/J_A6ldM:!5p%M$4[Pf6_`f/p`m.*Mq!Y9aJ9BhN4'ENAWR'?f<'fV-f,q6BIrQBI+eU`BMZM%A<<WO!re_4*9J3U:P.8enc4lP)7Q$*AooT-F\4SUV+\XdjlK-/au!K`ViXT_5t$9U9`s[[VaGaZ>tCP6CfRDO#rfDM@17]5711gf%QMYk:k8_6E8;L@_#8mH;>/eCN!-*q(4[@t*R'c[ijRgTm.*!OB7<uQp:&%n*BWrI"^R(8YpKrs?VYSbX^Us[08!Z,CZGNd_KgC)>%DQbPTHuHP,H:^gQ:aJ9'k"bc^aH],M';YDHoAkV($<c(_LFCT%4L[0O"uor9VJ9nI`-_!)psA3T>P'"qfid(0i+;,_Y"1Y=B2#pX%^CD*LSq:h^YL(@%o>WKAC;,-(?a&,dGa:6@Lg(H-]S:HXnWPl=K?MKP`/QUbOcE>dl&>^@a@F6DgR8iohbC<=Id9SJ'R_o$MqHm;%oc@h-M[%;V<(Q&+LOCO-0<DR0qZ>G6Tu_Ps6XacT_&#nFOaMDgrP9W(AQF5-D+Sa(-9=WY]Oqm0=NeW7-@6ki_a!q?ZV$\c@-Q`j%gX&6XG(&gHD/Q8RDUH%:L^S(c+?T:cafcf\$63-YPEr3g@To<P?u&@uA'ZS16aE^S+Ynm`jFa3<03DC!)N#?X4Hde*:f,NVYjYg]%e$c1#9s4TF+L_.crf,67p(QGu4M`6MCJaVIL<)7JCN7IgHG<KYH\'t61rD'(>B&>^WH2a6F;l'8&e%1]aIsDi(FV_&?Fc$q%I+6.%`uZS[MFH:8D(ATgks4qeW@iFijr<u3'VrESK_GpNNKIfafdRC[90+i.XD>OPoD8Brf>5MD"qQZCA+6"lou3FfedN,f1L;#_i_:YR%rEVihWBNjCRsI_f<$1N,]eX\>eQd0]Wl05Rma2#WQrGs\lk#mF)-A/YdFba+^H2aLs(q_s_G+2!_sS8hN+!LENkfn>OI,p.jS[5&%4m<i\N5bf3_q+5;GF'i&,^Cr'(bGt#aUX&@al,R_FJo4R7aA.2&T741]bHk0,Pen*&':ts/jX95^KO`^TNMLIqhfQLe8iiZ=7qH$%5^,]h_#kB1_Z8l\!JPM(Kh7O<9>TLs'M_pON]ktjG^8X3^]jq^6P)MgQH):<0?Ucc\"(!bHXY)88Eu;'"U'HaE:3ToK[%d`Ji/%K%SQo-uR6-FP\VG@9=lIO;reCbC\d-FI3j)TH#M*dZ?K#`^;J;pF(Z&[0S*sWX"&Hk0?m+=7@e$tS5JH:GHi9U-K#!uZVjWt`ZO]6s%WS!7i%iSPjfl[H^(T[/0s'alkBQUESdneXUh*1e70CSXf*c"3HfSpBGJI`Xk1"m^-/<ANc"\D<=bdD<*e_BY@/F((5dgr-,5%jof%MnZj[%sb2(dNQa6\j/3/JBQta!:G2..B&&5k5h$'Dnmg6:RD4;4Z_(C$[7,cOA&LX,GlhQPj%/`N$"Sl9f&[<jI23kC79dtrnPjG%Q-o5OEDaL.,$7G0dsV\cg`pQi+rDdNqN6QAX`69-3S\0k@(2APAQp:(dg7/)A3)W_a30bA/F8sD_rC%.NHuW0LM^q6J4TT3,>EVH%kdh5;0H3+]fWiWF-_IB.o-d.g0FkT++\M906T[2M61e^f2d\pN`bC=WH".>9YMSRUR6;N=cU]^_Pb8A3fEM9%ZmD]_+is3')'o(8%J,dg3fUS;CO(?i?P:u_%-9pcm:a`XY%jiBjAD1r#2SiLQ2hsH=MVc=WiTY4K;&5#RO!\PeguU_KaVX^I4t8>f::0ucn,MkVpV4Hl%jSjXL`D7:o=.tBAf@Q?4*FO#Q'ab#8WB=S6T#HUCnKKPONdAhY%gUVpmgt1?(+D[!)"m67ReCH7*>,$&gQa):Q>@aZ7P^&*bY&@7%6"\ZGKJqJR<LR7Bh>Z,9U3q@5<MFEag0h=s"RLOcm&1B%A!(i$07(4crDfO_&72SOnW-;[J+\B_E@Cj[:>;+2-].kArlRiQ%9io`%?"'CXPI`3<_t,W#pfNL(R5ZipHI>ST@PX\\5!YaJ#^T/rHedpFgY1tBms\X#9JMq@\a9#k_,X*A$`3]SU_b:\O6N[erW#Isq(qrN%.b?aSan&a_gO"9b0\*NE@GpCfEQ9t*R^9C7_>C2l@O^gE28kHC3XD!>$VH"hT8NV7G,J6n\q2G40i_2kpmK)qg7Q[3nh@%ogN2+*%HcWtibOroKbUl[-^Tq`VZ'_[dmF$pbA-D8L5bI]TClqQ4=9@IL"u)'-H(@G];Vm<l2m3iNQ9O\4><j`m!9%Loqthd?3U`BuQ_n^0%d'.$&d%;n:p?Pcu?TNV/Arf]#mnX>sbbNVTgY"FA8J?3#LVB@]T<>\uhDc&-*"\$P4+g_4:Yrjl!SMQH<omn,&>g\*RG$2?FcLtb%:RPTHMo9=#P>$[d\i:.-^S,6@rtsPk:&PQ#d+C*_$E9+KKb7_,%9=.qa\h$iZeeF*\0_OF[J2BGTmus98k3i=-Sn/U&(hb;f.*6U%:f,^>)<&4Z7$!rEmsoXk[YnYa9o\Vf=$'499,m>RC!bY&Stm*hJ\EFpI3@dSMI(6T3j/(?War!"'mEIM$d8)%E1iaLQ8r-_WC7eq%0*_pB[a@XSJ`HakmDQH+Q8&7![I7MPg$`Jp_5iV]mHrlSUn`Z6T/:2E1*DXtGqh,-a3$%W;K<8)!+NWH7_PF6$mc+)>iD;,CA#dK%HI>a?Utp4W-W*etr]P^PSS$,e^U*u6@j_*8mH!e:@?Y5BXXYo&KpR[55!OJ3DGa8o@p/>HG-$WQOlC?SddHM`dUk$@>7Cg3pO#4T%MY(80e<lH++f)G6%[p*C9`$57>7*8%jK'r[cg=f$4*8#8<6+)]\:6L;p'K+n^VH@-;^eZ1q`EIJh#;2d,PgAkku0U&`g)L'U;kWK%+B`_@IO2E0HXfuW(V!4Rh/`42.p?$^>;=/k;nKNeHW'DXeOhOFnmofLo9e!U&cT?'6d#-!ir>UVFp0@#,uCC)NpR47hliQ'5@JRZ%Bn\I`IuWku1E"N]PFG@ih?K8?^'C=,\d]4a>+nU3L99,$!XaiA;<QYW?d1'hQB!1XC^WOmO\;\<0CSYa%S]*p<HirX*Y&Va7CBgJ%io*`mha#5-TI&Jar.dj)J>"DBIBm'ScK`abcI#7qq8p]WfR1HJh9S/<X<A'4NrB.(_$<arFp\@]]6eT0F`70mJ-@]*f'B-W2!q8`%W:PRH.YqTQ\r*Wq-Q2p2=*OOU#6o+ADGL_A$e&EOl0umhJF(*.YufuHgP9O)hh`Fr7_3M>HD+LjLh9\J%O\0G4#I2Oq'>ClF:\<3%h<$1G(4h-@bH>gmgK(6o2Y"MaV=0JsePEnP97.*cOSCI[<?>EG7U_K-Oa2AL%UkS+'nIU%*dMd[Bqq,%mbM';Yt]atOY"7kZZN*5%3@P@g/"N_Q@,J6*Z(%R[F!XT7ob?;<)D*gOgt2'T13AHAr4/=P=9_mP=@Oj,,NC_dlcQShYBIog7P)ZCU;t%Hr/L``PES/.EqFC`%_IO)9DhXJ4A!rc%?C+@t*9XN-IjBnLNE98PI6H<;>+@sB"'%oHVA,Z"Vs;HprOg%R`'rmj4=^Fq*,:?]S*$_ji\o%`m6K.=Y4UGE%-iRC5#VVhF4l&74<rE+c>u@N*oN41dVQXn2_hR:-1H<Vf%e]UH7Og7/-$qG^-#rP1qC,uQF=kCsKFcZeo@T.qLMj='iSV]:br9&W%UcIB*V5KnCZOaeV,9XJM,cp?(O*B`(K23d-;cK:?JtT'0<cb6Y/"P;U>SreLC/?'i<0Fl;G4.%$=MD[3A`XfLQj2lUfR\KL2JCN%%V@$YAbr2Apbi^-a3^b=4Xt=)4^6/hNW_$<P*X/P&-DQ9Q%9j(SdH&,?2$tLoSkmV=,N#CA0c'9hYNo$Q_jtS+2Np&L$,gt=@X$=+%LkjW[koG,4(S0P'>>&7mZ5$RF"Rh4mdOK1m)GIA0;EJp!8$mFUmSr%"L"!lmB*Vtp+mNHc=&kL?;RB)tO(<%C^4uXjD5g-[&=D.4%f7BS6qkl::GG/ngSYUpA[OIe5C@nRknu&O1Q1Arfrc<X$7CWNA:+'$unA):$8'LhKp@p*$4lAs6jVl=$`Pfo;?8p0N`7PhnNfk81%1Kk(,EW7PWd2^e40kn)e3r;ae>!D'5/$IC%&em*"TEfB2Zj8uT[$^Y=?SBBCO+&!sA>-psI7[,hj$HT/3H*N89ooA2&U<]jFA=6]%@1ECNb[P@5Z!cpoG]!iMW2r)Ze-$KWoiV3@YC#MZAL=#oE"MI77`pr-R=.TVhuOb5K1*/;3-MpUJ`obkO(^Ji`+nSJY/+\b)mNmK%<JAKE:EjPY^XuknHt3>#`Sio+cAlJQrhD;D5%/g!CN;"PBeq&-T+MJkE&>(S?&aEt8]jM"V+2pHP%GNa;?XiHb=o],O`+07_;#EB%gFKl^E/p@^[R=Vf_E`$oB="kocf"(J\K[R1*bVCR@sLYuoc=riqIGKsShm]gPrk3n1otR/Pkn!7pfNPSgg@b+T5Smi=\a:_(2D>0%g6O1:\/,jR2,uk("tCVq>$0hp)N$,cZ]_#CX>hfKDQ9Ni?R:@S;$:0<))^]H.DVoil-TkXJIob*"$pde[4<L)Bg:>da5fB(F[Se<%J]FLi(lMC0I_Z)_j(E1V*]9B0\aJQ\A2]FVbe.-?bu;19(VJVlb'Y:6!sf@Q<TO((,.q&jaX$4&LOM+J5Oa+$offK%Nn4m$YfJnu%_??pJ3>?:CiQT0E8G-F`L)2,Fq`/YBOVl3s\?N)n%cZ:Z'o<NGJ,m!Nbs#mF;u)&^d0&rNM$eNF-UgZjPbG8-cr0"^Va8S_S`#U[%9[-^#m3ZRqV"@t[f$qV$S*T_BR2L-2n[B!Y`$V<AZX@&'?=s/Cq4gI]ZElW0V8pD7'2689"&m7lA,4kT\&:@2\sCh9_-)3"DS346%"@rD[@Wia=-^HQbd0<XF#=2RQeF0tp:PfV0VsmCnT^mu":m8g1+1^Od+1=`_O.GluTV,W2ipD>3O8$*aKB:Wfn@NUBG&:n<COtUj%LXYP?PKmajaF<lh;+<bA3ZZe:3G;Qq"elJA$J`=oYXj&=N'U\"V:k[glM$5VU-TCV1"4NMFn`E2njDM4;qErRk1<8`]FG!nQTs<s%9i6;&@3=q/VOl23_Jf!#paccn25R'%4P`nJ@YlHSH5(D;P,O&"@/,2UQs@L+D@BE]EIu))m;6CSEqG"Qmih>4&PU5kb]Bt'gWbj?%B]Nf,gG"=,O&5Nthh7HAOt2GVR/=Huq,+g%Pr!N?`qj^^rm9-aJ,J,a'9TY**I34_8&$!nn$Pl`-_O%Brklp&X.cK?Y)hD,X)WgE%^5g97VO$--\naCeBu;27%IR"u^/3@-PM4t-DEA0t*bFE_DB%3r^[(@<3;9RZAQHTLSXrAq^A[fXY1IQ-gYtM_ei($k)K81pmX[,]%#EkA6j2QMK7D`_4e\),gH](L"lTL81<RgO!7Do6oo/H.3cld1q@5EO]nm"Xc=sW75iBd`r&ePKLEe.ss=@l#M(?^.gnfRfn-6r-0%K'Z&3e+VTC^kQ6Z`AO9%mXX$JJLo1IJ&JeHgU?YgqKh""NdQ2G+2;U`qo$,-ZCm+E?d3TbKR*`iGe17,oK0c/rUVG)KA(bER0o]c%YqRp#p);a<K;^]o*R,Y!^ttS2/$d6"b*,o"L4"TVQSXq!?lo@jde@7K.V?Na`d8JuV-VKbpridX1;e<*PHqL*g*Yq@HImZpS^EKA%3FMTE60X[qER4kXIC0];ZsWbjG)^XVUcnU0@Lq+UO*?tj@Ul\:lmo.eD)0F0cEKeAY]=&nR<QL";]3(@5$"2YWqif?"/Fk7<U9%,%B)&[ZH96=2FLCDlR4IG@41t`dC7\bFT9ComG.f,38=A,bc$/mI`br,CS1.`$:qjs70AG-l0jb`]cn14<d=<r`2^"+=hmAV.*bp$S%I*Qe=nu',&bgEUehVD70ENlt@:Rm9XeE:rb4-DC0.s8jE8_.APNO^Fo<bk6RJa4;qr>aMCk/i^Lp[>K8,n@b4,?fL26<s5>h]0d-%I`o5dkLR/P-ad%I4+U=M)PY!ug3YYN_.Y>^".k2e?+$,&ORNSSbu=$L?]\%&G,"_dLe'..1&C$Y@_Cl$V]OSX2p`X(']rm7mX%#W%:*Ldcn"\[m'kVWdiDKG:-lRZ/o;QF@:X=A:lcEg(5ti[#e"Vs!g*K5.gca\ueajHXFNPu+hrT]^jTgFXVsS]fUdp(,eE_A=k,M+d%Y*Z\[6<35Z/tmOP8`!@@SG\'$j,"!0jA7*9GpeP:.6Y]*`*=91S*>;P='/B-ip(Z5mr<:?/4l9[Y20%RY#/*C2S,RB_<KqNHj@Tr%hH=I+!"=QTUV@^`.LB\0g5qhrSR^k])4D7ce6U&!^9W^,V7s,pV!?uPRnOrY?*f9].lKdkH5q_',cM6^./j7@+1XnF4"Xqt.El;$%jM2e4+=9fLoTfL)M@Pq)24/]2/^O18]3s43[`L'cr5k("V1bZCa<L%eKnsWX+/r&-NqO_7.*TH??ZZ4WXB@=ZEQ&I1*#S.V8O.#-%>Lees$VK:E_%":;7=5O`#0+>OA.uBr?%Cg3OoS>#PH9R5O*&YV#(RS;-4FSnXsiUWIm>koL4G30(QWU-1i2co05m5!@Eu5^g).)b%k8n4BkPjUd8*So[&T.HG;L5m9eBIEj*!0NL7XG[/F5=$3/(_5k5O/jcN<)R"=>IX>YM+!=ouAg9VmQ3h]eA@97K*s=85bH,(SW:E%Se:0W\&0ihC9(68RkkR(B(h04ZL=/_]2G&G(%9):$KNA-E9aqhaA`RWIsY_CPa7V6^)_N[lo#Hp/0$69ZJV(nT'%`,!OVDV'/*rF%0U\Fs;SCo:W3.eEnRZ7fNS=Uq<K4McOq3DNb\(Z!HX=V=m]G32GCKT#X6aN-`7;`0W/0YI[M)nO[V4o+I9IgJ>?4.6NbboGK%]n4%N`hk;3m(9ZRo=CLZ^4*\eAO`.e'g)Ea&Zrp42%a=k.8]j4!UtOPQuk>mmhZ_OMRG`ZM'XX'a6LfS!,_c8h4b(P":"f&=&?JZ'i_@%5l$Y?DQagc'j!]8m=ks8](g_u'sCg*BCu/+/+@gX_3:&L/U%;`\$NEc1^,,g4L;L9:@nB.k8b^a_I56Xjglg57Ro)1CM=!"hHbV8%;We1E#*l9VfmIRqEb/(Y@Y%mhSY(.p)g%?ii=Cl9jS,SSeTfo6Ebd3b;K&^Z"V5q-A@K6;gXu%8/&^(hHWrE^(TkXW8h7X3;p@m*%kS\S?jH:srPbeD?QK[$/9f6Z;jedjb\aI)]P9VQ*h>#G_=>LKT3e1F`0PtH0a3hDbpg_(f''<cC)jgp+g#l[b/.WQtYC(#kq^>`i%h(H*,T(\s$=Hm'mnaVObRME5W:aGG!KZm.*L0DE<BD53I/q;Z?1M91<'bud7eU!6J`hL]de-<P(L\08J:DQ!#aY:F+Q>tB8f1'!6%Lif@JkZGi/gGR)WfMcZkn3fW!JS.lW:RuK%e'uJu$\0-RR$;qV8Rep+R\<\%<.g`6%#I[d$9$1M-V>KZ]f]MrQR+[C-9IPWnR%MC%BQmKpj#,cu-$lC$a&r)PN&%@aZEO+n/,d_i*j0/O!,,88o\=toPS0+lqOI56pR0OthE;CEK84#%2hPYU>Sdf,YD:N^Q^rOP6*"(b%oP$7^gh9-4aBuQ.aN`n>7%V&^eaHR(M1&GY=!MkFE2lG!5c0=\>m*:1]%:L4(oe\OSg4e3mHPkQ+=ih4--=4U"9.kt/iJB(r2]eW%L[TY@QN3I0r[\g%!6D)`@;.sLSRUG-p;b!;Qu^5D:IuG;dhR<D&^u+O0(/\f^=D.A/n=OcWb[YZ=XsVPc03ZI_.l<Xp<)4B,s^>,%.pZWHIBSQl"P!M.k6"kE^Cna#>Na[:Lqn%'1((6<kh9FNgb7DIbO7X\Z?u9-rL&paLu4;/NATN?ACfc<SPWD4@ZGI<(;c^Fdm`je%p$dPJf9'&6WP:H+T:9>^4*OVL\)4jVbca,Hn_='%oA3G?aVi%?N3A7Si<YN%fKltt7@fLTeiZH.TgbYth=uf`A97*G-/AFX@48d+%gkVFZSI/+TO8F/+@*",]ODp-iX>q_Ae0:T;^Zf`a4UICE-`uI@WY"2le+2[/8`Y(<_e@:1^7\3aETc+RN!ImMP>sCL2X;#LJ*s%E%5r\XGF_:m'@5<pNJuf8_AhYe5E@=;9`58=68s[n'(n="AfsafM#cr9D&IO&l5I4Z9a6S!-^5t_Z:QeI1Q=9RjA;>;?`DLXrm:r]@%[Lr&H1>7%a^eDA*gQ9t90>G8BM5]hfXZ178Ze(T_EJcbLfM8!m7([$cgU4VF8pY-!mAak]\Ap=<#s(ZM[rt]b6Z3p+[/b[>p@\D1%i_I+<].te<6W+F4RkQFC'$627,?F$W`e*Y`mh_MpY-9cZ12qsmf<*S4;.rm$D>E.khWsBB@Ssp\:#)'WL%Eg0rRE/E5G)@Ks.Z/\%W>T@<PGJR#[dk8O*>3,Mf-KbUM3(P+W_Ki3L?FRJNSR2RW&OkL@8ePthb&psGAj=RG=e(J'3,Ipf'>QRV!,]0PRNX>a@ZsX%L/JX%ge=D?Cb(;]p.[g_$89Hjq6U#An2arE*d<9t1mlp-]=+7K(bLM!aH4:pEenO>U2b)+e0e6oh+#m$fVA?k#6]piF`&u,A;FF=c:jXt%R[:_2c/\N2/mbC0?VlBA&QeURPFd,<>l@JN_:]A7h!7R1$TOW:gPoo@e$e2Wa%^%N\0Sq.^.LC)EnPgbHK@e88g5QkGs%i=3_r.j%--`J_]@c#ic+VA4_9!rCan6ignE\]0i(([krr0"(fJTseeTJc?lbV7T8%gY*CDGY'0sHmW';0!Sfb]t&bJcC'.2Sb2pTCN>3^MYJ%ZLs9MGAf<XcdAlO7?Zp2P`EEW)\J5Q.jK1$MZ=RKC<sV%R3tMc0M7YZlailR&-Lq4*!\@GecpfV]-5)%0:q:THhuTS")FqZ=)S6O%McjpMZg<LENHN"7eJf+GIbj)V['8qfHGS.TiXt^,TU+YS4pLVr+;NP5<,(YB^6.qamFEKT4eY>*Dq*#a/LR"f0J03Z_cB?K;$&Ol%GHD7F!B!g4hc5="Gliqu26CLj*d\bblf-$`/=V9oO!h-D_"<R3eZ5l#f[%<rAudu\+a(5hLk0Kt_Y@Z1Rh3U,CM&<@^\NXEDCA1S%=L>GX9hX3\)'Y)CLubs?\F?d0J8)@+cOBF86f!@!dTK@DGh%<]FfhZSQ>+#Z"$oM$>6LX'Q.%XGU^X;P&1%0s&;rnb]</1gWHpH*%GPU2n^R<UcH3\mt<ms$::W"Mp\)2)KOC'lf](].oO\GOFg3,ua_QiG&E`5FGhV<jkI.5AsCH?,RNQI&>#3Z0&8D"l'89lF+EZ9D2%$C[d5EB8NPFAlMf#kQGels]/#O_=hOTWO_k^UF'tq32USPN+Sl^&.d%LJ7WtPNdjn$/aUte891$=/tNV>8j$o[kp)Ce]tQ%G^kpj%s0#/4hG$EToF.[8V,c!^qXoU@HW]n0oR7ei5lJ;4>QjM&JN4LfKQS;BI_i3rBfY]'5tA$bchopcEM10AJ[m3>BYY(dT/>)J"9uP4%Qb`iJO=pGZT`LXeq)-uA0a*!jDg<p]q@bMe(^CHhjb<l=`uU<'STa<5*IEYM(s[8Q!SL$><+N$B$P'EX82\46Jk@!39!sGCDlqrN%?R%Ohr#NYcG_!Wpk!^!VV1oh*+?JH3,oK$AMZpUA9c@#mnr$TAn!jd_jcBGnoKsP9LBMF;2'%D>8=`CU0>`N-NRUkGn+KW"nCbtg%X[&EUaBCXC/mnZ16T0Z'?LnJr&4s8uHT>K//jlhd<(;^D3g<Y[2,lB0@"<ZC:gAUS1L[\T(,0Pfnm$&/4e<=1c?$OLi@J@HOa"+b%(Htb:JT0Bk&B370F"!,66*$2.X?9=%(R_Xo]V[B9!2^K=_'.hGo'gq6mPS7)"!DdEc4f?"Hti]#1fPFY+<<HKaUI+:K7c9LO)26D%\D%@&kL6p3'2PCgBf0Nundk!LH2VO(1kZ-#@nX\#5;t.*ngQ`^0#\!3A'2mRnf>5o97JV<fAHqa;FsU6`VJ6+Lm:XI8a`i;N+PCg%"c+em9te#up&g\LaB0!Z*,t49"US6T*TQQjhAo4J>ULQYZbQ*8V.W.iEi(T`q#Jn?2q(]s^"dR2Ar#a2j^ec/,@esA__D66f_`07%Y:`$1:cCC`B%&ClY>cb\mD'VE56<.%ghG`Dq0hYmc^7fG3Xs+5O6-%!%!QqqP0SBU&Difuc)MB!^gI\u(GGI=3SaWBBA^4^/$?nS%M24YlOlZS8gMtaR8LRcRj^Ya@A@b@_,14-GJ19IIOC*;@F`oQ4@c!:?b6pK@GkSUnW>Zss=MAB)<k2J@h3,qV+SQ<Ela*4-K1[XA%]Y1M>A4`pPdfYofCEN+O)rSg2HVt_#1bd8!3509CKfot-hC7<WA]%k,Ub;2ui("hM!JV[6SAfH\/mUtE8;eL+5KV%MZ6H8B.rd!]%KRE!=Jhs[EkoTpQK=7r93T9J$l^-'&8HQ.$:jIo*^.dFV]r[iM;c>gQ'hutHjo+07cEHbIH1'u"=/&hu'>?qFT\&_Nrn#SJ#2TMU%%JDn]C[*d].G85LlJ75#lad.+#pYZF>.14`Sbn;Oq;S_:!PnuOAeWsZ#RJ4QEtD\I`u^i_%u=,CPb`,JYLeC-E$%%(ku?G>Rp*^Y%m7Nuiarc@Co[Mm6c]Xc_a*i@D6t?MT6Ok5gDCqjeKAurH!-+393fC@.4(K76%cjFh_,HNV?*9c@WP/RT3`@aEnPYJd24aDqjT8OF%WlJ^SW3!kj,:t_P*O=/\VGb<]q/1]==_K)j&HY_BAa7a=q?\s&od$fYH\Go)8V[eV[Y5p84uk2dhE:2R<sPPkUpr#8T+(bdRl/FB%mC)2P(#X1cS(dh>$!G>l'KBh#?V;;W@)o6n[!@dYLbIH:e:t@F[^4Q+cSf;T68:WXlt)Vr]Vij,o$n8i<s[H:$k+LcL,5!RGtge&%'.4NfMAMhJp=\haTk_s?@j30pD`<$<8]H@Gjer2=^0ST7%:Ksd6nq*YF"a8k$j4^e(sLcN.-'0`55UdP1_Q>J)Z%.'1\P(M!V09e%*FSDepYA\YV)lek4YCX3du!T.:LU(!?=Un\X_ETap.Fdb&Ej-i'[le:8%[r()gDaaq\R>Hg>u464laAe"<Cu!]NI7>rd'!:Z9`UU%?M'']`ZglZgA"eo")i(42.bg\@/8PC"1qJgDAU3lM@i,DPR)9$HdRBDVI?c&=d0@XDMLa4P'2s3m!U8%JmuUgO$`nq6J;ocWun#\%SdbCW7I7]KRQb^a/G&]iG1[]mm'(A`(m)EgI<j$gE0j2tm-ptjVZ@:",PT1Cq;E"Ood`%B*go*UF/9m<N^R0)/-l)u3+*f85[S;&%\lC<4K@$8OHKZ"\r=?AF2Y>uVojR0(*!],*XD'jcXt.p%kLO`eH=fE&]-3$&hnE=P[3WtfNTUW/B=HsAR:[F/)emIT8%SS_A<#'K%:d4TTgL!TGU%G^o<re6<`1N24_]VajD.cHGjCR'27=&`6ZVY4/*o^:M7N\?da4dlViR!.8IsikuPt6#0_ih2mmcT)O<9rcRJpm68%r"0J]>d/g5L;=@%_KDD[\KZPaZ7'Ha0M<0OI=ssUNT!\r28U]VD//&&:@+HQmg*Y"`,!r-$&H_5-G*/Fdd$D2KAEWdJiJpO[L(L-%,f0A1*7>`/TE2^g-/X-]5_atl[[_%O.O5Z=@4,eaCVCuR3^&d$&h0E7i,R*Pb\&9jg$@DdKhOT/P9:T$2h+0Al1M*Sd(eS$WUqV8%R@Rd]FL6Psks:40!%!BY.<3cBemE=tCk?a>1e-sH&CGO`<ufrRCTFFG&DL$ujg5nD`r'_#F@_mQa3.]!!lMe="-;bt5P)uCj6Zqm%;tc4I_Mf"QR?Qi^If2sGXP8["hXK?f@h"',Ian[0V=\slOBV#!s16V4WnHIpnn77",^/8+][&+,A.G+A[f8d.M(DV_^])ojrVS=[%EDF*L7[:JX&M;EPnuf9Q1"9aM6!h;)ln!<TJ<?cL5F%-%16CsNZA\^)[VsUQ)K9T&KGEVF^Pbo/04DjFh7.c8-A^HU0KEs)g@'[*%mp+=0lSX:/S.h0amHHf[!upCA\.M8"4dc[O&ha;(,1-fBGiK2Ofbd>.]@e,?$'*JNE<-F$+Y8B6rjkl0mf/)%]f6IP5uN:2n:#:I%lRKAp!E@RZnJa-\Rdl#s2CBHP.1#^Bje^"%T*]b@(%g^m.FCPh-HuVAp_C``,_h&rHqQ>Ri$;`09r;Nonb*n\'k]D\7!2?dk4hcK%Kmk_*O!nraG&Ph]%bjZlBXo97%@=HKgsH7/=/\iBqb4/<5,unn6rpJna^"X_L^a(b.4YCTHbZaF["P#D;_19TD'Y9TourrP#6*eX%.Q"1kEW$6->fIjB=Z)ih0d:*a:YcV>F6eJ/\!c^B2*n/)N:(B065]ek\RgGB[>u*NVhS/)89N;nN<uh+Zs-SGb"(d__Q>3>G:bDU%,YIFB=(RGkA4S#J38!rSTT-0E6#V6H`O-Ie\08Nl/YGMk#?[j[*C/`,I-5RG+51ge"^B&^@DF<7MW=tHd@^5NoR?f6D49kVH%aA"%7]h?;kjQ(pM:"3p387>iK/aKm?OTQtGH()Q+iLo^qhjZd\"U@_`:]<-1DdGHZ2]DO8d"7Z,'peSmPtVGo?;R'\OkppK.O_egbGtT%'>h_`U^i12S"?_?i2ae>_J48`1,2a$9DclF&H1_S^d3W\%k)M6(X]Y6o2n8s?"AF>_&Ho/afq?>DZu7TI2ZD-a4*J$d2MTlMM="F%-+J)lTf52f6Dk.I26KUJfdlpXPNqT]T]rFI5X43W$f,,8EVMG+@.u?c'E/D,IF]6!ern"bDb"46HJ&C@dCPPE6e=Yia59cUV.?T2%_(A7Z+9[iU&duS<6)AtSjSp/n%^/G.+.E^Y'g,f`"<T:mK$#60&$76]5^>p'/*r4pGTo>-p?+.Y$7Y-/6j*%KBo&`ig6-1sBO9p\%5s:srW;IOGR05F0FmK+/.j9c,gL8/YF[B,EX.rj:q\;p-Aq0\K6*U1`9UCm!?!XX^O[aZF>8ZM4mal<p[-C\6\9][e*?:R$JUu@d%Tl;;=Dt1n"0/h_5%atEmY-$%-nYc!:[m*f?qYRV%VZ+D"Jme,$VWS^09/ma`XcH&5OpJFJk@%Z[k&749dRQhY4?\,mcr>*_O4Zb!%f<9gVWt:c6T\rG(1HFEOR4$*t?8"\mrs69OUcQ1aX++OH+mE^Wf(Ya&@^f=SLpLgYj-k.Rr7d4>(f'l-P-+.#[naN0asg0<3to-C%O$>Iua0M?jLtKs@Vh7L'(\8DM<UImp>rNJd,e.ro04*L]eK<iK`B3k"Dd:kFF\=bYTdjC3pqu1O:JVIg*2*UlG/^O_M):3''=8"c%?4eXc_^`cZ?i\<0H7LM1nM[\aq\khI.lsuNrGnra.\Le*rZeS&k7#9:Up>d0U<8?V'#P>N%Vp@Qo"3m0+\3%#<-[9HJR"cOIIDQ?%\n(jdg?mmBF4i_W'D!<cX-P(VTC]Js=eabAC1=,W@_+Ms_=7@4LMGYB$)?A21RosqW/%&/e+*D'*W4PK:'?GT#oRE$1(q^%$M:bD%S^BF10?&S:%LT'!6BJAKAu9gG'.A(mFEC[o7uaOKKK'h$&Q#"?(UppMCq^#[^DSLRg1p+HaFF+T'-8$NEY<j7I42^do.fk6A4#Ak%,J.k-r1[,2g<!->3QZ`R5<7-ELaTRX4juZ,+O,.^3WDY6oD^W@/kMNOa0t(81^CG3XKE]f#Xl%&c.fpkC9+BT^mTV!CMcS)aZQ:<%MTc\P1?Is-4ok-BnAk7iAFL_l@-df14gp84<P*4;?3ARjZ.&7>-krB-NG-#oZQPoP9NMD6DsWiu%e;RMn7-*:G#;"O\Xl\\iq=&"%Fqm_&7KXdAnUu81df(gYj(h@s#m>$eM@'2:,K(&c/<Z'-anr5=K9jAN+af!:!>/t:.bmGGG(?jO@VJ=9Vl;/.kMoO[R%0MbhAIAo%7W1Ek(Jbb29:otOg`S!35dZ5_;cQWd"5_QSV(csU-CAWHK's%0mV6J8?b(oY3AG]gLAfRkM'ES7pfY3.oVuOX<d39crU]mus6!bG%k+lc4C&L!Bpa)gr/[>DF)?!_'W/3YPRRmusUEK9;C3@PPT.OYJleqkkVZ]c/^G-+12:EN8IU;BsHj\>Hl5Z$+#T__jJ7ru[+o(o,%Mm\6!oNq8c4jG@3#,h/8p[WcVInsHn\$QOWJj\fN-cfSIGB1+7bnmr"K:(IYYY0%;-_q&C):[UEQ_qmA:Zii%,k4[4M!*j!h6Kk5%U14f*L0/p)r-m:JA"f"1\NVY"Is@Y4*1RN./JOFIH?FWt;:h=Y9;O3TqKWT[TnfOteH?AK-N6iFbGY6j]8UK35t#7k61*?4kkniB%Ng](b#_GemM_!uVJj:ShSt2qhQkO_VNkN9$\nUH&YM6O=SRC]>Y1?o#OUf4FWJ3tK0D&*m_iJ)C@*<XIpD\X4i9`ZP7&NLt5X<.c%:BC0=C"#`_!=4po:]@>UOEF0eos;sgC-&b$`fP\!5O<muKeb&GAFEhVN=s!*'`(Eue3X<PaDRk)B#F\R@igPBVU0VT["6/J#OlZ;%?CWLW`mf@=5/8:j?YE$s!E2*9@oLQ<+dmCk,-]5XggTELbVUJYAn'S1`Vm/sjq9;7p;TY)XqfPA!VAGtlcG!`)S-MQ\eN?q\uaH>%8?h$OfCJGYf[5BGI1DJ@WcZ)lUhla[5@^e^KN/QXXFCH)Jt5?+'opFdr\l)%Ru?B5T.g"9+$Um![)THi4FZXU13UGF46&BN;0`^*%ePt$o")&9i0G+Z&B3Ba@fWIRd?,.^[P[!KmH/7d-4<#4[3Ycb&fGZ'IFH.a,\o#^EXs?N41sMhBE"A,tBkZ!O*dBl0C`TSE\]sru%m^C.ej?M='n;XfY"9<&gY:2J5bk'RQ.c@!+RW!1pbB8C=1:;98Wo]k&X*4"O6k:7o&^?W8\VSf7oD:iRNFbG12Irifl,*`Mco[%H%lH?s?/PXk`'EEgOaX$9iJ#-uoT=lFJ6plH$#C-ZV(s$%P!W,tN,4LYF09T?t[KG;@+S733\:RlVF<eIXp5<(%!cGNO(\kJTq)rXj%0Fg"7Gk/EprdrF4S*1l:W`g[$=)t4>]N"?'dBX*E\)f4=/!A2:Ee-k_UEkJs<fA:4oa.N.EH`DR&Sm[<]U@t2JD#Eu>]*o1Ksl'r%r+a`2A"?H_cYi\W7o39\S,AY<OXqCS33$b$DkOUQ%J1NBn1n9EHF887Pfe,=n_'AH/+&51D<ukugK'AMOgL-+d_-J`MkFZs5X`a[%dF>4rdAW<+1Z'>Pfi`9Gl%jgt&sHe><buVUM4U@(7Z@?hWt"4G2WUP"=^5$r[gi$7"D>A)*n1bJB5Rr/E\NNqetSE..uXo^QRoH:%s86);G$nWA*7lX%\N-h(ZZLXZlG'GsSorrVs0(_"cRf+Pb(fM9nK#?qs1%iaMuVtZG;.N_P";3.8SH2@5#'YX6pVgM0/H9D<AX(#%<IGZ%SQ'b*gLchYkfMFJ-WGF#d5U)$Zj"-G:ZKqq2?=9[%UDLVM=QMZgEkWEnFRU3n?VJ(N?#1.p$51ZiLg*-Cd^YF]o*R"8\95:%2'[D-M[(A\Z/+foBZS)gnpp`8oah\mEZ-SVS%oVLJ+M'F-":S$>IuDVP1b_n(a(K@R](rp's2iN.]#!M-0nD8B<-JJcD,``7RHG1%]A`\>fck/Sp.*a5_$oD>]0`TZ2u=qo@:js\1Kb]QHeq2=@tkc@.2&Vi1j$7:?V'sb7]I]e.ScBP?]J$p@Mp(cJ()qCK](lPES-?@%r>Es*cZG%7FLmUeXjPKC&_YLj5R6MIish[fLIge&'H8JN,hk]tNn0u)2RIUN]J9:j)Q]IfL4&>*"qk0%+Gh=r84jCK`E>>W9f.ej%42i<#+n*tG8QL^d;c3g7XpjgSN9NpR*h^CA]OV8\,]2(Khp0FFrp)0[45m$#\jK_[nt8.Z_=gTl0)Tb!WE"1%f?:d>QTY[nRbbP$%FmKhIn';=UruC29Jo&,J??Y<ndoc#]0pa`tRT!!Q[iQD<^s09n?9YnB)C,I,o</%fQt`1jL`Sq>q9TiOm:u-dT#IFbTDnPDlrlh6%fI?sMY*TAhIV1;O]l*^jW;aB7ap'_(9g_b.I?&slM:!?c,(1X]P_2SsgP^Ni$GUPF0kG1$e>nbIgL!6)et(0G8-58:SLX'<'?$0P%\Zd\.'/g<1)H5XUIu45Mm5oW&5eHP(AEqA#]aM@f^#&4X'>!?uqkOuC=/peQ16Q92<Fi/a.q0Z_OnTpgHAW;:K8iQ()Y8hH/1+ef%WfjR>@7E</4)Df8r\/;8P-BBi\S,QfL7kpo59E6DSY+KHEna-Gj6rl,YIfD=>E\\5E+/HUP5Q*g<r%s"a_p6sZ(+LN+h:uq4Sss&%"fca"jE]lMTIkhe)N^@s;LDI;Y`Z_q8]lIJVAE]nCm/KtdS)2XY4:"EF2HNpiPY%*F4DNra.(8V3s:aYZA,0<UC-4IaB?Dr!^j@&%PAW?1FE#.GM1q'ErshQJb&-knMh1rYWKlC>!)`5D*Rc81IPCeEh<KK9hUucj%k)^PCs*%9na:V@_1]6jU;tPh2`]jDfrjsR6RgX&%4DO4/;e8"]p9DfcEaT/agu8>Wp$8^gOm<nLqlndIYNj>nCq+er\t?!9Djk@FhhO\SP:6puA+pZtceZJE4^jcM-(CE*hgb-&G>G(]%1Z%2#rI<r6U)F>:!(sAtW\cd@:a9h@LLo@qm:;4,U7Df\^QmAi+[1\GG@Yc=RqgeX+,,VAG4qPKTBR6YO@M%=#W>R09]#iSWX^Rc%TMGClR.&j'jO%.eFcQFui8?`:F!G4T<nF=#P`99%m?E&inB-,q$B-,T*LbM^\B@9)J,4'fl7Y8tOQk&t?6R)Y7F;\:$'mb[IPsDq%`RF$e@9_&;n+SXBC@_P,igp4&Vf<t_mrSNaTki@r!OVR-)2?sD+=GcdIu5#VV0slIo/bah3jFmnF_;/G3*s_qFU8k&aut\M:bd/<%q<%;J]"Z[ge1DbU*tS&\Bn;gK3&qs@d<2R5Z8m*D6"9cpBuLk>FG1I`&fQT;=7nci(Ni5e[q\lV&)j..R"X/`I+X^IT_+M']qi4!%4F)fFiU#9#Y5s9a*:c;H%Po@C;qm`;b\r+<UuO.iK<*#S6&SJb:TdlF@03j_ORu]\7_aHLI[L--cB:hFrQuV7+.,m_VaV84P4jgm%NFU^-(`.%W,WdJ'&>=0_#%Wu&3mo&0Z-IEHom5'4pdd(c([?*5_c+Nd9iE9_gVebRSdYu?16J$oYp4L4?[Fu!oR.NOlQc?KZAY*`%=5bh`OiGH8<tL^M>,*qh^O8mlAb`nil),gpEblb(o0FJTk9T?aSGNIX`/+`3]:QJi&*$YZO&]GEp;l8X+TUKroJE5RCDU4:jbeVu%Y89'k"D:bu'NO@bmp4gGb\sVWrpf0kplDO#+G-nt?5BViM+Gp,b-%<O>0FHhaC&hTJS+953(:F9F>@1O%QaFOI;JmJ@at.@,(1.P%VOP0Jp@9m@0[m'3='I8qQ=?+K^iqq!S)c8PniiPkH(Va'j<8%k,)<SK+-Hs;fM8'@]XId?cpc43"nW2,Mc3CdX!FO7@GN^!2(-9$%c;,$qQ4r[:<X7CFf0f@<-LaN0p%<5-LAuou7pWkA88P:G"`76mX.+j06m1qToc\Xd@gNU4_Ee4ih<Kq]U.V(6gXRdnr[($=APBMP%J5@Z'd>EEF.``)np>_TQ*j%tLa+i]AEaSNb*k1K1T;L5$h<H`A25-Zc,F-4Ce;Wg36-ONn52Uh[?[#/3U?U4;Oa_I\<6n4S)c9-f%dH>D)8*2](me%ou7(\/.rkk[W+:.0f5j^r33d7]UDM.XmV5)Q3A8cIldXjf/2rdZaa$7PKAr'I/SAh6RBn`iA9CGTAWEaRm*.S[.%X5ZcFB'[V8m!?p7ag;SVO`[V_3OAj0+#tF7SSk9P\@oTuWP@ksik-+L#F[@\D1F$GVb?Admp@Uk8[lJL-%fW[;>Q`iZl#*@dsdt<%rRB-'`9VsR]u"bOXI2/8deJSe[rC>:F89b^VhF?b_(IZdA)hM;U]-IdF^ZI!6CR,OT'n?WVS*,KQA#7:0Ao4o:B,i^)_X;p/PYQG%G#$faWB>BLjE!r>j-Kd9i#Og`ou8Ds>'4_44-9Kri;Rf[r*$NoB8/XC6,+#"2s,OVX2XL3oEcm[r_Z]i2R.LPTUA"!q(KaD2P5Z(%c'8bOj!d#6o*Nqn3'j9c=taEa9V_UjNmbq5ii#_ZQLGQO=P/HTXdPgk"SC5hClF8E[!jKRG8I%PknViRGJ]<g:[1MU^t1n-*tM@u%3g+ErmROlOs2GK"4D?+\r6Q&<bMUb@F<lre>'2H878>92[`nqL7'EdFh:a4h81][LdMcnZ\>>M7B'L-Cga22J5s]kN,rjr=[tW$H%c[MqDkghS6d1f@!H0f2"YN37WBZ\gW.2MRU>C>4E^[<a7!uQ#p`%s(Iq'@b3de_\mSjq4h?:F,ZK9@_*EZ'B2]tJ<.!Ek8HLG+):%cTR1,4Y6L*i%qqid)?R]X`Upt@q.2(4=ATi$U-_BHbSY+oitq`[#m2`DKdtO2%]Q=Qi.Xh+,nOiTg!Gl^1_Lhs!:,"'B]7?YLqOV%SV=qj0^H-N%"Ck2-bl(lS5RccX=F`;V."%mY^O3T*'+PT#U=/pD)[3X2:-l<C`!7A=NhFRYce_<KbFlB@RDq((VJ=Bd/3Lfr=rsQ%_j#1NNNI6H!V4;C6O29l`84RA\:V\bSslZmD/=5).jt<)9[qs7R^eR8[&.Bd<m"8:'<?Jeqi+/gHQr!mp$t_Y'6C80;k!;`U-T2E%+pZe?g[5m-GSjJYen!iO>5BKAqXa]<;h.6D1db1%p-n^a3D+h^6X!6PB?')E1I`Ki[6806,K;KA0R#?hQWrgCC*nG..XVMY)SN<,%o*ptA;PBNeE*(m])fO<9+EB#S#o2Fd]OBb"\V7=f`9,=!Z.ruuR9tI#?Z62t]U%3(@+pn(0=#+QJ6n@qIVcW%;)m8s7+0L;qujmZ%I<OI7>AY=34]d>`M.:N?P3O[J?P_>bd^%SAR/#$<Qb$7[5gs;b1%#BJ%GP,/DL^CTE7u;nq3FHus)ih-)-A_\l3XLgNZV'3pSoF0%O3q-)q^N;FUW7/oGE[`ZN!d[loR!D:X!*Qdi&N(SlLA95I3ia<L6N/(-\*51?<au/YqmA4F1N5#^;!T+F7&K]n&foEA<#Y57Oc;;%8=IeMIf4PA_&35"YX^Ae-b]R`o%$^\nQ`LKU.ahdCsnNm0hA>Bj37HCNTPi[G&Z"-.@PeifJZa898p@l=.F=-$U=.km^@.;Zan*@%e_Et^dO14*Y?;ATECQc#8iZ3s("CHkIeCJP[_Lbig\Z';!bGIDRc^R/Kl4g@\ARP6Wj=`iT2dSD3t8-J6JBs.r6uduDmb1!Saj/[%**9:GGOd$]JZ?8aOB&oC;ZGK>?DPL&7Je!]I@%%LAD-@Q/l3g!!5U\QUHh3COMCe+^YfMs"ql:kN<Yk,AcNGs)bP#nWUk8W8<1Bi%m!<_.\>/.J[5hb_DRU).BAq\L7-eQme$NOP\`F6e`PcVGO)(Z^cXj"jXQ!/1he)Oqp?4)%STX?O$c(#aoCWT2M%3=cGQrmi7,uKg%RX==(VK`YkM*!qD]g)/VT_taFqqWsc.>IV)ieYYD_%DacJKm()G-Q3SCC+Se(Y0@DMgO68D.;sX]Wg8s+!qs3Yc?_3N[m/XP&NX-%"1Lo-=DmSF)n.n4fgnV':[AnU1gqg"pR>MW#80HkZ3(kpc&hXiG&^<PbkedV)8?"7ja?d^<@ruVM1kSb;#9jt3p0orot-#J7>BUq%&9Yd4dN42A8"ZLmFsTX>Xta"cq#k.^ft#pN==5TdVEWb,:,`\@$op"JWh8S@g#sF*%H>^+K2`r9$Y96B6)qhZK'`')m-osaU3+!u%8t*>VI.g_4L,=DTliq%m:*8j-!"6n>F/U$HS6tPWjn!,h*Sn0Ul(LPsR_Ndq,MQ/HkHD(W+&H/90&==t<IIo9qT_Ppe[=-S=U0%A%L?#05Ke^<-0&>dEMqs%oN#0+J0-Zg`h&Y`>N/TZ$:BgZ^088@eNDA`uh,/<qSJS(jOJCQi\-L/6JCbsT/d$<ZO>82I6LC\;c?\nh%G[-kZK.\?l*EoacUJ34/45VPeD?5"n1a7bP\>j6kWAu9TfPKJQ+;f146V5J?DI$C<:s`Ai,\K5bm0DVu*cI>@:EB[__*_h@lF]%0%E6'CD>mXAnOu3[;MNi0t;GDo--jG^aV\=3/H2EdV*O!#*YT%$'mS`balTPqTr@WBb*PoNfm8VIrYupfLM9Cs4a0Asq2sHfhj;QPL%Nm-q3?-2EpE+8>dZAg-i:!joCR3(=sSZO0HSC8?_<cdFPR<:KOEpqh*j,LUP*Jmak*\s@M:dW7B5m#ud3t;T""!2"!F^pQMM15qM%%N]0*DVkPD=Ng<J^#]HH8b:F&Y*nU,"X%TSYs>`g2tUuLGG+4$)'+;1hsaQ'ff^U/X]j]4p"VI![KM=KelOJeOTCHtaO2dnXNEf"%#"_rd^`RD"MJbdZ.bl*7Okb'?q^FfIFd'.8E3WVQ*.I+Yi-GYEZ?kt$L\Rn'qsJ?+_4>h.9Ju="+%&f(X,s'[6+=?4Baf7\+D:sT%l1auKLULh$9ZSqGQGk*kd0['/YI&=^fm9HW3o?H:s#RuDO\'uPq*VT^L[BYukct=%(35GjcShI8mH8u_B:=airQ+jG*h.6S?A/WJ%W-@`O;"Ji+d3iX'FHO+!Pnf+"g$8D,Wl\FeVPt'dQe($Xj,,>IEQ.tk[Bc%5"#Y=:=<)Mpe,WemEF?$mZ"ZRDoU*pGh+2Il1>RV8%4AYT36*)Y6P<j1m_OCeoCptMa%)24-BZ[1-VZNsGF?,p0rjhJ`AU>s2=KP2PA,o+6CuB64bB)eH;*8LlfNRWtboS$]LVeB@rUNVU%a[pWQBgbdYX(95LmU030/A'_H!PsuZ-&!8p+Z<9+$9^C8F@C63lNT(7-/gcq"*/Q[VA[tu9&I%Hb[m8WlVa?9]q9o)T(L<<K%hmo%BrO_eY4<I:2(+^*%]P1B^5K1iAbcbOA?#-m(sQH?'RGg^?i^FK-bSD@n^M>,gcWo)DsLg7EXm8bAW4%?3Ik\j,CNLtdJVj%d-0#f%N_#jUDe$Xh=-!)(9r[UN;0(Et7oFTtd>.m8HJ[qJ]@GrED5fda@_s?I<h0\/F*t/S$LXtn^hIYB8m%[VSGFg\k/_qrS2:2l,sKTB%+6hUW.7Uk43jCn`!^GGb=ZrbjK%1An$8U?bBe]7HX'45_1U^I$e:rDm';-L2mRbl-W:_!j6't")qgukc.qs(kf+oV+fa!Uc]?h'\%AGG"3'F-P/L;]ASH6r)<7N<.HYjU";$(U+DQG,1%k#t(g<UJ&*0%_^8)L(OOg(]O6#*&K*i0X02"`@)/T,c*UVtGe"JYDu9q4.>,%\$MED`j5M5`i23(J]L!=fac<qjj\R&I'Tp'AG(sjP]s`!L[0m^]2r=8jTJpi%@BMpl_rTm^nIsiP;@C8GgmLs.gP+p$"n\9*UCc^%#Hr"nHa)=Q(C#'GpmgNkdM=?kB4&uC,S6;DC\:_8ohhUK<]-DO$aET5$WN3D*TdGUbGVX?%1WB@\ni0uD]^P3&/9uP&1h':eol93%#d81h51'2a#32iUi]&X[;g;6h`-QZ;?T>IeLkg1a(k$nfrG1m#Nul8Yi.V;q`2o<ACV]0XE@'9.[K5(-]K)@OD@;_]e3BV+]%p-X%.f=G<hGSDZd<5R$R-/nAEq\!0YcRRYDs>]`Z!PHc.`gD3Mf]GIHP\p"%#*.TN72NkXK%0#*^]Gap<Cq=&/F?9$-rUWR3(!sh7@@n%gbmcL#[4Os@*cWRC8Ztjcp1uQ@,:7n*fBSZ1@@K>OARR@]\R<E*/$*:LIb3m3=h]pk5ZO#:i%215-CaACc+0J.F1QV_P<@)HsW#s%M(K+%o\Jgem86CJ]Q6bZ:QZMJ#[=oU+K[sEYmLaWI?D8&:N^pHd#A8(6Y*j/Z!\(Bkk`ZPKRrL@/Y-:TRM*opl\5&hI_YiXO*5=e%4/39kPmHgL/hPq`<lUUkV]HdmVsIj>HRtY-`=/8b`\#X_c$$LQOQL^oHkMq1OM'-bMs&j&r8Y6A+5CtQg'1nVFO`:Z"c[IRYP4dg%Q/(gcIF^S!oF,s>N-?@?gkV]oC]&Cgm`,aZs7tFF\&erp-%>gMpW\9`mqE9EIog^L[Q`9+P;jV?2?qC$-NV5?'4&!?U*qp0ftT&Q%GiX$0AX9-hCdVQoZVBkO&[KOH4rE\rq,.!18(mq+-]t"\d12nV=Eell=R1B9oQ/gP7U`p!(F*GC[a'BX&KAVs"-=FGU=.*ti-,S'%paI=3MS)1A))/BbHS1rA0NiSC^(*n7<eG?&=o(TC[9l?=AFS#ni^8J`P=&ARCaHbp>S?Y+OG\n`h*lf6CkL!@@<T-^,+[,J^d0PG%hUNC(TsMM\OWoTllk="FK]/>UgdqPlSrfCeJkL1hZ=Vc&p"Gt%DW^%[l/1ZD!1kc]JJeoT)2tkDTlda(Xl43SosNCBAE>o[c[?KN%LZq<96&Pt\B>8WVa8n:@XqIN,)'nD'<&K/D#&qlFVk"K[gL)<`RGTU#hpQn:T9&j[k';9be9GBf-i7?g=8X_Ho)%OH=mqs0m(-@E%ATrZKPik1Ec?ae&:HP7jcPs!"NXbh6YrE]c?9f&B@S%?5D&Te"Qu0$qF\$lid$7$_Jlnb#%m2,Pr`RPNYqXPZfi0"YPm$i+CX6(d%#,->&?Mc15#EFgfoO[D%V+U`84`LgC/YpG=nVWo'Q+%F,4Y@'[B#h6*,E#NA/mg:_E=-pZ9qKNLMpQoW_!oG*G'i*QEKZ.CF2]id%e+>e(ZQ9BhlRORdbp<3u<sp#6Ymhg-I9\CH*@KHkm"*5Yc08&5G8`B6_ol'=aLsA`TJtR<YD`/N>W'Y3@7'5>K]G$8e9A@r5CD<F%bCf.r/gunYLVkK+@`+=Mb0\nbcbd1Ueu;b(eh<QK>FPr-/Bk\(oGT?p)/qE)AJfup0T+,'&YG\uF2Mg()c?D:ma+Bj-TqZF5I(d[%!Qh(OXZ,fFNXAodQ6P$/8Is38(l]!/,0(7c$b,GWBLHscD9Rb'.+/crV;%#!EL(Z2?h^-\AmaonkO,Ocb$a/H._b+&f]mS8SA?1[%L=i$Aa,>h7b1d@$dlOi#F^YooB,&*]Z,D$^563'=UJcFA>rO.k]S#/I-[Am+Z;(k`a*HqiU;Y=RY/:iq#k[N.3JHH<M'7W9Mhdt@%*fO6ZM@[H2!oQ1J<Q$%nLHYFH6^@b5osID+YZ<D^OGb=HX>*lj1f#LUPP[8'>>'N%\6k<X?ZsSa=WE,RmSpB_E(+,c`=iA^<D?U@%D-E\4ZKN:"?(OW!.Bu^H:]UV/7(0&CY]i?q"bd.;8=p%%TQ&RcaPd//ca!s-7qNKufeX1dA65dUVjhICMKUJS\j0QKSnD,q0&R]b%7.@Y7CW;H>WRAXQ]&ihJLOe&mE:.rC[]7"AP]FBfDkkChRdD.L5<3NUf7WmcSTS0^;md\nH%FBBU5=4Fha[cliPU=u*c6Y@p_<K4%TqVa$CLsJYjMPDR@18/Alp"/+QHAGN%gu?^Hd,V3Z;H3#_UO"A.fd8gqtI8G_E;jqYoqW@dk[7j2J"Dj9A)+KJH6]aMVX-:?6gB.%)`SoK_m&)5S/7d"e^TbQ$KDPp]<NPI=X)KaB>B<hPsKSCW=$OFLE)E^qP``a,pW"Yf!MCK7Ju\<Ne^l'PG6=o+tiW.bXA3s[%Loe%=skSR:%A2CrFM<upc_`Q/?,&VP8ah-%!ktYO$.R/4g4&TK-^!%$<&DJmdcj>rO'<'NeVrtX+^Vqjf-O0NE7J6(grMrl#t-%?m0Q&%[$iCg,V5gGFVgTjSrol,Hf:**iY]>ErUaVJQP5"6h?o+][CgaNG_Cha91*_A-(#aDVbKhK/_7Xl&o+O%/+B7+I.VLr`u#BA7S_P'%0@]i..:'"l.35Xj:KE@(I4N\u/K[;WlZEeX1pAVeoWE3+>@M%6A`(ef?Zpip<"6_cCL@eEqP$Xp#-OaK0ETCSe-6$a@7m)7:@p^`%f7X\Li_\29nLA[,2e72"_EflF@Scaa`=aZ)oa8DC@q_^#;qp5j(;icWr[`0O_DGQeg^1ED3H<k9G#+u&ag8j6fQWBcHU`%[X'/r)%>GI@<G35f2V[s#N##`j1YI6T=L>2HM-m2A/kn%1boUYLMiUl/gB01%=d=P<aQk:[$C!rpla?(iqkT'.7$>BgE-bK=+de"d3h*]4E%I_6st8HYNKK4D$"=(Lg8n`jn\A3,HgPb\^ZKHCph2I[S;R\$`H'>2roai<(2=c&nT[DKqAi0Sa_Uc@]Y3R]WjP"%bl(]!as<$^P=%fH$=*CKJ]^H73-kN$U[<UMFmM<=.8nCaOmEhpDs8lF;`YDcj+LS,&UBW#;3&oof<V)!)joI-pD&cQ@<Ia?u?1])k$%"7kHK%04b7%KUck'_c?Df@,!66CF&jN\d\!D;\I?P,2%R[_AZj"H7X?!(-Fa]>EE1X(:3,\<:WBhh]f<0?IQ#j\(i6pn(P<A1sq9bU'#PR;j,T\%Y?9isHetD&lYVBnkI#'=Mr_6iV2N<n5faNM4MN9]CJ^;\-pH2Eb)kWM&(+@1$j;`<2YJ*]\,`t<P-;_e,nq=L3Jm)>=8U+onj4[S%LMb)8*'0(/."TB98T1r,[F>f2G(+]S6:!BlV4Xf+S)Ng(oH%>1huCCJ.7#`!6m5d8+#;hG5HS_OD=VC-EIIL=eCA&^_b/9s<MtUO%eGH13pH#5Eqom[cQM_E%1KMW#;]BSF]!(i,TTrV)fDE4kHG)D#+VJ2c^?1G`-/_Ug/WX-1qs"5*gur>!eDTaO@a:e!*g!Isk0aYq%'%X:M?,tQWrCJ$[qfVecr*ENi0S6s<`#;B3<V9P=Y,$QW<?$dl/AW!L]3k<2:a1aDgVJr<3=dA/PP<HNfX7fsJ7,!?m^tJ5JXP81%e4+>F[?d^56X0SL84MK^b?N-lUT+Sn^6M\ti+In".8%l9=hDE94tU-n0>iGjSD01MorY%+D#;\jpU.]kX(os>$'B]4#&ON/-bmgG%((YN?n#Km-6rV1_Z8)g>Faq)#oOF(VWCF]XX:bT98iR(1qF^P$E%][0`P[sO.8gduf>Pmuqjs"qUGM2p"SPjUg!*r8Dm#;e[=./N%2865Z1/m/+TD.5mZ0kWr<)Xs0?Q-U+PH_uq)m%DWeN#cN)DL<=76U(OpdO*)/F#-!_Dp"PO&-EaM\E>XMAgj2dpj/[)WPXRqbOT_%-j@.kntuur.0p;V?*Tks^BPYpfjrNcD(eu9OfbOlmAPDIjKcpO0>j[W#p]8HSZ?`!7UfZ\*g8h:UAi&c]"O;^UNM]-$a%S847;H&%hV>4,m3Vjd+"R*G(?^iJ1?YQ;\QY_4P^)'NCFH_kMV)U!jQ+NGe#AB$!4B.Bi_?&)&0L9O=[I`*Nj!?.p.ljF=sn5pj`6SpkH84h%Lg(be6W.#8dK62\*-P^XdX(k:]:RNR*[BJD$\6G!<1I#od1+k]ZlC=9AlkPOjD!ua9[6_pCB252N%=%BhH#QXE`to`baKZ:53a6_%EFiRIUL=M`'a&nV6j-j7r9?iHH+gm9AeVNJ<gV37CF.T@T,*/$BC_eP]b5oA4Q!e^'5\4?,'g(:eK7>ZE>Q>I<CctqORr`JPo'ah%XGW(Wj=5O>7K?UbCbLibmng1;o&J^tOR04Fr+]72W%IYR1\Q3%qGH6XI@mc_kBCJ'\bLAZlp%oiBO_6eLp<<h)hIQ%'D7'kphU*6%,PZTcY('fqShk3g8MVdaFJ,%H![VEdLRfMA&Z3ca$2/S+N*Oh$NZD<=%^DOkjWoW!"?4"ik`Z>7bPUX^P,,l#084'rl\Tm.M$H;M%\!Ag1$(X0CH&BuEFRk/OT6k5g#;PBUo$A639c)88)lWPESi8)PK/uM(YS]YSE-?h#?c6N1D(Bt5Pg7Q/[qT61BaR<>ni"6"lNG#1%C!C(ij]t;9Pl(C>!FgQ$DLYJX2*24MnV!#YlhG\q'*h21!`!5DKQRB*U[6il01f%=l*:*fT+X<dSrWMH"YS]ME_+<-heSMJNb:Z^%;4!(!oaMsmfj_^C%d]+]-g\@N*9oI_hTd-"F*rTen7l-CZP#*5c6e7?:RXRkbDkqUcpDcla(+,sJS_>j.9+BEmgp,M#oAe+i=Y")%4***r8ckY+&Vus5'inI^ke*,@CJh8#E_TJHE/0DBOQg_$@L:`SU1`-i.Y3&spDiqQ1*8?b9h,UC.DR'QjgM\:oB0-\&iI+jZ"(;s%;7f9DlSdG2OBe\G/b7br8tK3>:9mh!!+se""F8<26qtoH*c.(F$!=f&]HKMk0+`Ni_$fRX\Bb>>-?`S.AledL3+qQ$YjLhHO_Ehe%?h^\LR+'t:?#+c^nV1;(mRb8:$Q^Efgh49KAClk`DXY*m>78eQE@ktVSdb[Nf#Y]&aRtZ0ltU$ss'=i@I]fcsk7MDni#o0J<%;L$%WIid-mQM;Sr9cTm2PiSGK$7l?g%-`ih:$G-SX=k\KGs\i_/V[opP(8/Kq9.qW2go9JX:<Z@[!MoM?8+F@,X0Z9K>khPgFQj!u+Q]%q57Za4,tI6_0U#'Z>$AdjW3"I]\'bF=#C?@^K9k'pl3S*F^X:k_b;=eD^??KUSss7Mo6leLn7T9$RCW;5jE8t@!+;2GA?\Z[383R%9)biakcPF?HV[+H5[<7$J"km\5j'P^$OS.#s&no<]HiIbo5;Q?Qth53.!SE/AG>^5kiq-^/Sf"]^\bOu2`-Hd9TJGU?2W\Lc`A/=%bRGPUjjRKqcsN;Y3\s_>"I6dhO"4Rc/5i,aD,(Xu*8%e]0!ED8/Y?_F>?;H[MKHs8,KQf,4nL<u1J4TUU]'8%dpe>u*kZUYpa'4`%q#]H&^@1,>bk#YEenqTk%^On-XmMC5=HH[cZIW<:&c<&2.YU:OcZ=od>kL4'</%EMhKK,@nlQH5';tjV`'Xd\MZubd;%@nFq6+s_%Nm)#&gp2P[Nph%lI.'b-&3+]52k@$B1t0PqG*><TPqf_GBuP*]'=[:"g$YN'ocIbriq?(]BUkV5:DYBpq%Z@4e+u/qWYb[Wo'Nq!%\#AUs^;H]B]2S+pSA=F:l!g;Fl"9_no@bYfI819;O/K7`7_$/%9]:Xh)fPG"4'=]>XE6-"OE8WN.<PL`$q$)Xd(Bd&2s@6&gtncX%oVssBA5"6c*Mq7uF`k:`P-jgCF_IE&kF#-aPLae;>dr)c;Ag]t0]6*ZjC*#P*d6_=.`O>Q]QD+j`i/aT"Ns>rZs<[.2qIL5W4feO%?/Z2*0R%:]V"!Z3gr0<6$d:-_!TU/7X_23A3pB!!l`jbF!4lh1]5H%&fr/3-%@X4(7S3HW*q&[(EHgh!c:b$ur?_\"ZCM:l1_'[b%s-\<r,VW%]a;,1781YU"kQGVQ_YZnBGfM0,8WDJ6_pdAM't.i,D=%Z5ZoJ7faC;tsXEO,=HUcNU^!!cB!H-%,+3?'LNqTna:a`XW%8p6b-G3Ag!ec*"Krgh7>Ni(/T.P07l?Qqje.0GI%V"`N!o-qe&*-8\:-!fhqejeuOa@^,f:M6G:19#bqZ3.9B)Uhu_-/ErPMcpTl%eqOU"g)tTBMrU80TlR8:2J*"oQBt=8VQL3_1K'CEb$%*n(Jo;'fuW6U@8@q"-dK2ro&gKD;9UCpGL-/hSC147Ep?pF8A2=/TarQ@%18SbWm[n!F"r8'%?+Gc&.@$p7U4\M<V69akS>7P-Vq$X%6C%jDR5K@]"k:038;R=MIm^7\B'/E#,2#uF=J=fin+uqWWhL++Fqa+G%&NMBlK0EJ1p<B9.am5INYd+gXI*aNrM[B*``*#%+MbSq!jiT-*mBE@I[b4R5leO9<Ye)+3\SJqEms[2bBf[c]h&!CSQ?5db>0hE#%=r&St7*W!4&C3FO=1&!-1NZgR>gJpI+bjq6kT".u4Xm$MBVcRQ>-2PA=4*!_)@!K,m`('3*;@Z^?WWq>NENN"mWa%-g3Q>I;O%Lo%Oc8<]-(-&&Bq5\(]'?aO7&bnN?70XSVLOR]^QO'`AEe+#^0W\LU\gAkq<Q0%PIE3`_`cBidr,7u4RGOj[&`b$CUIDiV,DjmdZYLG%bjeb%mk1Y`8NQY<Y7nKMfjRHF=E]&+Q<kBQJZOpE%fMrZ(0d/B<"(q9U,$65Q(L+8DX1e$Bg6D,^OQ9/s6]%Kr[?dL,kTuW$!k<$%9^)=9+iF]c%?+7.lN+%mRK8^3o=SD,mO-h40@ALG<W%2QM#BlEfjl-a(3t%*elt`dLIHEf3k\2UnE_pP/\2V#jYA]8GeMp6mS`E-%9U?1G/VgQaFeQSeGgSn-QVoi\%:(Ns7Gh5.Cr]J_Wr+9S0G\1J^);.Y<;J?=d>LEsi6SUAmU+#2s)3Km+,r/X?pE_%GK)[=/Kr"4%?&O\Z&8er=#8%HQ(m8Ae!JrZS8>OfV&jgWCG+c[\KIa\?V]])VF)0@a!CIN+4`auFKS=p4"K2"8J7?Va]U]fYO)i6cgb%Z4I'#@o%2Vc=A&6LB'.bEWZ*Yt['+d2"CrQu-'e<A""30')fIIFT^qtkSInlMDH65\@)Z]L)P>bV*Y0:No83:M)9VA?,@Z?Q)6^X=#T0TZe5%;"#5L<ME?H;(9<G:holNl<N<s]F%_34p1-_-#&/beSZYG9B)^$g1r(hZr=JR+.;oMa+U78>?8U?=@=@R_issW5O0d.>[m6?E7O!I%IJOp#TXA_*ZYR8H;7(OG:sk[S>TOs3\5D,mk?iGua$n%7Sb9b%J%mDt!'/NFcjaWCO)Q1_*=F/VN>A]M'^uno,!,)L$fKnN&(7m'%r4D.jFiT4O+lI6A"m<&@GjSCL2>kFg^>JF^%]c_:-pF6'oP1ZfV;.U<^1t%\k?.st`8!U<p<'Q\pK&CROUU35)ka)H)A`4l7N=m'%TIY4(8DEi^Xr)9+7?<mlqT%JKHt9)Z]djqe/Mg%^os9XlJ(e7TAC+#Uf3lM-TD5-p3g9,cV1ohp*FS@M^do/`kI/k.>pifK*AJ$M%ThDY`1*/>i`iQmm+86^AK7@p&lhXBd%Ir"T/I*o^Y'bud&N,^%!/EpnS^Ku!0"jUGgn"=Cf:GGiHVkoBf'AB)@uDbr%fcNJJ*!B'%,"4`ZBKnee/>31QA=8V%)2/n1[EQ0n+=8WNBD3em*6T48pP),85N/:AGo;b+?U*ndn.(hkm14g<s8?B"`hN7]#8rBEYXn:j.!$?W%FA)CQW+60hONU<J"mB?(,Wo+iGE\/P$?o)nL5!4+2Zu[$rNP/tQI!M9ocMX;bG-;2a@ATUa+[iN.4,qjm/"#e=5a+QM>Jc_+EPs[%JaW/9\_`5.,S5J5XUOBIC\dkJrRT$iE;QC=a+$Y!KY%ZUMa.Xh$"JHQq`_;64@STgj"Z[1FGHt8i&OBnH[h0GQom<YCl^A6;O^P"%[J]H4J)Q%EWU@:\,&SO+9;oVR`q[7Sf.MZ2eahkL'<p4$G(t\0\KrTK!(p8-^A9B=o2.<t[nF^;h;`s*BHD2*J$;Sq+4s@FTg-06%'%CJWJLMK\nT`"A&O*F^"7B;WoOs1,gdl7:Go?mkNKP="JWf_cin9D<k.BgTk1K1Mq$.iRrqg2HRpZ[!V4GFd@fu<I<J@_\H"`CQ%h6Cn>bb-_WD:'qq]H0QIbnSR<>4ft=$J]NdmCR$0Y]9Kp6*sJi1rndk+Bne.6+$VU$_mT,^FZ/UnZaosA7%U.9[dstIYeKU\]AT.%/sT0<=p4^k[!^F,.M,`<m)n`rmEM5&X:])E-i9[3%uHD8MC.+ppZ1+lN4gF?IT";<ncI([+[+37qr1=BJ'-7`SM6(@].\3X"e_HR%'W8A^T9]#BrJs+]o-^3;-H08%<R55S<768[lW-s">sI`?Pe-9X[&6J$IH<j;[hV3R85bBA0qd38cukI4[^S:(ksgOk`4M*oqD_r:%Wu0@1$n2MSkQiHH8]_bMWoqsb<4#EAX;2i$Q(3u0k`X;B=AiG3F/8WtETq1'KYQ]MDF7c&h6':<4mp$@+V;n)%!E$"(m;M=.XS$A%M%YA*i;S8BkAe[!4#5/(8mY]3djV"^Z<#e*h=#,CF%5k2rZ^#=FQ]ctgiooJ<tnbs7V/LSZ[l_!>5B)H8e)gdRCq:MMN8u[]D!u!%@'NIJOVp)'pSq",mE4Gh655F:"DNDIe9c,'edOYT\Jh/D^;+Qn.><3(LkroaG]pd8e_p)=#*rrQ)GC)CQU=u2Bo35@"$ONT?,\-7%5rb`Dnl+-i:#C@n)H6k?L\4@0;ObX9o2m]?(3h,-*9p=r/IH\_L9:"6OH(faKL1N3cfVR@WfX@=Zd%oMHQ+6L-Y%qlmhF/fqBr).%s(@)eoa@2G'8pLARt/'YqGT04"XNCIa*[Eo9)bEb!r';VbYNN+m1Q>TAEHr'!%0(dA=Sn1WHF#CfeE%6Jacfq;nu.eJVQ,;#d97<%j6oL2K?Jk,VP3QJ'n?LOe-ra!06Y`'ePD,":0%N]&#r.oGcKN=kg_!7\p%3#:23m9P)m4lngsLu)E'i(>BQhHo%>p=O^''>d(<Mq%eKbE-Fk(&ANLa6QOdaJm)kp>a9YJk;ZtVBu5H/.FF#@:?QnIX?_!m5_?LlZB7qKT()HNk0@&/oY$daZ6YSrrm`)T4*;drXIFP'>7%ZXri$kh:t)TEV(s471Qc0er+(hUr:5V<HXWHB@120j'>%=4j.PHo]_@Mksg%)QAP("P3GW*m<t;Y.:4rQBGt0[g5)&MX=D#X2ONl%G%E,2BkDF(qrrW8$PmKSaOnct:R1.FbFUY%JuYulrjP/W6eNq6rG]8bL*V]d$d8X8o'@)4QS"[:'9Is%j:l,QAd\73QBX:PBDb+r%Yp_V7Ncpke12j,7T=jQKU5,OsDiqd)WYTJ_`Z#Ng[]A[U['Q:a=*rB/qM$uHop,6b!,5:>\:.pOKn-L!]W!3[XQ[+[.7E0h=uMFB%X`:M8>1D46@Bit<F@4e+'=H)K:eZ8_a%j%WRe,Ddg&=-MaYUP_NEo#F0:E@I^/F'BfhVjqk51tP#l"Ls(4R-unD/_THB<*7H5Zn4%og>q[A0"6dA&]N2q'Yq6Fg^;cD[]<0XKASF5u!d7IE!;cAkuJ6e<sReel.'1@hpf(O?r.N=aj?\ejC7?h*,JZ#JA[0_/E[.q=1<3%q//Is`0#M'B#"g*jHmqkZ.E*7YFW!ig43>r(!EM$Dm&E-3ct(tEWZEgI=BmUN".Amn'Y<_39paF0M4:>4jj,7HGrQ4B*Q_&dHV>q%m8_;VR,PDnP5Q!obF^/GFB5MQ'4X_3-+JQ!QIH.C-W2cW97W(l>o,tqBE7IENS$M5;Qg`cnYR+$UPC9-`-]J#)'6(3DDOtRp]<3I%*)38o/ecXJl]%DAFnpJ!riFeDi:Dhoq"&H&6nL+Z=XrZmqO+6_/:lguaYqbgEpL,qAsH36jULAUkk!?QM;mB`eYpY=/\h1rHE!O!%F.\1h4nB@]!f:!j`B=BeIjedK)45A^Nr>JQki23>"^piY>2:NE<(N`pOfdto)aW7c[H.-B5Sh3'C).T`o^^G+h%U1U\MOBC;=NZ8%]q<.o5.f+>%RM-5gKae<@AQ?tR[Wo])>KDmpAatRJ&\\in\E&o5%+D=jC/%ZaM[pk<<,q96P[t@W"eRbMmD:3/kSt,%Re.LQ)c7A%Xtcq0$PH<]s0**\1j%6+7f^F,s,POlE+S(k_;K&)G+.NOP_8W5[$1O2_1;X>#XY65!,/-B?nfrXlnjG*$Or$ufWN:2D*F%4F`Uo(%JqW3>iWI;)WQ:9AjF%4/*[5=k99KXif<2SY6+V/8]5E`q7)En+pu?h+_6hNhZUXl_5?qnkbC9nqM2Gu:F[dKA()P_\i-#n\_<=4$%'=`NNn+mXPoE5fAEX`]km)*:D^72Z_^$1?"J+e$^[o3@CN.V]B]-S5h[/9!59L#&.b7*PG4Sb!3"NZ=H.\(TDd1oej2M"\:q)&eR%Fs2-%/rJPkd0,UI!lA:AY0(.&5r'Pc<+<bODQ#A;ZYRBQhM9/>8u8ML!Za%rVL]j=nJA=K:'2(LkHTn\jCoC^H^jCPHdO`")'PT&%n/h-t+1H$[_KP/SSc$pr)%QJl$+D_b=YUGJ<PRBtYErE2KmkZc^*n5Qk50;@q-Xo"?&UC;16YVlmAVWg5E!SImd]/3e],o2r*Lg2%fNa?6CiIG^g6@GP7/"8K++]*;l-`V!i3#_!8G4=ZAheKk2J%Ll@1#OJbYTM>4nnKOH/)[<OZ[GYf`@3$#fcD:m0HnA)ReSsQ[>=S%kA9h7fMY70FMc][GA.[-k:ZFdU`6in0H<(rL4WQ%f1gFm^Lsb0'fUJOk+Z:+$Kd<CrpU6Rhk/cQ2E/t.GP#PfMml%*Eg4cul:4_]%T%9q-D6kV[<:+daDkU].`P@c2KKH4J%qMK00j#Y2$%;YM7FC"2dbi?CrQd>-d@SaCk==XF72u_MCO/s!H9EE+^;Z`^2b%hY9[h]E%Od/Ml@t56TSom<&h3r]r$76JfUY4g3"?u1ngA9(F]p\\Kk6[KH6"s[/7E^YGTr,8")n&kXIV33X8NM/%aK<m6WX\cT/$5.$#0,7J%^+r(#A!<r]$SZ4VcS4N^dOkV[a'T'0nDl=u,CEA&ZDSIkTCS(Pc[?0qji?.;\@i`ipteStaG^I1#<%@*m=d*h*T\iR?](Hu>sr-f%L([cYk])N@Lp+rU:OL`9VgJ(2##-;o:*?m/p3AujhckDYpbD%T>B+bghDu&%Xd)-:9]P*L?Bakpp<]BfMkQW$-',tDgZ`%&7/'9Q%7q*_p\/d=j<glQ'8rMLj(]_%o4,Q^nT,(\2iKI#_?'a:-B0W;*^E/GTllC`HQq%p.2*2^@[1&saU<g:Ikk4;)bL11i8gJ]K7=+/H%E/d`dgZOADd;pW33g+,f[rcXn9%(OG)5MBn-olL/3bq8"pgcPDXtV,CABaY2JDeV,@"/&/#m)!d;KL<AmA^idT'q#\aQKi0>@#bE%HsX4[h_WfOF7-W?Xd5kpNSP@\_n%\Pn_L#@=c2TR3[T@/deYu[\1!TT%(e&q!-gqt>k`:g)39>F\0e7j#>qiKRNH.ZG.R0f"8Mak%1ITmiZB%=ap+\*!E?reIQ.T^]6H&l91DDYEK!W.,+n,WpU)9rMaI/Fe8:J"#DUT78Ps8("#`4%m1fpLJEZTR)a-,_"nDq9Sefa-U%63J9b2/D!5ATW]Rj!Sb<W.Yu%lDh6s=;+_n4RU]PJ#pgQ/Po5an6E;',n2kbRZ_J0RM"'rWu,Ua4W-0m#(P>UN5+?/;$,3p*hFC?%VFJ1.Z[V]hao>RHp%M4NCEpA^@]eNAq".2&jWPSICbYoq7(?MXRY!DLHVH*\[F0CUG;Z/2H5]jJ%4_G#XYtsfr^?8/Ju<uZ>rHAi%4a6-l[rrg9>AHBJR:?*b)Q/=,WN^>OA.7Ff<gi,o*FP"+A2e$clD*Lm1mkT*X*d2?![OQ'2C.?SAp]<olK)+V@b&-@AS!<OH[HmB%[9/W;?X&nNh/MhqjYfIgN)2b7+fdHaTW9QT1d^(cOd2VHF(Y]!9sOY<T2cZ3rVJ@4(XJg<KIL3.9eG)"h*s%bkNSg9j':%(epo1f%pF-J38#tFt-`6+l-eF:mP07aFFBfbLYJ1j2:.r:9SYO'UrUq-<>$njFGEg'g=EWEAj.Bi3&BmhZ<RtK1moidaI)G[FbcC[mT'X"-%<EK71Tgbeo%k1l.SN4P$qRr3lZS_SuEj,F-e_CS6`9I,coVuMk,b76:*Nqb%d4Qf;8R\]RT&HGr,0I2+J#sKMSXeY??&mJ[s-NU8%a@YFJUq(<B\p5<dkNc+u=/gYQL<<#uitW]BRC.)\WsT&o\NXlsEX@dIZrr;_#YT/_T$ghaBQHN>C0_S8nLO<Z\%Db$P9#SVA)Efg%MA_F[KV9.P_6b&?'8X5+W?%G,8;H3]JJpGCO&\DJPs$-k*GStFjf;NXR+L+J**1T5bF$@PC%S,P>4KKl#t9f-loss2H^kW#+8=ED%>HH%mPQ!pNl5p<RJspa+FVUDD-@l)L,[tqrfmqhZP"[AgJ`4]!5Wjt=/cYTMWf=1Fh$5h@9=<4=h"5%KYWt#E;f_"]BJLt<=ttJ-%rOORiJ\kC.Pld$0ah2hT"B0^q[t3/<RF=asQBJuZHTI/W.^-2ZVlruY1u^\]/rXRZlZ6r_(>eLsca]]"cW.F&*Oc?<aqfouA*0@d%)/8)*AQ)AQFSfoUmhhr'[;i%-.ue[k39s847*;o+ZRE<q)=Uu#U+P-7S%.AJSj$M2rVI_rIlejq9=L@H$+jDBfBmk5--AiB8X$-/%E<E7R*LV1LeDZZ.+T`*VG1gk/Oa(I\ET^8;V@(_'gM*:,VfA6AA].WTLRI?sHgB7;Ui)3(-t$o1]h8Jb6Y<sYaK]lL`4%%uOObVg%]!^bCZsP+hWK12kRtj]''c"%*H(+n3aMO50qRg\U^#+u,,PZMVq%=JgDb3TY'eS!"biN<FlUXi+.NIsOLr*1Rji#V)?Hu=ulB+u<%cb(SG+jb+'1Ra'RqX,^8Oo3^kN)t&B^OM6?/(FX@*W\1?1=5(K5V0TA8bsHa`LhG4B1$7:m]Z0UV[UlLDMV`EKH\9BeFSEjC<1!n%C.K;&[Ld,)7&(,op?U=YNla@!3@O7J?-6Vf+ns,?+R,SZ`U/`P!)nO_mB:Y6E)*Y"BS%Sa*g.BZ*+*.;'e\7<TQo1NMm9Bb:+5+^%UQV^c&YJU30s`1)#@2ZYZ*K/o9rfhCEL3Br<%u_9T.-F<fc)M*leh0`h`SGuLKZDpaH,J1AQSZ$,iO$G6-<KF5/3klZ[dWk2(q`/%m"^t_S0J\lQBhXY'"5AG#tXlpdaW-2s7><[-df+<a/+$A/)oHe:3+$Z`!L)8&srmBV_NS!&,a(5XRqoKp/tnm<&c8AIq3W`[!B[:%a66-?hc1V4SFi'(ojT#VS.VpGX1UuKUd<D1nhK-WgU@&U!i\ij6g&8GfD5tiQrEDRC`#=2-#dofPpC^T'=[sa>a7pV8[;O<NS!QQ%FOt1aiA8Dl4WUfN%.UVm\"cN_=\GXOWigIq<uXEOe^rM]/mg2;(ED\CQHGhB]!3t>gIR2TI7E]Gj]B=qFUD8,4"7&[9.Sncc0>/`%]jdc$H"m$Fe]N1j-iQ`:Ui:a*nJh/k+\mn*>LppM=]7I).)G+>M9]Fi&nA_B7NjJE@]gC0PbNZ'9(#,]n<5bu2'g=HIgYHtRSU!=%el._n*l#pHGE0b9h=TDhSorUg9W7W*c0V-*UJ1Tgm)Ckr7);KFYI[W^Z?@7;@u#G1RZKQe`>!RJ]s1\n(3g`)V8[8<l-2p[OdqNs%l06!GZL58?)Qs'W^Afa<p01tA5A"g3Bjnhl$clQF5$'/9VEC;=Do`'37.)g"d0;=+dV+_`N]frVn6:5d]76Z.fWP52`;7<M+H["1%g\)nT$_ks4'a]q*H^C2V48/*J+"^d5oY<G@>'8RGAmB7s:[Oi]r.j>P+St8lp1fjRfs1"V9$7E362,N9TXkV=p%hiLPKZIrcle^X%ppSOXG`=:hr,$c!G_JknZ#Hj"La(<ccjjLg;J^Dt=\j1p>c6qf+S!438X4ng\\:ZGYsGR^YADcip\X7\GEn+gZ>0S<Ng4d%\*j82%56[7$4Y=]dWS"o@HY-/NW*T/P%]1,#\[)%nSe9ab40^s;)0SLT*A"n0jkYIB2b3\e:UrDGPtA!+-YmZ`:RN_bg2TGTBt$hFpRgH4%53J1o\L8fAl\d!MISIquC[$j191#BkJ<>'^U!\5;R_5@@ma]%sX\Hbo(&P[oq'fFo/[I$O=n9h`]Ag#"BBPF\GHNdh20ih(&7QS_%&n/qdYE"JoIa=Imh(oMW13>$Mpj1'f\aGiIC@imN`A&pIp)^oSTZ_-!&u-`>b'j&^mnp-"_=L.@q$\KuA3'+,?^::=lHOpdnp)#$%GESn%elIsG#g[bo[l*VjQ"GV<^TYCIm`Ko@H#\WMUBc;bgr[`3qh!mS4_R4_hl4.N9?$qP\0.".,^"(.FD^Z'/:6@t[B*0*>UjE%%=`4\dn:/U#`!sH?b71.M*nl@jYm=+ulsi'hF0+afUgYW@O2tH;HET@d.iBbqoc;0G]P^B$2s?\[EW*/%j7+Ek5Djppn+'GpOL3:H%s75`j+\]B1d'g%m9c2-1-3/;ITV*J=Rk$505]SIN\IqQBk9pt$M@u_3H&$u,ma?Y4`me4hDgO-uCf_9)QKI5CokLBUri6IV'NF>S%XpXoiB;McE.`(Y$Em"r8(k*3^ph%6ikSjCe&OGp"\tu@;SN[(YG.,ifpMI3gFrYWUf[6+KJuBl/7)E1le@ZqKP-*<]\+Qudj:sbe%9M]-C5)Jql`d00%X)_$L0,>DNLYdmp;^1if]co7!,GjY)+IgpeKS36M(j;r]ZBY'\go!s1CT\rKXeXD5$!L/h-B?G96Kh.Z:47s[%\'L#aWi%.6X-UXJJPq>W.n9[=CSbmIFUZ^Mp/J&?1g%h%NnTXg\Xp5fj3?fEHKuHe`0_s.O5L!'anlOf$27kV:5o2U:f+H<a+X#<%003$YS;c7g[=ucNTE7_AO#ekZ"WHQLC(?CFO9G1cioDOaB?V`M^YL]I;Dpm5.`KK"`4aIOS$&>PCA6V\YrlAS?]e12Rs112EYhiu%$1A%5%,`@X<JRYGP[E+tr=,R?8p!Lb[Q**[S6F9NPgZo0W`OERZQWI?'"3ISE=*&M9/,O7cq/pdS)p_4:j_WBgFS242`Wg@m@S"5%*)ZZX1G(G1U#1C,f*gC^+imt!!2Z^DYiJ(&23t`.Vf@8dL\DI/a+-nNqNc4TJ=me%m@[>i[VD@$6W:g(C?M&N=3)b%(Ano^HC'5,%Feuhg;0P\$F>]'p*=Yc%j$b>3fE5X4N=ue8A>\eN:$\e!eU>?f#Endq_A[o7q^oK?H"pp:bbqPC?Ms,)RV0fl$2\[A&gt1bXmYej%6aCK_lTXG%qH[/s:T749an0*0Q,,>0"0#HdiM<r)DPjZ3HD=W3OS9L8p$_Y?Dj'tp%Y^'ri9O?5;Vt8=A)(r_VT[)U.fG3Vg$_N=%?KKr//!1<VFcmTpdd%\3e]IqlR:?]]14YM7%*L4OVHj[e4V`oHM[r7WLR#"<'3@`==+i1p_Qr@t2_@j0-MDqu_mY0_lOH!#(mU)r%QB(C$$=q0q:3SrLQ2JZs3)LL4^2%2rH[b53\(!+[M=j$'OJ``#bWq;VkQri[0Yp[+;EBC5H")i,-X(Xl[u?i[-a(ngLa/_Jl6It+%CJo&:ijlB5,koP`bGl64I+?o=$38@^&/;B<a)22GI`:g2pd978'X7Df[IRt46s98#ZHQop/MTPd%D0(.*G*`X;_3'rkc9i:@2X!*%g2V<]gHA5HO%e;,Np24`WHCmMo/'lD(!>ur%PbtRjn-bucTFdEpX:U@de4Unm(;mg^K+VdFV'G5_W"kd'*N[4P5dZ2EFV,iq1N>4%7;/%7U_]81:==8\gU6+GkGcG-bIFh7OAq>-[;qUtG/$ShRJ)9Q$Wl:67:K$@ZWZh-mE;:.Y9X?TX#F0.En(o`83U%d/8BZGLYl2,%-(\#<Lrp=$8QOM:gDe&ANg4PGqp.$\rcLp(O4mce>"fJ`]eo`V[F?YhM`H)g:#gqJ@\C.jLIIQb4?0#fRilqfJE`?R](&-k@apG&%:L.E;e/WIp.U:ZKP21Ha9&;._@Qj6[Y:!bKlb5]>T7u+dX;&Zm':mi5p\h`_o1-j.TC$&=Lg:CaS*oJ:YLf^daZSS>o^ZU3_'IOD%M.RuY<&Ba=*Y@fY't#<*=$bBpro\V6&9H:TC8'k\S=4Gs.@53&Eh:r&=Bk&Y\MW9b2"iq@6-Qsj1rd`;$X"IW]h21_ef5F*ReM*V%?p1K.0)'dNV::eJ->k)!J+?8,PpS02X5<U:#%#^B+/SbX9?Su*cX/%Q4Xt7`@>V_T_=f@*]-qp`rB4aKPZ5kpr^+r0ATq_TDHRij%_e+#uO&I"TClPea<*%e7.seV"g/^N*-$ZU1mp-"O?;Ui$$0HT`HUVs?[Ld+Tc=o%o7.:PHrCRLP+Z\^+aUWYTZ>J\7=4r662.\m?%ZEu\4ZhL,!,eNS1#11=!gRu<&12j+EPIIn[-hAA4#(Gg>na?Yb+gr(!bg<r++BcOecI8(e;#Sh-qs;fZ(Q;?I<o<=AZ)h^"55A$6%e_@Mi=jAA4F_@?)?p#NL.U;fX8k=#*]B>1?\a-6X%m^M#AWpK8=/as^*44^N3SGDLpe])jnb)7#Dq*X9ANTh:&7L^u-[H_.2peE6%kB?T&&-\=GmV^/am>Mu'lp76KU@>frVL1D$G4pmfG):.B5[e7opM6+(YI<eOa4LJKO'_-0J8=Hu:=dDl/CS9((oUS;.sA(5QKmpq%Rso2D<\5AAW`kj^=UnDdP+?BRf42o6!Pq]trWMXT\Poa\gK[uL5F('6^5gq\mBcUY@K8>!RAe]D@81\4p%L#q=ml5;n+u9KKpT$3%6f*M_p?L.k'Pq@4RT4V+r6([U:emb[)C/@-m=aY4OSjFIJ*8Zd1XN8;o)5/nKl6jJP[2[qleWC((!Zu16;OD$f`]CqJ4X6UQ6'Y[%>iqb565;ZD[4)cA&3Y^*qs?o`)gRmH^F^R>qEG^1fQJK"co>"AE"m]hU3nSBQu`:5=_n#C(nOkfA`%sk%gR+R_9'2nZmm+ReJqrq%<b8c1@3<sLe9PCs6F"]r8ufJ'N1iS&!6F'?#)PF?i=T72.UiUOIQs*T\9e;9gid$X@fEM#PsPUT<:,-C^'>$(7\"Ft3;,tso/#EN%$8cp#8)h].S#opn$$UY7E3aM9Rlu'M1=gY0asQ#K*_lq8j*M,'0ACW7=u#+=UjN?NqD%9Dl_2WkTN!j"ALi:jQ$S*`SO(<NV>?o9%F;9,$-RI#;0DNaLJR8!`^sj"7n##N.XgR'2LTk);K`@VSiVkuf#l!fH6Ppo?M^C:cr(U4><Z-]].2Zt0fe,@2cX6$phaN@jOKQ,:%d'+n-42rVN0HEICnm%jrU)-+jD7)8!Fom7Kj]UPOq^Gg"Uh,`>Vln_i`*L]h]\[8c>-=:ff@r:*gLI;D<?8V6X/4JqcSdZ-$LgCo%$f>[^8e2n<@%W(C>-8pT.9q'BI8j:[9n<V6F0;tuR-E,/?@Rd&`OLClMP7N>1I:'@:fOZbk+@n6ERend`s,.cR_L[B`O8(\iU]Gj%rkg@_B1J1AqBK-K?>9h_V!/!.#sXIVgul-+`,6[kLd0X)Q$@9cN7;2RrfS>E3pAh';`j1]RpBa.V<b"R6A,8E*!qVufS,;S(0>WN%]CL9?1UkM3kmc^CT9]4CA',D*24h9)e=a7-?Otomc>^Yc]YP-e##"*#*>!CU;ULc6>RA#'UhhP#=sV(WBpVt@.g6&)'iZm3AnZBp%b0"oR?0dI[QhY6RIoLgJ*g]Z5[s5[n+MYh)3$`.XkYQ"'%]u;JHW4*M$,`,N>q`12Ahu7EPcH;6=Kg=&D],hbg6K(ndlZq(fd8dt%)Bnuqn,7$e2iOqGm6?gHKgYKcN,.=m<_5/0_[#9A@R+ieNUYs:/Ok&[:!"k\i9C8\I6OcgrbgF?B*5Yp1'u]'K)KP><j&QcH2$0=%]!Q&_<6ObTqclJE(m#<1WN;n/K^gr'4WL_cEAQ4,RctC*_<7W.Gqao3oR_.\-gRdIr$E_eCi_baI%.ndEbW90P^a]?qbq+qn%ZJY%)%2E^g<IDu&/GXj,Ujrq(Mad8iuQ^X9>]K1#d*Ufh08Pa!t50NVX4r])%1Et]+-K9B6hg9LELH@:t?ba66B5WZaFa<_1G9MaZ.gL%c89aQ?G58Y*!cI`Z]=>p+th!%/Wt<K^$sidR<nQt#JE26@D$gDT<Rm=jcsP!cg:K)g;OXa/\%.fNAL^oG"9f:;"2S0Ap>(,1TVSL%q0KIG*J%$1Rpi.hc/k4kRb9bZb#PfPCSnh:[p$a$[I&[J\rio=->ZTiAnIY/*7&lA33j)Ad?<^.a7>EsELeNEHb6Rf13u1`/Sp?C%ppb-(_!fX`<f/_t6CcX_igC^D?28Y'aIBYDFaAJlB3&6nOqiga(J>@?)De\P0'&f_?0FC:3E-eU$%/8/f%s/[X*472OG(U]X%)q?%+]=hMKF^onc`(gH(u&=n':R$On>Ju\\sQ)77RTZ317u$am#kkD*8`:oklWjHS)C7Uh=F/g`f^d]B9Q]kVmt!U9=@lCOegYr[O9eg%drpHKK-S$;S>.u8-c(i.U5$m!+V?&`hC3"pk$@Fgq_HZ.EtkH7bbKq=V5sNX]O3)n+nOBk"fl0o0q=Q+[Z(3l@lCmq@S6$b+lfNG%C*G2t28o):FDSf4Q/&(QGg$0.[Wu%`e];jqQ^2LHT5*eQ`0SGHP\Xt$8GG3NFPYqIj?Sg(0n4tH9q"naD9XCHpcK,#cBdonZV=C8%Pm!&gf[WT_'`OBBFP4`\V\VdN,#-Yr[2%a#_QMIR<K9aR;f6CJK_4u5%HlW`=0OpW!<4@hjS-.^S_1K7'L$YcgR>UZP'n&@s";uR%AKqHF[s,j1^.U5F.);8S:S\E9Cj.ZD@F?@69m5,<<b%V\jus`3L"r+.Rq0hs'Xo<hLKi&;l)q5>:-d@4RN(CiG:_&%Rp,n,e'VQi%"P@opRl21N/"G>aPNRc=C%h>YX(\80,^4PYKj=K0-!R;2VT8Z,<M?4Se/-6uNXGkE7Ij>2#_:(Zq0c"m1SgJuO*uf&A6i`rX7d?m%VjF4ZigNuh+,uOm^Lf@(V5^"qE,&^\E!n8mrSH+leBnd-d_'1eg>((4_k:r+Mj&]4?gj2>=!5B&<PnoJ'XPULlfUd,8H8D_GZ`+6%lR0Uo:LUN)>(4Vjf\39g=%H/<A4ft=__df,qDkr]SltHJ4"t!Bh/N.P9J/W'=jRZrf./VWqW"(3r:jHj,gTHu3rT#aAk4'g93Ck\%IsB&nF814]Bg:7bpc!r!TFoHo):5u"IjUTK^rEX`gYpMa\7;eu>Bn0<Lq\<F.+ZV0BXE=H]gLb+gJZtAa8P*("M3OM3o_>7:WoR'%cB>G=#pXoS@<m:<c&*[OMY8oQ?Vg);`35eu[R8IQ"0ThrK[k:-qs+[sKI\W]efT7TUg<C'C>N1l*%PI@78/t/\rW^3^d4Es!D*;D%9r9Uaha3B3N=@g*E'_.1n"09K7c\b`+a6BI^(3Im^F'$Wr1s[%>B`_ieg+c?g\Q/*6\>ir$35ZK0$$>?gr/\Hc7%5=[uug:.93hc%JTs)oTJStjAOgZ:\-s[9`&Nq9A4UP_h8mAj8I'S`I$)Z?E[\nD%3H$<![a$UeD]H!d/EVc4.PL$d`os`p,-RHF>-E-0b&%G)"(JA%OfA_;Xm-DE8GAn@$',2XC/UD+<qkE<V4,&N49[nfiq_uiYO,XK&]\OJ;7^71(O42DZ^P-!R/*)+A18[cM826;K%mYq15[Wtb*:QF%"pnNM8='3G]Z.g7A[kRXRSM[]dN9D7R2?'ilnj$r-IDI+,_;s*AIm':OrJ9t,RZp>,[3$HY3Eqf*?_B?)$=1,AfrlsGA/E[Wm$XY%BmI^l<T/kW_V'Hm_@+far57#%s"Le$[Eko\0Bb]V\__!:.)$*-Y$;I*3C@9G5I,.imkRIu+5I,O(m=<5D!C3LR.Ra'if.qeOTB-7%`RuR#&q"!R$S/*;Pr;"D3r;030;ahaUl@=o\FQ\NTQ+G&GL6gboGBU&b+*Fqp6c)q+cSe96&iL4'<1-.FU6T+7@&P$D-*p^bb8S4%(GhEVI\/QkP:sXm.[h6*I,8-jAF@%r*]gjQp)3[8;r#$M@2bJ$F.?k%kS`kO$]Id0a;8cif^^a0;.)U"BkdW/@1r)<_HMTY@*A)8%O0d6q<`^Xg<lXl+$p42ZO2<ftD#bE`k0L;bK&!rF1lQ3/lIF4G6.!Jb^^]f9=?S`6qqqoR/NY-*I+4q'dQ!@d7O7I@P]im<nL$28%F*Cm;p[76D8/flEO(/HX'<)Kf^!"3F5*b6IZ%lH%fsk=sPW??K=#j:)fkf'[eYFL\6B.#*UfW1`Jf"h_eN+nM3VUU"hs$qlXN`--%hB-k^aJbC$DWgZoCK!<-V7&nI?13'r-bh8V6]%_bjmHB][VfID9lIESA=Sgcp5pT_j95UJDt6<(r7%rB#rJQ1d/6"?qjW7Ld3mQ"%24CH?:9<k%o?55LAN=ZST2DQ7]^'R8>#g^Mj`N.>5+.)DJmr"jkK.$OgF>d*P&3V)o"#M@)\0U#dGE_=EWSu\EnNCg#nU7h_!5('%kHq1/p8!)hq)rGKdNffG^YI)lrC[Sl08r:m:$1&0TSL#TJ"2iD'a^fpk>-Qk3^&ZlUTE6ofi8MZ?ZjaI!TAurY%q#sg+8`P18&X?%*hl=:(Wc8-Z'+8e^KmYSc3bd'=hfFY)3^p>G7_Tg('.qd#WAbLF^*G9PqkfS;@XgP3A2H]6ai.3KDA8<rV!X'XVAGGF2C64ebD-=%8*mk=M8T6'D5r=GELtFR!k&9BSbF.snPuJ\)s6Z6OB];:^qlNS^*3]GEd\'dC[X$`,nnT`M2!bH$ghuF6Zq/r#_:1`DtFU8X-WWk%-_-_p<rr1'_3M0<.]1NW*P?Iu"U[5f]Z>=]DJ`k5T1M2lc`7Dok\'9'\Y<U6:%g,irX(?i&@D)rdl:W_5E]d%526j4O@[(APNO_C%#8\t?pSdiHJ37jT1K6'QI;GH1_p6[YULYo)R^"ueakO.:I8_-A6BP.]-.'$fc]!AOOJ=64j7>^(7Vjd/cKFB*OqoB'IYaRRrk-TD%#7LEM)P8P4pj`2Nck;VX7tA""Z\Y`G0#q]hm$!Jt7^Ds?Aot?U6t-W&3MBsVNoQ;.-LnH%qS]u:2kV:6)(lIQ#:/JS_98O#9^SK/%%k/6"MDOM''bBr+_`p^Vo8Xn=l^oN-%de"5]V$lAL;;EU3K$,eoY#f$VJ\G>Y1Y#_0%UF%ME^A8g'JYKWD'm1d#%Q<N_L9O2%>N)%*BW3F*<aQFS+BLE8`]`Q_YIlF`)qDb1k?<?h":X)N^\.f,Xb*"4"HiD*W@<;aL4Z+r3=GM46qWdJ:V?OYg_UN^jA/u1t])5E5=B4%PQM#c5/kLdFa[UV/dR1^Kk/ocr'8e`UcPqsMEX)>:Ce'9X-=dcfRn`->G3P+.Ws%lhC1nAnARjZ/VW;X;n6PY]DP':*uL+u(3+Bt%5P28:E'5s^n7`.Yfr9YX9[@_/01ZQGa52QjL?ZRefpFE.Xn,JmN(rm1l)"ADX*F*;r&Xm7HYS9X;@tpnF/>A5UNTa9Q^"u:mDC#U%LuLtN*\Y=)mh]Q%d:PMt'>rj,aP3MloamkqAX$+%5*mpk.2UFB0V+%Je\."N)J<4@`L&o7>kZ>^GY2#/jV+-&^?fmoPk7i0l>AWK%GngunQcqV'l=hhN8mE.0HMAOE%/9\kbatkhj6K4;WuQ"=)'N]AhWD=;X8Ac.CAb:4b#cm3;Zj\5!J6a+!&j/,+p0utf8=oEN]rMD%]/&Fi\`9h.4Q3W<E4'YCg.;#=OO>[E)@fYeaF%`1B%Go=c6G=,l&P623e.1po:p3sH0s7r1shVj/ErS92Oj+t9ssq@Q\e/M9_?HJ%DqlCdB]1J.9WAG"e2)]][!5>'j[&Od9$ng6SNYX]6'hutZ+&/9eh'gXiAoq_]sK#h35YQPaRGgj9W5\Y=O4VBifeO[CNe3Rb&bfl%LdKTZ&]#?1msA]Lh'*iG-<oX,,1[Y;_F#W`H5ZPU))ZFtiIIadGI[fcX7,k,pYY\NA/3&iW\.X]TlE=UAp`n=351,CAsR[<D=!Cc%`BBgBm:GtJ0tMR%7#%g(B8l1icE,m'h%c("Xh#cd;=IH>g1EHmQ;,-fG[A-.52.u$cKg?#\E$r=QH%;9jY*uEKEm=.m`@SRI&hL@%N&B)P7+&j!$&M%o/]L;$gH1Q("5"5`8@gQ4(:InRIboS^*lX_M$:E0#:cE1LY.+lT@%3O<=]$CS"D#Sf4tS]F8Ef;tM];)J\;=g2%C#_Y_KLmus?B=o0-68lQZ6QgcRCmjb0(">)V$]c+Mmk'%cmt%YS+.i!?7laMnNeoDS]17$fE6JrH_u>qGd2cGX>`+O'Rjhs-LuDc%C<a^]'jO$(noZDW:JC/N2=3VR&tL!FbI5+*'2\VN9Cq7Hfb8>uF.D7<?AXYn0&&;Kb)]q!DCH1':j8A\,-q0I5jb\h`]Ip-/0"ip%2OPOI2@eA&CsPR^aYNDE[M$.d)OoOMXN9c3]ai?)0$NaGCII[b>j2-URlF5.$@SsTq=ERA5cX19#I@oCUZ$"=kf7+C]c"MtmSG3[%-de.?C^#X:,-A):-X!U7akq.MW"LW85RD`:*\WlVG\W:HfV9CgWbg@>0&AA5^0C>4d)W[i=*C#IDuWbCT6:Z2\a')P^gcMfrk*R1%6]D<7M)#Z%ID!Ml1HC+PX&1Ree*<f][guq:e0u<.i1]A`Sd0B>aoIf`Vl,uJ@_p+0Pts12r;c@B]S'S^;4=]HNEQ"J7G4^`XmhEo%W]3hmXqu=`_;I\]80<<Kb%^4NZ?3(,rjDUu@34/IbRB5nMn[,d]8naYP`M#Wgppt64gJ;!bA$@I#OZ4M>mMs9lJY:OXA*@7L-h1>%SZ;#aiG#>*Gi!Cc_dk_=bQnD=FDkp_9bU^:rAs9B$434s7_Sp`2^FQu-nI0T1*UOb^ir4_TPN<W=kEHESD?8DNO;dkb*emtI,q7J%4aX#P05`8U+I7?+@1PJ=T+Tt)M!,=&^u=2!9q7>."?S1%@<FRo`eAZ>L'P#/@Fi+58^BI!>tYJamNF+r@/d+"^q1h@rQm([\J#mT%B-XpH1hXj$_'Iu0W#!P`?d<O2:X8;qYgP0R/W*uR4skYRArr"`2rLeFZEB/+)nB@;_KilSjf4E?fd.BSLb85C;Yr0Vg-QFh3tNG$%A^ain"5HX6M4GIjAJ;R`h2jVho<]DrGA%-d8F;M2*4W#.I\A(_PoC6V).@HJi8W8BJo@)GJm1bDdFY(u&P@jLS$\ATWTiZ>!1=8"%dnpn.XJhT+OpGk9goiu$]dYFn=Ibim5kN8X[^.8V`+J:9MJ!IAS+]fDl2Z'=)2W\smRhk8<6-`r5q>US;FEr0U<T[)FG[78-tW=_%l"7"n5PRBl'TWF"M'akeHcL!u(c^C5!=j,?o8_T8Nr0UkM?4b'WYL2cID*aCalcB*)!M@ndXd$5K>2b+iqH9-E_mB[^)W;TMTUq\%dJ+QAZ5'(%REA?8;C>Yg6/[^=OLar42u"IE4Xg-uUTnOBSY8NtX7SiM:u07+c6rJUJ]4I>kt![R9gJtYg\.4&m_i?`(q@sm<#Hs[%Lil-PkP[9s%9YTS+em;Gh4D@)H8<m=,B'2rABQsb(N9K#9QYVK#KN$<PZG,k/Odm06`2bj+RUDCPTO%*XCKdgG4;Z(C:e`*mA+O>%2Wg:'kJ_52?/?kaYp`EhQ[CpK!]-.]?(o]l3NVooX/:mVIa.J=BVhWaOp>#AGV-,P8UoGP72::?o-Oj\oPI3>9]8o0X'/.Cnd3Be%"1N-\6L^%.RlK,-&U5dfq&J38)_Eu@l'6_`i!;T3phEUmBeU*G":`:knc<%flccg&61'M"HRliD;t!2f#8b3!8TFalKJnWXc>Ji8%<Y@@9:j7mTo[+UREB@_X$o00UWLTE^D2sbW^L"._6eVJa_pk.VS9<8Ij[QAg<^W'rNHOsma)1GsC+F@O-h>@)lFkS-"V5q65\R0P%#uNCs:GRYo]5Nc-b>b^io%cjg%.<ObqYiELQ-WmURb*+`[gnXU(CJJ\\onbT]M*BDieMMIJk\=`UtJ6S'+'Egs,2oTU0R"!kt+-E%:;HM9K+G1blRRdnfK"Su?DF!Rph'KIYFbB]5)@>IL8#4%p5<@aLLsLR\,2GHS(n8S&G/YD@:A2(GkA1*Z).+[42sA-"Yn+t%'TZt%YEFtW<'XLddFSB<*Feji`%MGVee::jGN!,5bjGH<&:7eIrou\3PYD5Cp2UR\AO:fq8CT*joDer^at&i#c80TE@T6sV_o"XW2>-O`%37+j`m0ClGIQ.6P#lrCI?[h^(?Vq@ea-5k+oikq%T<Ejb*j.DNH&\*ccS'b/=&8[T+4OQiK1+[bL]Dl8D-VAba8AZn)\h)\.]pGk%)UT"4RY/qs.4s!Q)l(ai7Rl-8G==s]q**:ZHbP\4M#k@)_AOk\-8@X!%4'a35e@"0=#(h<^LQtqO84>fB-u0j%::<rFMi6o-XG<d%d<TD^.7e[SbPYJnGnu8h#(PJ9/`"LS=.2A._e?.XhKhS:QS,oKh%Ab!K66o6j/t@To_3'"mj4W=qQk7WLpO2&H02`t3a*"$m<YK_%5NZ]S[b_Y%q)ltF\H02%VKV.YmJqqd1OS1KofVH<;-5>Q_4>p^F1V5l_db+R>i(a=^g9*'"t)`qW:d><"h:03jt!r70]&:Fb9rik%oIVE\$Z*sqY_]:rL+WU@._P/RAqR<q!ETo/d;\`P_>qFl4L5)PFuWLobdur$i/Rj\/5ue$e:[,%8q(Ins5k.[>*q>SAr*i8j`2lJ%Ll_EFD(BN)m\.*MK[%dAHDUTh,r.!W$ee=8%5ib%_%MUqe'!u..iRk"U\"nFe![]J5@9&ZpP`JWb-.E/UHXL@B9_jSeU7`n$H%_,%&[],]+5fP-aSc7H1t;Epc)rb'8L%3eAVgci+I\gn-c\b[HBk-d="CsD_-%k*+%pb-8T:k75]]T9%eUrLa%MJ5$0pSQ0$icg^qb`6%P,?ZE1*4*`f!B_A3]7ql3+W9>V*t9&%m@7l'*M7H,eu'p>f9du;tgq*fM+pLqej/<[bVnTcasVW)^G5NoGRgXK7MRc]jF$aCljHP%!_2.S_,"haI[q,L?gsk6dhPMdf*lM4C]Ai<`>-2!?H;:c:#&FgaKEG-j*0B,GVZA4^g/oDB4^F*X*]lIs)%GUYLh'\3eU&KjLJGp%?RjcRn#mpT4ej,=j$e/uo;a!G@e0A&Y9=j,YHL1]h1L1+pJ;%DSdI+Doh33S"IuX+e1<+P;@2T^`7smi,eC@@)ufZ53sETX_ic.F%"PpZ/WI_9QbP51*jn;l76%7DPI'[cX:tZ[4-M'T0k7gd'D!3%j_\g*4b[D"Di@4+Or=c=I>f<1ck7W;R]D*?W`k,SD*>!n]J%gXU%epsc<EUG/E0(B`>4D,_4E0Gl@\aQ1Ta,8e=_CE:ZngM]g`XeIO(o/u%UBg4o11HSqo^Cr.8#]r_KuBF(10n5gTE[MJW+GUOCG4%-%"Br`NCSB$AI@-S$`s0i-/g-_\0as+KANLh$:I$,UI9r$6c4R^m<X)a.6gS'_MC(mq6:W01?N4UaI%JPMnJ`*f)(-3R%<(/'b(JW)%!3:",jQ0ZjK%<E1K`.Xt&WHKQT]Ddj;C#r79t&hk[cTh\M=sSMP/Q?"M%J!6A%-&:.F2!rqZg@[Z'EdMh6\>Ph@a9F)enMJZb0>C%bMUOlO&?UK(NHhN(7cg*AUYAjem\sQfg4KD1@.&/"`[ZU@ATU"!KOe\?i8'U&,K.=RtG?QY2np&:@5TJNa@t\=/#%D'IWa@X-XI#%Wg2/`j#PKM)2%83Kt!VJ"EW'=UI*;o`HerbHZ>aM(C2UFL`<0g74[3q[3$W?IgV-J=/_Z?GF''"f2pbo3H%7PXu'+N\'8A_Q/eXZ%iKs#'?%($XiI!$^7]l@X6WV_"1?rXqr&.UI?iX`Z5$+o?f1sEf)jT=J]1O,09Cq6#hF`Vb"jEbj#sPTOlO7a1+sR$K+ekB/;CX>u%[iF:23O3FlW`AiU,l]if<>oFEK0,2%G&Ru]18P%SW'atSN&baI:5;%:&_MID;[QdBj+[4TnBbg7+ZY5`Q3"-c4+k7OE`-9ZdTl*/%,*qDt'Y3-)N%BcG(e/MB)MK0G5S3)lU[XcAq,&&ajCue79V'(f^BG+=XIZ(.OV.h%X6O<:'C`2Ws0&tSg!ShNY4*+K4)gsCB&nA7%fII!_L%g<E&@)=X1lr+boCf?YS]G\hRNOkV"D];5]'?J'B&)Dd>A#9%?]W==nF]l^mRgi6TPkl52"DNk(1.nASDQ)J3<*rmLB0o_%?s)Ga*`gWg<O5fQDc^Q6a#4&Q"ZV=.LGlTc\ACd="K'W,Q)+%#8Q5aq!bS2Fde7Ldm1c5jRh>X?5\I8g83Wh%.tgBhcn/atN2o5"%&28BBL+>q\nm"o/C1l)XdqAP-]XM.j)ZN%K;C_DA80jk^>o_Ug\P+Z)H)FImK;M>g1UGRgNGtt:U\YTb)8c3G+=?NXP]SUUPSF1X%U%91<g,A/]2"MYHrj>8%G-@+i(3#"A7).S.hmmEZ*W't0Qb[%1)<L8'I21$!2u!m?4CHE)L5%Rm^l*T+O3!okW4pE!fEE>,*_kc,%WpXIj26IFC:LNk9:5BB,N'Oqf0uOH#mas/,rlFRr!P`#s^"j#-=;\*X*P:<\J/`AUbcud-3ES]Q"JRC;!I94"rKN2'U]^TL5dibB%1_]XW\8,9COt8#dFLci_75s-6"67@kNV`=E751\NqLeBb2+J_:P>MA%d5].OIdaO)LlCIMH11LK)I0T>c4I!W!D^0cb^r]#!<IL_%\<-P3,9Na:\NU.s'J>#TTmT%e8hIdY<9t4l%cfaI3G6tA=O3K5hD-ZSIo9Ua39%cUIei>[^GrsY:]>iIHYWY+I67Yn[5S=Uq^M-<%iln/714sIJpq#LqJEW:!n=BcDeOSKmYX#n19W/!?X^RadV%@\!0pJ0YjS+J-lER"odH`9nHVg:]UKa!uAVH^d$Dr`>.q^Ki,XEt4%`[MXd$'>Lt![ZAbD;/2E;_..oe5''O5W9Ee\c"]N6aqKCqGDQ1i8X_-Q$iSjIcKlPPO!$"1CRA5Di"/kasiFi$?nU/..YUtiJX^?%;\.Su.pK<u@SqBDHN)l/ZZ`'=oRW;>>t[W%b]Rf?jlG*1=>Uo$6uT*L3^s16J`daC+]Ld3pM0=2>Yo"JB])IsH+H55;H>9],s[7$%F?f>0)l5)[<p/":W'm=@is9J!Jf4on:>uM@ca4U)MItd=^YT<Wpi!>0a*T*NG#LF->a+-hW2T>Re(3(Q(dNc920Ec4'\,%gc/U2'%X0q/B[W?3K:'[bT2Z2U#k.!@:qn:n.56u[3U*&,?'-WsiO)@5GD9.s#j4qh4Z'*ZtE%(e%pG'?nMid4(=q4qI(IuEk&i+g\\M#K<%'6C04pSAt_6p9(!pB]^:i(FO"nT<\4Gq#5"dnUV[5F19"E7hu#*<eVRrn_;N[(sIU(P-lMNebb0B!,B(Hk\I%$q"4M*H<`ea_o"K%La4P1dV1jQ*s)50.HrK[l,eB<bT01(!3S5BDOt^%)&@r$<F/KY(,3.hm_<ip<)YVASY+C_9iNmS2uUti5m,V("Uh2S;fXP7G>QgI%`bXS"3_-PMp>BEC"ITcl->4j$+;sU,'-_a\T!SS]X,^cdQZc/PNJ9lc$Tt_l-j%pi;Ri8hm1*^3+I5,5V7DU3FK0E<>^1@Xl=Rn3%dQF7S7JQ&;29nr.fXY&Tr9@+Y2n<&t(.)++a_:8SW&^rIrLQ#,(g)5I7Vh-Cnp+jl<0,Nq<7tU+g<'`'Ic!Yji>2"0Y&r*f&'!ZR%m?l+Q*aK&E>1REO97ln;p#_^6_qjCXa/m_sk,$LG\6Y^Van-P&PH+kuB6A:Cj)g0:m]?QS80o."4d@qUl0$2,IkOW[lFt&'e8M8f%N+/Kh!3e>gHQ_%lL:]-RW?b&@2+:-`W*GW>V!FgaeE">'*oL&j213gj*n0JcqN2??b,=Xf5El,eI-j%ATdM=22?U,sN\i,<<__Sm%<S_UGs6H&BZ)c9:@J6!,WTU,/:sJO?ZK.na"IOo&[[O40dun$b7X47.(?[GL]8ik&9obZF,cX,AFFRJ,X[MQhbo4$'+q"ZM;gsJ4%NXakiVe-c0^XqW7fB6?7G;D&4SG7BtMTjDA"B<frPP^J:r;!OGqh>5M4oaY#r]jU/D1]?s\c9)<jM]pV^U?.6JWm2-_O)ie5d&D"%BK*sCOGN@6Rb5u$l+Eka<7NJi'AbSHU>U:%/eXu^6U?\OJY(+f"+O6Of;sCO]9'B:1sY>BCqDgcTh6@Wd*eFI@rrI07.8P[(+i"A%<H_@eQqaNad(`KE)NfSLnk2aa]*+9ZpW/ijC;X"?VNJ2_/^OVjddQ">&P]C*&/4_^?V)uod_sp60R%^l1R1QKn&,;"p^-q(ZG((F%W8lULn[d\n==nO&(I+SG74pM*>>;iJ>eePdf[jpVUHrrIe%!Z%_Yb"FUdPMj^6MKeWHr8[c#Ff]V%R`F,YU$pBCm60%(73R9Ajo,%)YMH]8SimiPsLMJPj3:(Y##`Akq<Udq/jr7&O"=-b?;ie5DAqk:8V*MND^`O?-\>,),gbT(nc"/[:JNW^c^*ec,rY01.JcKcs"QI%eI;Xtoid^IaOOPt;e&k5l>KbZl%f`p\8nQm-%TlpEM'$a9A1)JXQa),TWBoQH[9QEH"bFoqM2t:`=an&C)/[V\=u$YLt2S)K#Rqg%,e?&;Z?5oPlu,;X!IV[RN]IXKl'55(>XY$*.&$4kLk%N_JiZ]C2_>>2A[E^sTLM7l^$cacRb)oJmae0",Y$U#aQ0+p6icJO8l+p#%dP@"o1pD2JeBVSpJfpR\S!+`L`=NP81W'Zq;tL#S]7Q$a^?BmSoKoUHSRpA3]OB]`a]3*(A^_oYA.Fg"'r**I[X1nQFTFZk$.NaR%4musNQI`*.8K$^_H233F'"jFaA\oXfI#(b$,U8-q>AJ[<C/0E-Ds9'TT#:JLR:#?%0Xf2T1qgr[G2N+=afl(kF^0baL#4BQY8;Bc%S>P;k4LA]nl[q<!KM/2\,R[[k\2nQ?OO,fl6a6k+-o_O'3#`c]qIi>N;V2m4dL27S!JTsW0pG)6pEY"mdh-B<F!SS.%J6`BSB3)@%Zc)fgk+rCV3`.EbZ6FV3M.HMKbpn^';E$V?$Gr&%kQL#JGZh9M)[AA^U?q6Oi:BJ9S_p4W@</"W/Y%l`PZ9NsOh<NA<^`+i)Xc(V%$>*j+C+$'_%4eIdd@T@6<A,4;]0OOj^Hdj*5=('i)HDTi)'5V>;MWR#Acj><Le)q.W_au`h,LpVliHYFq=M<P539F^=juL]5YRO7%,O[]Xh;l3%X<ik36jl:G"bV*K_O69X<XM)Y/V:<4GuC&u`A^jt^LgboN_!po6.6C9_S4UrJ,qk;.`mbG<-I7M/H2?nf?.0ZauO/T%oKim>8RWH_V@D(U@e-k6Ue^QGj\RNd'2:LmduB9P2A['@"X]NiHsb!H"uW[`N/dZL<!F+t%(g@$QrT;c!Li78_0E4UJDiK?`mL72%Yt8h6m9+sl6b#*G.cq(^_lH-Qbb1E;iK.Y$3*-&>(<hD1YL_+.$Io?]V.G`Q'Fa[mF2!oFD6HA-FtD(g*=&:k76]-R?n.>_+-Yce%Pu#HM(WOR/#C_#@`Po[aB+H=WW7+<7V0dRnrbo<%R"cq1<jA]P:%#R:H$fCe\PQ[W0^0^U@ZWc!%H5r?HD%%$`P(/O\HMGt?Q[eI%,WS!W9T,rC&Q_,,2.h=]9hRfd:phkm4XDZLiF+MfgDidS@EE/:DM%MujaJ5anI=4seCO#MT/k^5ZZK+-78G9,hGZMf1]>e/*BR.#%K=sdS'b6jck&#:dZf#s"C//"\]$)&%P3Qs#C[d=ahVn%h\GW[L;jfEaqBIJ3_1jSsLV!_)9XRW\SU%8I^S]Mq3E<,(d)k^kCg,*#%VbX2G7$S+F0aFgJ.f>"S0G)=BN+/fC!hhu!1tF+kO"3B=@pcq:Ud8ln]5\aJcDh#2,F:TQ>krH:Sd!`/g@.!ZZdrDT/k$>%=Y"YA%Fu"_\J@CU(MO7(V=3Gh?1F#_[O+//LDJ##VHfin4O+<p5`tk8OR_XuZN/D1no.kfb[Z7Bfm.&&lNr:P(*W''Xq064@W'R;Rieo@b%\-B@:erAga!,,=mCoV_L^*T3YqjYUq?:'JGprHG)f4q3CpFO#AN%_]^\!;,t#4d9Pa2QQV3i_/iMV_'%H3(kK6i_%Y0%X4U.Y1Sj%FTV^B/;l)[_a8o;F<rr%'B8hE0[nH`Ctj1CQ[,.@D5?]!8HQIo:\f4[CCqmnWKX,^aDd\[*jhdf0O:j-AA<HmY=G6XmkhAgg#:C:%oR'>]f0n^IM&CBm_@^L\2J,[`/],H=*!L3hB$/`V;%9+7JW_J'#jjVh1JdP.^"s+90VHMAMVn48UqSZ*X%]-L_BARX,)FMW%g[Gp%W8J`G)p6i#fckMTbrn58MWTZ;=d'H$d_gF#1T9e<>'BPT@Y=o]rm8l)<9Z#q:eSnaP?FjB/kJq_D)"Zg[:"^?)LlVrW_57D+6*Gc%##/a<RD^+MZ&U)MJ'H$o>^as#Yl+Emf;76)/.7G?5=*1K5DYW.L9]MG-lE%-F8>"gC^2T<"30`7:7A>d=!B#*0I?78S"TO>^TI&U%D$e?&-tWa*T!EX1MepF0f0",UbCu\KLmp(bngLV:[[QUcjsf]&0M=&`6&CQ@pO=!J+]f1cA"H-dJoM+1?\R]0U+,0iO1ZunM*hq:%jN^LE@7_Yu6T<B`C>o='Y:ai]+VWI0c'nWqqZgTr1ilPR0L@H1?Hb2]<:1$26^-hTYZZs)CbCd"ItS*h/<R15,RM^N8hq-.92[M%%Ou/?X4Rh%dZ\3'Fkb--=!$Es$Gg2rgfXd[b-UZqA17_8q-T)S)<=.A)pD,'O0k6s=XGLIl2]f9@E'O^>7Ia<$-=QF3[<i_B"A[NZ%;^t6L-Bd;QPi!/(FGd&uRS3*8:$6cq%aFJGXL_!\g#W3fN#=2=0Lse"-aT/(?QjT^:_HKqq[ho2B%Fjfs%6<?cRBou#5_\(r,E;@%1hk;D*=u%"$HZ>#A,C;3G^+!"[-1r^nEEK08t&V64P]k`_Ua7*W9'nMVXh>EA:Pt6a_CIKq5cR=0'DUWZ9"`PV<!TGk@Ao]BiWBM%Bh8hS\Cbb1X3;DZ1SG<>7:e\rM>6/=`Cu9PH]p7oG[l,0&b*f@A#1V-N^Wq84S8;Zh+uWXH7Nb0%o4K42:LR[/]#aBrLn@$@4Vse%'2)*!,T<)bM9SXmj0T5*+7;DB4)%8>h:3#NIOCt.4243a/%q-4N2He!!1W=TLJI-1S/Y2PM)*e,gOh=bX\#/Ac'oN(D_Y\u<%!2Q%+78HA3(48h<2U'kQ"!e]:q+BgaADi,Op'1^82:K((R[uNUkC`;mrF!bk,X2pL[rr>34bkO1EdY)1@m-Mat3>;m@pg\k.j?\1$f6%%c%Im`VTh/4p1?/cS!6.tp6(4l%;S4[?j\KnT/8`-*9qX^'$)E^aJ<FJd$KT"N(bZ_W^uZ\CeZ8e*'ga]6BR8V92R]Sp=N)MMM1m6%6n-s5,g0.Yb;Bhr*H4`tDp'0:$L+>X+Q/-[lL$^:nS;g;OUg^+V*A3=l2fstSDMdlTQl]Y3Bejq&#A<bIu&K:mMdhF4f8=&:+A_e%*;N!QRd.O1jbC7nL\(=a2>^8ra^\;@_;:5`W1dJ5;Aj4V4Ka#2:1@Q;8BM-bSUOj_j3XpLW+:DPetN%Wrp:fn+ji4c7'V!,+W0C8%9)u)o=Ej#a$0a[bXQZ2$fA($WI&U@Z8[o/?-&,Z1(h]8''>dd%*X3_EmPGe^d,A*Nn[VVYee6lFXOk(a45)6@WfV2NMYGp^a<d@,%3:!iPbGT>_2R&RkW_ILJX1eQ;f\RRZ70:]H>QR2ti@&DHWI]a?=/cm[<ktDsW=/2fJCEK^JD2osm4_.O!;#%5KH,DS*%\,PRfq/-%'#]kn!AF(iW\gPlI:?3g@;A7ln-WUR-4+bQL7[8U5s%7:g^:4bMe_\*ULFRcXQ%k(GZ=AOV&aeX13)$t+iPkS^=:5_>#VC@ROsM;%%Y"Tr\qg)Z_\V3Ao*:ek:T01YPTSA,Oja6T8`i!2?nB3!kVSEKeaU`2jj803;dk$GE0A4)JblBY#"Cp?q1KM',IfMXVkltfb*XKW%X;[[P]dERcW,U(epXj(9%>L'N!P4>E^Mt::WnafEp=;VpcfXY#\HJ$9jt:4X+(Nq6mO(RRkOjd$%[/tJo.F,<"?f%dnQTFfb^I0b%1PAdp">T#pd+aNB5\>-OCt`)?k[Rq-9MSO4//eCIG(,#c_*$?f@;hRho,ngj],\lS*M[lN/AtkI4_cAEcn)4K-r.M)MT7W\e\0C\%m\AOB'FeJB!Z!Em;"C$9&.C(&W&,Jnq#-q[94nu'rhmpZ>87B7G3_.MYVPnYrIg(G7o`%GYr0+0iY3k1d(FjEJ;7!r,&ZCErS7\l%XEc/Z-:BhEG3G`qe8B\@PgL*\P%:"i,*$424?pauS;_Ki0EkT8T+jcJFCpo^NX9#?PmO@7-eR`aW9$a8%15$]q3-$5W%u2K.X3hu%V,VBL%E"FZF>!fW.mB-U8t*JXC7BfjP8DeN-I9UX]DTd9.D`a!T/)3eQ"P1hHe[A.38+16NP(oG(m$MRB3Lu_EVgWa1K5)3ZE5\b%=sk?=4A*@oY<+N?%?G#A1.Cs1L(c2YJ0_EtS!oJ\?a[A6o@XuhTWpTR+#Xueditf5_QYJiV&833#E<)IdE&u>k=5#dXbc4o0CnH<%.h(0Ci@(%'Su;"[UBZj@7Y0X35Rqch%0]WS#EbL1GWpN/+TVlQqFHHBOSR^V>%BQcXD1d/8L@/Ecb$8NUm#/jD3#((.Tp&pClO]=%hSQ[K#o$ESI@lq*RBW,+DgS:]<HG$LFM:"B8OsJC[UtW6pRe6[(3#bZ;8%/q<EEK:RR$5g#"sYWDoqi-(W:4[grUk4]5U/9a0Vt_%=8PMuii61VG4Zpe/N77:-U(24)3*nI?m@AI+I-&4r]4>bP/t=%2\9,LM#95Td'U6^(Mi,r8!9fB!kL&\/*`,L!=<UPL,456cmTX?%-ooeLFg7LeU,0f2as0]'M]HWqZK+<^`n<o82C*PLkl*':?aM7M^E/(<5ImPr1..^D$>a7;%sU22;^BEeP^?1%@5UdRh!(4a6I7Ru%(Lm+jZZq+K2=VKZ)-p#1E_4uPG!#MGNmcWP=7h;4_nfVO(KQDrP2`%*kjg#J/5Ge--9WspTi#GJRR*3Lq[Sj9)Kt$!Pcd,e@A^Vu%.Zs(S@,:Prb-q(%=Ldn.ou]I^KLT70XF6/?Vp1[)DRYZQR1c2#iLJ1eJ%!aO3iC9XqWSc-P!NV?nO2"Z9'6!k-eDH6:fFN^iP<*?%,+DiGN-I#]2U(7iI.)EpbZXChWPmc\R2EJ`93@iQCa>U@$rBEkQVZ/9Qe]ll\ef>Y>mgR<0"^h]Tb\p.ol>]ngBgHYPUQE_U^\g[%,$$e5bah=<`:E#ifHAO2!hm)igTB`"[$r9cp6)L+:PFk9WqBKCdRI,<H^/-1_`R)D-okGJ\p\]V9kr3Oh**mXhddiGS%m$!aIK&)%7Y5d<GoeD:focY.%5KDpaO5tUp6d0un2S&5HV.JS\:,\S1kN[=PXiV%;/>+XGmC,hP_)"N\PqZb,g3[KB$4r5D!<b(ehob$4P+4N%4(hU`UQ_;_rupt'Sr<AaB>m#N;tH5lXT4L0VrU%**Bj#GY]b>-Ajh+@[\g$8;$0AQmh#H19!t`U8i@U-lgF/(Cr47TbU)@nQQmrM%X=M2ipUoL](c5@>1AF?F\S2!'f-;RLD\/_`QCGsmE70*p9b\tY2gbDBjj"Gfhr)sEAT^.pg'cSKVq8RdnXa#SrjjBhMFlr4=G]UH%>&(7mdW=D;)$L?M.pl9/WS_:E\P6PlDB3/(ZT2ap)WP.\<Dk3GIm$E"$Hjk2XI!r5oYr:P]s#"ap6kQ6A\I?RKLsScT\_b9OclXp%rgJQ.USu*RZ*R#&b6Fi79Z/]IA[=)5nN7C+V3msI'1Q9Y8!:blhe^SAg3Q3!f-G\W9?c[2VY\1V@Jn$,8i'6]Zk2Pg*%]B0[HP%l%bo^[LfGTl$YL2D']g64NO#],A2!7QJ`n**2[-c-aXHLu7d8M6[-V<beDq\7bkLO0Nr`7Ug[V"(AkJ&jR&#n#(Mn%49Zao[0IRmW;%Ap:@0agI9D=?.aMT^F=qaMHXd=rHdBh["%bRZ\_;hUqWT-)rUWfC2Gu=h#D6=2aBDIA:G)--(,pG1`6n8*-B9\A6_AOk[ER(X=TY%m$-lGCDe!NQ*Hj5FeVdS7,PIMBY>nB@.J0bcjr[%:[99g,a_^rXld''X&@nfTQm>';%/4j+)@o;1G0C)Je-RU?T<igY=\bPY<Qa2%<.LmTd.H'gZ`K"RK-0Xi[Eppu_I1HYHN\MY))k0\A-"d&p8VR.HBC(MH],?p-ZDG"hm!TkM(^VURVu,fE@'oa8QJVkg6"M_[]+!7%)u&GgaS!O:g+Tj=I.o9Yr:JrTJ,/%frq"#\J,8E]+9)/T]-%%C(JSOiq!7O<G<c&siRe,+q3MW\If9#5s$r78P^E1Lhu2#rs7oIj%$O.C1TE~>%AI9_PrivateDataEnd